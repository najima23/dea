var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.198,1,0.92]],["body/components/AppComponent.html",[0,0.34,1,1.663,2,1.649,3,0.243,4,0.193,5,1.241,6,1.559,7,1.359,8,1.359,9,0.218,10,4.021,11,1.359,12,1.737,13,1.655,14,3.341,15,1.576,16,6.512,17,1.506,18,5.926,19,0.323,20,1.035,21,6.512,22,0.561,23,0.018,24,0.942,25,1.887,26,1.299,27,3.254,28,0.776,29,4.668,30,0.497,31,0.529,32,0.269,33,0.122,34,4.668,35,3.077,36,1.511,37,3.839,38,4.668,39,2.09,40,2.812,41,2.812,42,3.077,43,3.595,44,4.668,45,2.332,46,4.021,47,2.77,48,4.668,49,4.668,50,2.09,51,2.332,52,3.14,53,4.565,54,3.839,55,5.106,56,3.341,57,3.839,58,2.473,59,3.277,60,4.668,61,1.359,62,1.725,63,1.649,64,1.359,65,1.821,66,1.359,67,0.843,68,1.359,69,1.186,70,1.649,71,1.806,72,1.133,73,1.422,74,1.186,75,1.725,76,1.083,77,1.241,78,1.133,79,1.241,80,1.186,81,1.422,82,1.133,83,1.359,84,1.186,85,1.422,86,1.186,87,1.133,88,1.359,89,1.186,90,1.422,91,1.422,92,1.299,93,1.422,94,1.083,95,1.359,96,1.083,97,1.359,98,1.133,99,1.422,100,1.034,101,1.186,102,1.725,103,1.186,104,1.422,105,1.034,106,0.529,107,1.133,108,1.186,109,1.359,110,1.359,111,0.013,112,0.013]],["title/modules/AppModule.html",[113,2.135,114,2.659]],["body/modules/AppModule.html",[0,0.369,1,1.781,3,0.195,4,0.155,9,0.175,13,0.791,23,0.018,26,1.041,30,0.834,31,0.424,52,1.982,72,1.243,74,1.726,76,1.575,80,1.726,82,1.649,87,1.649,89,1.767,94,1.575,96,1.613,98,0.908,100,1.54,101,1.301,103,1.767,105,1.391,106,0.58,111,0.012,112,0.012,114,5.485,115,1.767,116,2.713,117,3.223,118,3.223,119,3.223,120,3.223,121,4.399,122,4.399,123,2.713,124,1.982,125,1.869,126,2.881,127,3.085,128,2.887,129,3.223,130,3.741,131,2.887,132,4.412,133,3.596,134,2.627,135,3.741,136,3.741,137,3.741,138,3.741,139,3.741,140,2.881,141,3.741,142,2.881,143,3.596,144,2.423,145,3.741,146,3.741,147,3.741,148,3.223,149,3.223,150,3.945,151,2.881,152,3.317,153,3.741,154,3.223,155,5.121,156,1.982,157,5.121,158,3.945,159,3.596,160,2.759,161,4.409,162,3.741,163,3.741,164,2.42,165,2.881,166,2.881,167,3.741,168,3.741,169,2.109,170,3.741,171,3.223,172,3.945,173,3.741,174,3.741,175,2.881,176,2.423,177,3.317,178,3.741,179,4.412,180,5.121,181,3.223,182,3.741,183,3.741,184,2.109,185,3.741,186,3.085,187,2.109,188,1.767,189,3.223,190,0.95,191,3.741,192,3.741,193,3.741,194,3.741,195,3.741,196,3.741,197,3.741,198,3.741,199,3.741,200,3.741,201,3.741,202,3.741,203,3.741,204,3.223,205,3.741,206,3.741,207,3.741,208,1.193,209,0.791,210,5.121,211,4.327,212,3.223,213,3.741,214,5.121,215,3.223,216,2.627,217,3.741,218,3.223,219,5.03,220,2.881,221,3.741,222,3.741,223,1.193]],["title/modules/AppRoutingModule.html",[113,2.135,121,2.453]],["body/modules/AppRoutingModule.html",[3,0.307,4,0.244,9,0.275,23,0.018,30,0.727,31,0.667,32,0.34,33,0.153,111,0.015,112,0.015,115,2.782,121,4.421,128,3.319,131,3.847,142,5.257,143,5.06,144,3.814,209,1.245,224,5.888,225,5.888,226,5.888,227,5.888]],["title/injectables/AuthGuard.html",[161,2.659,228,1.531]],["body/injectables/AuthGuard.html",[3,0.252,4,0.2,9,0.226,14,2.726,19,0.334,22,0.729,23,0.018,28,1.007,30,0.777,31,0.548,32,0.279,33,0.126,36,1.122,67,0.862,111,0.014,112,0.014,144,3.133,158,5.345,159,5.018,160,2.285,161,4.256,164,2.285,190,1.54,204,4.167,209,1.023,219,4.167,223,1.543,228,2.451,229,2.726,230,4.167,231,3.417,232,6.619,233,1.166,234,2.317,235,5.703,236,6.619,237,1.166,238,4.836,239,7.292,240,3.92,241,4.836,242,1.472,243,1.406,244,4.836,245,6.939,246,2.429,247,6.939,248,4.836,249,6.939,250,0.931,251,4.836,252,4.836,253,2.166,254,1.862,255,3.396,256,4.836,257,2.914,258,2.057,259,4.836,260,3.133,261,4.836,262,4.836,263,2.429,264,2.726,265,4.836,266,4.836,267,4.836,268,6.061,269,4.836,270,4.836,271,4.836,272,4.836,273,4.836,274,6.619,275,6.619,276,6.061,277,4.836,278,6.061,279,6.061,280,4.836,281,4.836,282,2.914,283,3.133,284,4.836,285,4.836,286,4.836,287,4.836]],["title/modules/AuthModule.html",[113,2.135,288,2.917]],["body/modules/AuthModule.html",[3,0.309,4,0.246,9,0.277,23,0.018,30,0.73,31,0.672,32,0.342,33,0.155,111,0.016,112,0.016,115,2.802,127,3.573,128,3.343,131,3.863,186,4.129,187,3.343,288,5.279,289,5.93]],["title/components/CytoGraphComponent.html",[0,0.198,69,0.962]],["body/components/CytoGraphComponent.html",[0,0.305,1,0.91,2,1.426,3,0.195,4,0.155,5,1.363,6,1.952,7,1.091,8,1.091,9,0.175,11,1.091,12,1.703,13,1.622,19,0.259,20,0.896,22,0.837,23,0.018,25,1.515,26,1.043,28,1.22,30,0.67,31,0.425,32,0.216,33,0.098,36,0.869,61,1.091,62,1.493,63,1.426,64,1.091,65,1.671,66,1.091,67,0.894,68,1.091,69,1.597,70,1.831,71,1.562,72,0.91,73,1.142,74,0.952,75,1.493,76,0.869,77,0.996,78,0.91,79,0.996,80,0.952,81,1.142,82,0.91,83,1.091,84,0.952,85,1.142,86,0.952,87,0.91,88,1.091,89,0.952,90,1.142,91,1.142,92,1.043,93,1.142,94,0.869,95,1.091,96,0.869,97,1.091,98,0.91,99,1.142,100,0.83,101,0.952,102,1.493,103,0.952,104,1.142,105,0.83,106,0.425,107,0.91,108,0.952,109,1.091,110,1.091,111,0.012,112,0.012,123,3.096,209,0.793,233,0.987,234,2.303,237,0.721,242,1.245,243,1.189,250,1.209,258,2.18,290,5.698,291,4.792,292,2.887,293,1.084,294,3.295,295,3.089,296,3.542,297,5.994,298,5.994,299,2.89,300,4.841,301,3.949,302,4.104,303,4.417,304,5.035,305,4.417,306,3.228,307,4.841,308,5.035,309,4.413,310,4.502,311,4.071,312,3.228,313,3.949,314,3.747,315,1.985,316,3.786,317,4.417,318,4.104,319,3.6,320,3.228,321,5.414,322,3.228,323,4.417,324,5.234,325,5.127,326,5.127,327,2.716,328,4.417,329,1.237,330,4.417,331,4.417,332,5.414,333,3.747,334,2.112,335,3.747,336,3.747,337,3.228,338,4.502,339,4.417,340,4.104,341,3.6,342,3.6,343,2.887,344,2.427,345,1.515,346,2.631,347,3.228,348,1.375,349,3.228,350,1.771,351,3.228,352,2.112,353,3.228,354,2.258,355,1.426,356,0.996,357,1.515,358,3.228,359,4.417,360,3.228,361,2.887,362,2.887,363,2.631,364,2.427,365,2.887,366,3.228,367,3.228]],["title/injectables/CytoGraphService.html",[228,1.531,311,2.453]],["body/injectables/CytoGraphService.html",[3,0.18,4,0.143,9,0.161,14,1.944,19,0.238,20,0.845,22,0.768,23,0.018,24,1.129,25,2.452,26,1.687,28,1.154,30,0.516,31,0.391,32,0.199,33,0.09,47,3.119,52,1.827,54,3.622,57,4.137,67,0.689,106,0.548,111,0.011,112,0.011,208,1.934,209,1.492,223,1.1,228,1.957,229,1.944,233,0.931,234,2.469,237,1.076,242,1.175,243,1.123,246,2.343,250,1.076,254,1.327,257,2.077,290,5.434,291,4.57,296,3.152,311,3.135,319,2.421,329,1.116,348,2.676,355,1.346,356,1.287,363,2.421,368,2.656,369,4.818,370,4.818,371,4.818,372,3.728,373,5.224,374,4.17,375,4.17,376,4.17,377,3.977,378,2.97,379,4.65,380,2.564,381,2.97,382,4.17,383,2.97,384,4.17,385,2.97,386,3.927,387,4.92,388,1.694,389,2.97,390,2.97,391,3.728,392,4.17,393,4.17,394,4.17,395,4.17,396,5.705,397,4.818,398,5.224,399,5.705,400,4.17,401,6.332,402,3.591,403,4.027,404,3.418,405,4.17,406,4.17,407,3.398,408,4.671,409,1.175,410,3.653,411,4.818,412,2.97,413,5.224,414,5.502,415,4.671,416,2.97,417,4.484,418,4.65,419,2.97,420,1.694,421,2.97,422,4.818,423,2.97,424,1.152,425,1.723,426,4.17,427,2.97,428,3.927,429,2.97,430,2.97,431,2.97,432,2.97,433,2.97,434,2.97,435,2.421,436,2.97,437,4.17,438,2.97,439,2.656,440,2.656,441,2.97,442,2.97,443,2.421,444,1.466,445,2.97,446,2.077,447,2.421]],["title/classes/DEAException.html",[33,0.099,448,2.659]],["body/classes/DEAException.html",[3,0.287,4,0.228,9,0.257,19,0.38,20,1.145,22,0.872,23,0.018,24,1.587,28,1.205,32,0.317,33,0.143,52,3.472,67,0.782,111,0.015,112,0.015,231,3.695,237,1.058,242,1.335,243,1.275,387,5.853,448,4.603,449,2.912,450,4.736,451,5.853,452,5.708,453,6.555,454,6.555,455,5.497,456,5.497,457,5.497,458,4.736,459,4.736,460,5.497,461,5.497]],["title/interfaces/DeaArray.html",[462,0.662,463,1.61]],["body/interfaces/DeaArray.html",[3,0.231,4,0.183,9,0.207,19,0.464,20,1,22,0.689,23,0.018,24,1.512,32,0.387,33,0.115,36,1.473,39,3.007,106,0.761,111,0.013,112,0.013,190,1.706,209,1.595,283,2.865,355,1.935,380,2.343,388,2.222,409,1.39,444,1.881,446,2.665,462,1.109,463,2.957,464,1.981,465,1.881,466,2.665,467,2.865,468,3.472,469,3.007,470,4.045,471,3.92,472,2.09,473,2.585,474,1.548,475,2.09,476,1.881,477,3.106,478,3.426,479,4.113,480,3.106,481,4.021,482,2.435,483,3.106,484,2.09,485,3.106,486,1.981,487,2.21,488,3.106,489,2.21,490,3.106,491,3.106,492,3.106,493,2.865,494,2.865,495,2.865,496,2.865,497,3.106,498,3.364,499,3.106,500,1.881,501,3.106,502,3.106,503,3.709,504,3.106,505,3.106,506,3.106,507,3.709,508,3.709,509,3.709,510,3.106,511,3.106,512,3.106,513,3.106,514,3.106,515,2.865,516,3.106,517,4.021,518,3.106,519,3.45,520,2.564,521,3.033,522,4.021,523,3.106,524,3.106,525,3.106,526,3.106,527,3.106,528,4.021,529,3.106,530,4.021,531,4.349,532,2.665,533,2.865,534,2.865,535,2.09,536,3.106,537,2.865,538,3.106,539,2.865,540,2.865,541,3.106,542,2.315,543,3.106,544,3.106,545,3.106,546,3.106]],["title/components/DeaComponent.html",[0,0.198,72,0.92]],["body/components/DeaComponent.html",[0,0.212,1,0.494,2,0.906,3,0.106,4,0.135,5,0.541,6,0.68,7,0.593,8,0.593,9,0.095,11,0.593,12,1.574,13,1.493,15,0.866,17,0.827,19,0.225,20,0.569,22,0.814,23,0.018,24,1.261,25,2.527,26,1.739,27,2.322,28,1.237,30,0.692,31,0.231,32,0.117,33,0.053,35,2.688,36,1.078,37,2.635,42,1.538,43,2.508,45,1.627,46,5.25,47,2.464,50,2.427,51,1.627,52,1.725,53,1.569,54,2.635,57,3.01,58,1.725,59,2.286,61,0.593,62,0.948,63,0.906,64,0.593,65,1.236,66,0.593,67,0.723,68,0.593,69,0.517,70,1.132,71,0.992,72,1.128,73,0.62,74,0.827,75,0.948,76,0.472,77,1.351,78,0.494,79,1.082,80,0.517,81,0.62,82,0.494,83,0.593,84,0.517,85,0.62,86,0.517,87,0.494,88,0.593,89,0.517,90,0.992,91,0.62,92,0.567,93,0.62,94,0.472,95,0.593,96,0.472,97,0.593,98,0.494,99,0.62,100,0.451,101,0.517,102,0.948,103,0.517,104,0.62,105,0.451,106,0.231,107,0.494,108,0.827,109,0.593,110,0.593,111,0.007,112,0.007,154,1.754,156,1.079,190,0.517,208,1.038,209,1.146,233,0.627,234,1.424,237,0.627,242,0.988,243,0.944,250,1.316,253,1.822,254,0.784,258,2.304,291,1.319,293,0.689,296,1.148,301,2.508,302,2.856,307,3.58,309,3.995,310,3.133,311,3.01,313,3.133,315,1.079,316,1.319,318,1.43,327,1.725,329,1.276,338,3.133,344,1.319,345,2.191,348,2.342,350,2.561,352,3.055,354,2.451,356,0.866,364,1.319,372,3.58,377,3.055,379,1.43,386,1.43,402,0.962,403,3.014,404,2.62,409,1.676,410,1.227,418,1.43,420,1.139,424,1.087,425,2.953,428,2.286,435,1.43,447,1.43,451,3.914,452,4.694,458,3.504,459,1.754,473,0.784,474,1.626,484,0.962,498,2.155,515,2.109,520,0.912,521,2.462,547,1.754,548,1.424,549,4.068,550,3.256,551,4.068,552,4.068,553,4.068,554,4.068,555,4.068,556,4.068,557,4.901,558,4.068,559,3.133,560,4.068,561,3.263,562,4.647,563,2.805,564,4.647,565,4.004,566,1.705,567,3.133,568,1.725,569,3.58,570,3.58,571,3.58,572,4.068,573,4.004,574,4.004,575,4.068,576,4.004,577,2.036,578,3.062,579,3.428,580,3.256,581,2.036,582,2.036,583,2.036,584,2.036,585,2.805,586,4.004,587,2.036,588,1.754,589,2.036,590,2.036,591,2.036,592,2.036,593,2.805,594,2.036,595,1.754,596,2.036,597,2.036,598,2.036,599,2.036,600,2.036,601,2.036,602,2.036,603,2.036,604,2.805,605,2.036,606,3.133,607,2.036,608,3.133,609,2.036,610,2.036,611,4.004,612,2.462,613,2.805,614,2.036,615,2.805,616,2.036,617,2.036,618,4.068,619,3.256,620,4.647,621,2.036,622,2.036,623,3.133,624,2.036,625,3.256,626,2.036,627,2.036,628,3.504,629,2.036,630,1.148,631,2.036,632,2.805,633,1.43,634,1.569,635,2.036,636,2.036,637,1.754,638,1.754,639,1.754,640,2.508,641,1.569,642,1.754,643,3.133,644,1.754,645,2.036,646,2.036,647,2.036,648,2.036,649,2.155,650,2.036,651,2.036,652,4.068,653,5.91,654,2.036,655,1.569,656,2.036,657,1.227,658,2.036,659,2.036,660,2.036,661,2.036,662,1.569,663,2.036,664,2.036,665,3.256,666,1.569,667,4.068,668,3.256,669,2.036,670,1.319,671,2.036,672,2.036,673,2.036,674,3.256,675,3.256,676,2.036,677,2.036,678,5.082,679,3.256,680,3.256,681,3.256,682,4.647,683,2.036,684,4.647,685,2.036,686,2.036,687,2.805,688,2.036,689,1.569,690,2.036,691,2.036,692,2.036,693,2.036,694,2.036,695,2.036,696,4.174,697,2.109,698,4.004,699,2.805,700,2.805,701,2.508,702,2.508,703,2.805,704,2.508,705,2.508,706,3.58,707,3.256,708,4.004,709,4.669,710,4.647,711,2.036,712,3.256,713,4.647,714,1.384,715,1.317,716,1.317,717,1.725,718,2.286,719,1.835,720,2.508,721,2.508,722,3.256,723,2.805,724,2.805,725,2.805,726,2.805,727,3.256,728,2.805,729,2.805,730,2.805,731,3.265,732,2.036,733,2.196,734,1.569,735,2.8,736,1.754,737,1.754,738,1.569,739,2.401,740,1.079,741,4.004,742,3.292,743,1.835,744,2.451,745,3.265,746,2.805,747,1.227,748,1.922,749,1.754,750,1.754,751,1.569,752,1.569,753,1.754,754,3.01,755,2.508,756,2.508,757,1.754,758,1.754,759,1.754,760,1.148,761,1.754,762,1.835,763,1.569,764,1.754,765,1.754,766,1.754,767,1.754,768,1.754,769,1.754,770,1.754,771,2.805,772,1.754,773,2.036,774,1.148,775,1.148,776,1.754,777,3.914,778,1.319,779,1.079,780,1.569,781,1.569,782,1.569,783,1.43,784,1.569,785,1.754,786,1.227,787,1.754,788,2.805,789,1.754,790,1.148,791,1.754,792,1.754,793,2.805,794,1.754,795,1.754,796,2.805,797,1.835,798,2.805,799,4.004,800,1.754,801,1.754,802,1.569,803,1.754,804,1.754]],["title/interfaces/DeaLink.html",[462,0.662,470,2.282]],["body/interfaces/DeaLink.html",[3,0.228,4,0.181,9,0.204,19,0.462,20,0.992,22,0.804,23,0.018,24,1.528,32,0.385,33,0.114,36,1.464,39,2.992,106,0.805,111,0.013,112,0.013,190,1.698,209,1.592,283,2.829,355,2.094,380,2.314,388,2.208,409,1.379,444,1.857,446,2.631,462,1.102,463,2.841,464,1.956,465,1.857,466,2.631,467,2.829,468,3.273,469,1.956,470,3.802,471,3.557,472,3.157,473,2.783,474,1.528,475,2.064,476,1.857,477,3.067,478,3.416,479,4.088,480,3.067,481,3.988,482,2.415,483,3.067,484,2.064,485,3.067,486,1.956,487,2.182,488,3.067,489,2.182,490,3.067,491,3.067,492,3.067,493,2.829,494,2.829,495,2.829,496,2.829,497,3.067,498,3.343,499,3.067,500,1.857,501,3.067,502,3.067,503,3.679,504,3.067,505,3.067,506,3.067,507,3.679,508,3.679,509,3.679,510,3.067,511,3.067,512,3.067,513,3.067,514,3.067,515,2.829,516,3.067,517,3.988,518,3.067,519,3.421,520,2.543,521,3.008,522,3.988,523,3.067,524,3.067,525,3.067,526,3.067,527,3.067,528,3.988,529,3.067,530,3.988,531,4.328,532,2.631,533,2.829,534,2.829,535,2.064,536,3.067,537,2.829,538,3.067,539,2.829,540,2.829,541,3.067,542,2.296,543,3.067,544,3.067,545,3.067,546,3.067]],["title/modules/DeaModule.html",[113,2.135,152,2.453]],["body/modules/DeaModule.html",[3,0.268,4,0.212,9,0.24,23,0.018,30,0.83,31,0.581,32,0.296,33,0.134,69,1.88,70,1.427,72,1.796,111,0.014,112,0.014,115,2.424,116,3.33,123,3.33,124,2.718,125,2.563,127,3.787,128,2.892,131,3.544,142,4.842,144,3.323,150,4.842,151,4.842,152,4.968,186,3.787,187,2.892,291,3.323,579,4.457,642,4.419,805,4.419,806,4.419,807,4.419,808,5.13,809,4.842,810,5.13,811,5.416,812,4.419,813,4.419,814,5.416,815,4.419,816,5.416,817,4.419,818,5.416,819,4.419,820,5.416,821,4.419,822,5.416,823,4.419,824,5.416,825,3.952,826,4.419]],["title/interfaces/DeaNode.html",[462,0.662,471,2.135]],["body/interfaces/DeaNode.html",[3,0.228,4,0.181,9,0.205,19,0.462,20,0.994,22,0.76,23,0.018,24,1.544,32,0.386,33,0.114,36,1.466,39,2.996,106,0.758,111,0.013,112,0.013,190,1.7,209,1.593,243,1.32,283,2.838,355,2.013,380,2.321,388,2.212,409,1.382,444,1.863,446,2.64,462,1.104,463,2.845,464,1.962,465,1.863,466,2.64,467,2.838,468,3.276,469,1.962,470,3.428,471,3.771,472,2.07,473,2.785,474,2.341,475,3.161,476,1.863,477,3.076,478,3.418,479,4.094,480,3.076,481,3.996,482,2.42,483,3.076,484,2.07,485,3.076,486,1.962,487,2.189,488,3.076,489,2.189,490,3.076,491,3.076,492,3.076,493,2.838,494,2.838,495,2.838,496,2.838,497,3.076,498,3.348,499,3.076,500,1.863,501,3.076,502,3.076,503,3.686,504,3.076,505,3.076,506,3.076,507,3.686,508,3.686,509,3.686,510,3.076,511,3.076,512,3.076,513,3.076,514,3.076,515,2.838,516,3.076,517,3.996,518,3.076,519,3.428,520,2.548,521,3.015,522,3.996,523,3.076,524,3.076,525,3.076,526,3.076,527,3.076,528,3.996,529,3.076,530,3.996,531,4.334,532,2.64,533,2.838,534,2.838,535,2.07,536,3.076,537,2.838,538,3.076,539,2.838,540,2.838,541,3.076,542,2.301,543,3.076,544,3.076,545,3.076,546,3.076]],["title/injectables/DeaService.html",[228,1.531,579,2.282]],["body/injectables/DeaService.html",[3,0.152,4,0.12,9,0.136,14,1.638,19,0.201,22,0.814,23,0.018,24,1.489,25,1.175,26,0.809,27,1.452,28,1.102,30,0.637,31,0.329,32,0.168,33,0.076,52,3.646,67,0.797,111,0.01,112,0.01,190,1.828,208,1.905,209,1.553,223,1.905,228,1.731,229,1.638,233,0.824,242,1.361,243,1.3,246,1.864,250,1.276,257,1.751,258,2.16,315,2.691,356,1.661,379,4.195,409,1.361,420,1.961,424,1.995,425,3.122,448,2.041,451,5.376,452,5.494,474,2.442,503,1.883,557,5.147,561,4.195,563,3.687,565,4.828,579,3.061,585,3.687,586,4.828,612,3.165,628,4.828,643,5.584,644,5.831,649,2.691,657,3.061,666,2.239,670,3.291,696,2.239,714,2.383,715,1.731,716,2.054,717,2.691,718,4.537,719,3.159,720,4.317,721,4.602,827,2.504,828,4.28,829,5.604,830,5.604,831,5.604,832,4.28,833,4.28,834,4.28,835,2.906,836,2.906,837,2.906,838,2.906,839,2.906,840,4.28,841,2.906,842,2.906,843,2.906,844,4.28,845,3.061,846,2.906,847,4.28,848,2.906,849,2.906,850,2.906,851,2.239,852,2.906,853,2.906,854,2.906,855,2.906,856,2.906,857,4.204,858,4.28,859,2.906,860,5.974,861,3.522,862,4.28,863,5.08,864,4.28,865,4.28,866,4.28,867,4.28,868,5.604,869,4.28,870,2.906,871,5.08,872,5.604,873,2.906,874,2.906,875,5.604,876,4.28,877,4.28,878,2.906,879,6.768,880,2.906,881,1.54,882,2.906,883,5.08,884,5.604,885,3.687,886,2.906,887,2.504,888,4.28,889,2.906,890,5.08,891,2.906,892,2.906,893,2.906,894,5.08,895,1.236,896,6.249,897,2.906,898,2.906,899,3.687,900,4.28,901,4.28,902,2.906,903,2.906,904,2.906,905,2.906,906,2.906,907,2.772,908,4.28,909,2.772,910,2.906,911,2.413,912,2.906,913,2.906,914,2.906,915,2.906,916,2.906,917,3.159,918,2.906,919,5.08,920,2.906]],["title/classes/DemoForceDirectedLayout.html",[33,0.099,921,2.135]],["body/classes/DemoForceDirectedLayout.html",[0,0.228,3,0.119,4,0.094,5,0.946,9,0.106,12,0.788,13,0.482,15,0.606,17,0.904,19,0.246,23,0.018,24,0.718,26,0.99,28,0.379,30,0.688,31,0.403,32,0.252,33,0.114,35,2.535,36,1.707,39,2.215,40,2.144,41,1.373,42,2.068,45,1.138,47,2,50,1.96,51,2.472,56,2.006,58,1.207,65,0.946,67,0.324,76,0.528,77,1.427,78,1.303,79,0.946,100,0.505,101,1.112,106,0.403,108,0.579,111,0.008,112,0.008,156,1.207,160,1.681,169,3.025,184,2.006,188,1.076,190,1.562,208,1.578,209,1.53,211,2.144,223,2.318,231,1.284,233,0.685,234,2.503,237,0.438,242,0.553,243,0.528,246,0.836,250,0.438,263,0.797,264,1.284,282,2.144,293,0.482,294,2.006,299,1.284,329,0.765,334,2.467,345,2.17,348,1.969,350,1.076,355,1.218,356,1.957,357,0.921,388,2.151,402,1.681,409,0.864,420,0.797,424,1.792,444,0.969,449,1.207,462,0.398,463,2.104,465,1.513,468,2.337,469,2.403,472,2.687,473,1.685,474,0.797,475,1.076,476,1.861,478,2.807,482,2.526,486,1.02,489,1.138,500,0.969,520,1.02,535,1.076,542,0.921,568,1.885,578,2.144,612,1.207,630,1.284,714,1.513,715,1.439,716,1.439,733,1.076,739,1.076,740,1.207,743,1.284,748,1.076,760,2.006,762,1.284,774,1.284,779,2.319,790,1.284,797,1.284,845,1.373,861,1.284,881,1.207,895,0.969,917,1.284,921,2.467,922,1.207,923,2.835,924,2.305,925,2.278,926,2.278,927,2.305,928,1.476,929,1.373,930,2.006,931,1.476,932,1.476,933,2.835,934,1.476,935,1.476,936,2.472,937,1.138,938,1.373,939,2.843,940,1.476,941,1.373,942,2.144,943,1.373,944,1.476,945,2.305,946,2.305,947,1.476,948,1.476,949,1.476,950,2.305,951,1.476,952,1.476,953,3.204,954,1.476,955,2.305,956,1.476,957,1.476,958,1.476,959,1.476,960,1.476,961,1.284,962,1.284,963,1.476,964,1.476,965,1.476,966,1.476,967,3.476,968,1.476,969,1.476,970,1.476,971,1.476,972,1.476,973,1.476,974,1.373,975,1.476,976,1.476,977,1.476,978,1.476,979,1.476,980,1.476,981,1.476,982,1.476,983,2.305,984,1.476,985,1.476,986,1.138,987,1.476,988,1.476,989,1.476,990,2.144,991,1.6,992,1.476,993,1.373,994,2.305,995,1.284,996,1.476,997,1.476,998,1.476,999,1.476,1000,1.476,1001,1.476,1002,1.476,1003,2.835,1004,1.476,1005,2.835,1006,1.476,1007,2.835,1008,1.476,1009,2.144,1010,2.305,1011,1.476,1012,1.476,1013,1.476,1014,1.476,1015,1.373,1016,1.373,1017,2.305,1018,2.835,1019,1.476,1020,1.476,1021,1.476,1022,1.476,1023,1.476,1024,1.476,1025,2.835,1026,2.835,1027,1.476,1028,1.476,1029,1.476,1030,1.476,1031,2.305,1032,1.476,1033,2.835,1034,1.476,1035,2.305,1036,2.305,1037,1.476,1038,1.476,1039,1.476,1040,1.476,1041,1.476,1042,1.476,1043,1.284,1044,1.476,1045,2.305,1046,1.476,1047,1.476,1048,1.476,1049,1.476,1050,1.476,1051,1.476,1052,2.305,1053,1.476,1054,1.373,1055,2.305,1056,2.305,1057,4.092,1058,2.305,1059,2.305,1060,2.305,1061,3.982,1062,2.305,1063,2.305,1064,2.305,1065,1.476,1066,2.835,1067,1.476,1068,3.476,1069,1.476,1070,2.305,1071,2.835,1072,1.476,1073,2.637,1074,2.637,1075,1.476,1076,3.476,1077,2.305,1078,2.305,1079,1.476,1080,1.476,1081,1.476,1082,1.476,1083,1.476,1084,1.476,1085,1.476,1086,1.476,1087,2.305,1088,1.373,1089,1.476,1090,2.305,1091,2.006,1092,2.835,1093,2.835,1094,2.835,1095,2.835,1096,2.98,1097,1.476,1098,1.476,1099,1.476,1100,1.476,1101,2.637,1102,2.305,1103,1.138,1104,1.476,1105,1.476,1106,1.476,1107,1.476,1108,1.476,1109,1.476,1110,1.476,1111,1.476,1112,3.204,1113,3.476,1114,1.476,1115,2.305,1116,3.476,1117,1.476,1118,2.305,1119,1.476,1120,1.373,1121,1.476,1122,1.476,1123,1.373,1124,1.476,1125,1.373,1126,2.305,1127,1.476,1128,1.476,1129,2.305,1130,1.476,1131,1.476,1132,1.476,1133,2.305,1134,1.476,1135,1.476,1136,1.373,1137,2.835,1138,1.476,1139,1.476,1140,1.476,1141,1.476,1142,1.476,1143,1.476,1144,1.476,1145,1.284,1146,1.476,1147,1.476,1148,1.476,1149,1.476,1150,1.373,1151,1.476,1152,1.373,1153,1.476,1154,1.476,1155,1.284,1156,1.284,1157,1.373,1158,1.476,1159,1.476,1160,1.476,1161,1.476,1162,1.476,1163,2.835,1164,2.305,1165,1.476,1166,1.373,1167,1.476,1168,1.476,1169,1.373,1170,1.476,1171,1.476,1172,1.476,1173,2.305,1174,1.476,1175,3.476,1176,1.476,1177,1.476,1178,1.476,1179,2.305,1180,2.305,1181,1.476,1182,1.6,1183,1.476,1184,2.835,1185,2.835,1186,2.835,1187,1.476,1188,1.476,1189,1.476,1190,1.476,1191,1.476,1192,1.6,1193,1.373,1194,1.373,1195,1.373,1196,1.373,1197,2.144,1198,2.305,1199,2.144,1200,2.305,1201,3.476,1202,2.305,1203,2.305,1204,2.835,1205,2.305,1206,2.305,1207,2.305,1208,2.305,1209,1.476,1210,1.476,1211,1.476,1212,1.6,1213,1.6,1214,1.6,1215,1.476,1216,1.476,1217,1.6,1218,1.476,1219,2.006,1220,2.068,1221,1.476,1222,1.476,1223,1.476,1224,1.476,1225,1.373,1226,1.373,1227,2.144,1228,1.476,1229,1.476]],["title/components/DialogComponent.html",[0,0.198,74,0.962]],["body/components/DialogComponent.html",[0,0.334,1,1.095,2,1.613,3,0.235,4,0.187,5,1.199,6,1.506,7,1.313,8,1.313,9,0.211,11,1.313,12,1.732,13,1.656,15,1.542,17,1.473,19,0.312,20,1.013,22,0.771,23,0.018,28,1.124,30,0.618,31,0.511,32,0.26,33,0.118,61,1.313,62,1.688,63,1.613,64,1.313,65,1.798,66,1.313,67,0.912,68,1.313,69,1.146,70,1.613,71,1.767,72,1.095,73,1.374,74,1.719,75,1.688,76,1.046,77,1.704,78,1.739,79,1.199,80,1.146,81,1.374,82,1.095,83,1.313,84,1.146,85,1.374,86,1.146,87,1.095,88,1.313,89,1.146,90,1.374,91,1.374,92,1.255,93,1.374,94,1.046,95,1.313,96,1.046,97,1.313,98,1.095,99,1.374,100,0.999,101,1.146,102,1.688,103,1.146,104,1.374,105,0.999,106,0.511,107,1.095,108,1.146,109,1.313,110,1.313,111,0.013,112,0.013,156,2.389,160,3.196,233,1.116,234,2.506,237,1.116,242,1.095,243,1.345,250,0.868,327,2.389,329,1.013,484,2.739,532,3.493,561,4.071,633,4.071,701,4.466,702,4.466,941,2.717,942,4.216,943,2.717,990,4.075,1169,3.493,1225,3.493,1226,4.075,1227,2.717,1230,3.885,1231,6.408,1232,5.798,1233,3.474,1234,4.51,1235,4.51,1236,4.51,1237,4.51,1238,4.995,1239,5.798,1240,4.995,1241,5.798,1242,5.798,1243,5.798,1244,4.995,1245,4.995]],["title/interfaces/DialogData.html",[462,0.662,1219,2.135]],["body/interfaces/DialogData.html",[0,0.228,3,0.118,4,0.094,5,0.942,9,0.106,12,0.785,13,0.479,15,0.603,17,0.901,19,0.245,20,0.619,22,0.644,23,0.018,24,0.715,26,0.986,30,0.687,31,0.402,32,0.252,33,0.114,35,2.529,36,1.706,39,2.209,40,2.135,41,1.366,42,2.062,45,1.133,47,1.995,50,1.954,51,2.465,56,1.998,58,1.201,65,0.942,76,0.526,77,1.423,78,1.3,79,0.942,100,0.502,101,1.109,106,0.402,108,0.576,111,0.008,112,0.008,156,1.201,160,1.675,169,3.018,184,1.278,188,2.062,190,1.559,208,1.574,209,1.529,211,2.135,223,2.317,231,1.278,234,2.501,237,0.436,246,0.832,263,0.793,264,1.278,282,2.135,293,0.479,294,1.998,299,1.278,315,1.878,329,0.762,334,2.46,345,2.165,348,1.964,350,1.071,355,1.214,356,1.956,357,0.917,388,2.148,402,1.675,409,0.861,420,0.793,424,1.788,444,0.964,462,0.396,463,2.098,464,1.015,465,0.964,468,2.331,469,2.397,472,2.682,473,1.68,474,0.793,475,1.071,476,1.855,478,3.048,482,2.522,486,1.015,489,1.133,500,0.964,520,1.015,535,1.071,542,0.917,568,2.836,578,2.135,612,1.201,630,1.278,714,1.507,715,1.433,716,1.433,733,1.071,739,1.071,740,1.201,743,1.278,748,1.071,760,1.998,762,1.278,774,1.278,779,2.312,790,1.278,797,1.278,845,1.366,861,1.278,881,1.201,895,0.964,917,1.278,921,1.998,922,1.201,923,1.469,924,1.469,927,2.296,928,1.469,929,1.366,930,1.998,931,1.469,932,1.469,933,2.826,934,1.469,935,1.469,936,2.465,937,1.133,938,1.366,939,2.836,940,1.469,941,1.366,942,2.135,943,1.366,944,1.469,945,2.296,946,2.296,947,1.469,948,1.469,949,1.469,950,2.296,951,1.469,952,1.469,953,3.196,954,1.469,955,2.296,956,1.469,957,1.469,958,1.469,959,1.469,960,1.469,961,1.278,962,1.278,963,1.469,964,1.469,965,1.469,966,1.469,967,3.468,968,1.469,969,1.469,970,1.469,971,1.469,972,1.469,973,1.469,974,1.366,975,1.469,976,1.469,977,1.469,978,1.469,979,1.469,980,1.469,981,1.469,982,1.469,983,2.296,984,1.469,985,1.469,986,1.133,987,1.469,988,1.469,989,1.469,990,2.135,991,1.592,992,1.469,993,1.366,994,3.468,995,1.278,996,1.469,997,1.469,998,1.469,999,1.469,1000,1.469,1001,1.469,1002,1.469,1003,2.826,1004,1.469,1005,2.826,1006,1.469,1007,2.826,1008,1.469,1009,2.135,1010,2.296,1011,1.469,1012,1.469,1013,1.469,1014,1.469,1015,1.366,1016,1.366,1017,2.296,1018,2.826,1019,1.469,1020,1.469,1021,1.469,1022,1.469,1023,1.469,1024,1.469,1025,2.826,1026,2.826,1027,1.469,1028,1.469,1029,1.469,1030,1.469,1031,2.296,1032,1.469,1033,2.826,1034,1.469,1035,2.296,1036,2.296,1037,1.469,1038,1.469,1039,1.469,1040,1.469,1041,1.469,1042,1.469,1043,1.278,1044,1.469,1045,2.296,1046,1.469,1047,1.469,1048,1.469,1049,1.469,1050,1.469,1051,1.469,1052,2.296,1053,1.469,1054,1.366,1055,2.296,1056,2.296,1057,4.086,1058,2.296,1059,2.296,1060,2.296,1061,3.975,1062,2.296,1063,2.296,1064,2.296,1065,1.469,1066,2.826,1067,1.469,1068,3.468,1069,1.469,1070,2.296,1071,2.826,1072,1.469,1073,2.629,1074,2.629,1075,1.469,1076,3.468,1077,2.296,1078,2.296,1079,1.469,1080,1.469,1081,1.469,1082,1.469,1083,1.469,1084,1.469,1085,1.469,1086,1.469,1087,2.296,1088,1.366,1089,1.469,1090,2.296,1091,1.998,1092,2.826,1093,2.826,1094,2.826,1095,2.826,1096,2.972,1097,1.469,1098,1.469,1099,1.469,1100,1.469,1101,2.629,1102,2.296,1103,1.133,1104,1.469,1105,1.469,1106,1.469,1107,1.469,1108,1.469,1109,1.469,1110,1.469,1111,1.469,1112,3.196,1113,3.468,1114,1.469,1115,2.296,1116,3.468,1117,1.469,1118,2.296,1119,1.469,1120,1.366,1121,1.469,1122,1.469,1123,1.366,1124,1.469,1125,1.366,1126,2.296,1127,1.469,1128,1.469,1129,2.296,1130,1.469,1131,1.469,1132,1.469,1133,2.296,1134,1.469,1135,1.469,1136,1.366,1137,2.826,1138,1.469,1139,1.469,1140,1.469,1141,1.469,1142,1.469,1143,1.469,1144,1.469,1145,1.278,1146,1.469,1147,1.469,1148,1.469,1149,1.469,1150,1.366,1151,1.469,1152,1.366,1153,1.469,1154,1.469,1155,1.278,1156,1.278,1157,1.366,1158,1.469,1159,1.469,1160,1.469,1161,1.469,1162,1.469,1163,2.826,1164,2.296,1165,1.469,1166,1.366,1167,1.469,1168,1.469,1169,1.366,1170,1.469,1171,1.469,1172,1.469,1173,2.296,1174,1.469,1175,3.468,1176,1.469,1177,1.469,1178,1.469,1179,2.296,1180,2.296,1181,1.469,1182,1.592,1183,1.469,1184,2.826,1185,2.826,1186,2.826,1187,1.469,1188,1.469,1189,1.469,1190,1.469,1191,1.469,1192,1.592,1193,1.366,1194,1.366,1195,1.366,1196,1.366,1197,2.135,1198,2.296,1199,2.135,1200,2.296,1201,3.468,1202,2.296,1203,2.296,1204,2.826,1205,2.296,1206,2.296,1207,2.296,1208,2.296,1209,1.469,1210,1.469,1211,1.469,1212,1.592,1213,1.592,1214,1.592,1215,1.469,1216,1.469,1217,1.592,1218,1.469,1219,2.46,1220,2.529,1221,1.469,1222,1.469,1223,1.469,1224,1.469,1225,1.366,1226,1.366,1227,2.135,1228,1.469,1229,1.469]],["title/components/DialogDataExampleDialog.html",[0,0.198,76,0.878]],["body/components/DialogDataExampleDialog.html",[0,0.24,1,0.486,2,0.894,3,0.104,4,0.083,5,1.07,7,0.583,8,0.583,9,0.094,11,0.583,12,1.579,13,1.479,15,0.533,17,1.022,19,0.222,20,0.561,22,0.484,23,0.018,24,0.648,26,0.894,28,0.838,30,0.663,31,0.364,32,0.232,33,0.105,35,2.381,36,1.678,39,2.062,40,1.936,41,1.207,42,1.901,45,1.001,47,1.861,50,1.802,51,2.3,56,1.811,58,1.061,61,0.583,62,0.935,63,0.894,64,0.583,65,1.43,66,0.583,67,0.572,68,0.583,69,0.509,70,0.894,71,0.979,72,0.486,73,0.61,74,0.509,75,0.935,76,1.068,77,1.611,78,1.571,79,1.34,80,0.509,81,0.61,82,0.486,83,0.583,84,0.509,85,0.61,86,0.509,87,0.486,88,0.583,89,0.509,90,0.61,91,0.61,92,0.557,93,0.61,94,0.465,95,0.583,96,0.465,97,0.583,98,0.486,99,0.61,100,0.712,101,1.17,102,0.935,103,0.509,104,0.61,105,0.444,106,0.456,107,0.486,108,0.816,109,0.583,110,0.583,111,0.007,112,0.007,156,1.061,160,1.518,169,2.841,184,3.032,188,0.946,190,1.493,208,1.468,209,1.499,211,1.936,223,2.273,231,1.129,233,0.618,234,2.507,237,0.618,242,0.486,243,0.465,246,0.735,250,0.618,263,0.701,264,1.129,282,1.936,293,0.424,294,1.811,295,1.936,299,1.129,327,1.061,329,0.88,334,2.268,345,2.038,348,1.849,350,0.946,355,1.119,356,1.923,357,0.81,388,2.056,402,1.518,409,1.118,420,0.701,424,1.683,444,0.852,462,0.35,463,1.957,465,2.287,468,2.175,469,2.257,472,2.542,473,1.549,474,0.701,475,0.946,476,1.711,478,2.67,482,2.403,484,2.175,486,0.897,489,1.001,498,3.112,500,0.852,520,2.257,521,2.439,535,0.946,542,0.81,568,1.702,578,1.936,612,1.061,630,1.129,655,2.475,657,1.936,670,2.081,714,1.366,715,1.299,716,1.299,733,0.946,739,0.946,740,1.061,743,1.129,748,0.946,760,1.811,762,1.129,774,1.129,779,2.131,790,1.129,797,1.129,845,1.207,861,1.129,881,1.061,895,0.852,917,1.129,921,1.811,922,1.061,923,1.297,924,1.297,927,2.081,928,1.297,929,1.207,930,1.811,931,1.297,932,1.297,933,2.606,934,1.297,935,1.297,936,2.3,937,1.001,938,1.207,939,2.67,940,1.297,941,1.207,942,3.036,943,1.207,944,1.297,945,2.081,946,2.081,947,1.297,948,1.297,949,1.297,950,2.081,951,1.297,952,1.297,953,2.982,954,1.297,955,2.081,956,1.297,957,1.297,958,1.297,959,1.297,960,1.297,961,1.129,962,1.129,963,1.297,964,1.297,965,1.297,966,1.297,967,3.265,968,1.297,969,1.297,970,1.297,971,1.297,972,1.297,973,1.297,974,1.207,975,1.297,976,1.297,977,1.297,978,1.297,979,1.297,980,1.297,981,1.297,982,1.297,983,2.081,984,1.297,985,1.297,986,1.001,987,1.297,988,1.297,989,1.297,990,3.036,991,1.406,992,1.297,993,1.207,994,2.081,995,1.129,996,1.297,997,1.297,998,1.297,999,1.297,1000,1.297,1001,1.297,1002,1.297,1003,2.606,1004,1.297,1005,2.606,1006,1.297,1007,2.606,1008,1.297,1009,1.936,1010,2.081,1011,1.297,1012,1.297,1013,1.297,1014,1.297,1015,1.207,1016,1.207,1017,2.081,1018,2.606,1019,1.297,1020,1.297,1021,1.297,1022,1.297,1023,1.297,1024,1.297,1025,2.606,1026,2.606,1027,1.297,1028,1.297,1029,1.297,1030,1.297,1031,2.081,1032,1.297,1033,2.606,1034,1.297,1035,2.081,1036,2.081,1037,1.297,1038,1.297,1039,1.297,1040,1.297,1041,1.297,1042,1.297,1043,1.129,1044,1.297,1045,2.081,1046,1.297,1047,1.297,1048,1.297,1049,1.297,1050,1.297,1051,1.297,1052,2.081,1053,1.297,1054,1.207,1055,2.081,1056,2.081,1057,3.926,1058,2.081,1059,2.081,1060,2.081,1061,3.805,1062,2.081,1063,2.081,1064,2.081,1065,1.297,1066,2.606,1067,1.297,1068,3.265,1069,1.297,1070,2.081,1071,2.606,1072,1.297,1073,2.424,1074,2.424,1075,1.297,1076,3.265,1077,2.081,1078,2.081,1079,1.297,1080,1.297,1081,1.297,1082,1.297,1083,1.297,1084,1.297,1085,1.297,1086,1.297,1087,2.081,1088,1.207,1089,1.297,1090,2.081,1091,1.811,1092,2.606,1093,2.606,1094,2.606,1095,2.606,1096,2.774,1097,1.297,1098,1.297,1099,1.297,1100,1.297,1101,2.424,1102,2.081,1103,1.001,1104,1.297,1105,1.297,1106,1.297,1107,1.297,1108,1.297,1109,1.297,1110,1.297,1111,1.297,1112,2.982,1113,3.265,1114,1.297,1115,2.081,1116,3.265,1117,1.297,1118,2.081,1119,1.297,1120,1.207,1121,1.297,1122,1.297,1123,1.207,1124,1.297,1125,1.207,1126,2.081,1127,1.297,1128,1.297,1129,2.081,1130,1.297,1131,1.297,1132,1.297,1133,2.081,1134,1.297,1135,1.297,1136,1.207,1137,2.606,1138,1.297,1139,1.297,1140,1.297,1141,1.297,1142,1.297,1143,1.297,1144,1.297,1145,1.129,1146,1.297,1147,1.297,1148,1.297,1149,1.297,1150,1.207,1151,1.297,1152,1.207,1153,1.297,1154,1.297,1155,1.129,1156,1.129,1157,1.207,1158,1.297,1159,1.297,1160,1.297,1161,1.297,1162,1.297,1163,2.606,1164,2.081,1165,1.297,1166,1.207,1167,1.297,1168,1.297,1169,2.424,1170,1.297,1171,1.297,1172,1.297,1173,2.081,1174,1.297,1175,3.265,1176,1.297,1177,1.297,1178,1.297,1179,2.081,1180,2.081,1181,1.297,1182,1.406,1183,1.297,1184,2.606,1185,2.606,1186,2.606,1187,1.297,1188,1.297,1189,1.297,1190,1.297,1191,1.297,1192,1.406,1193,1.207,1194,1.207,1195,1.207,1196,1.207,1197,1.936,1198,2.081,1199,1.936,1200,2.081,1201,3.265,1202,2.081,1203,2.081,1204,2.606,1205,2.081,1206,2.081,1207,2.081,1208,2.081,1209,1.297,1210,1.297,1211,1.297,1212,1.406,1213,1.406,1214,1.406,1215,1.297,1216,1.297,1217,1.406,1218,1.297,1219,2.841,1220,1.901,1221,1.297,1222,1.297,1223,2.606,1224,2.081,1225,1.936,1226,2.774,1227,1.936,1228,2.982,1229,1.297,1233,1.543,1246,2.003,1247,2.003,1248,2.003,1249,1.726,1250,1.726,1251,2.768,1252,2.768,1253,2.768,1254,2.768,1255,2.475,1256,2.475,1257,2.475,1258,2.768,1259,2.475,1260,3.966,1261,2.768,1262,2.768,1263,2.768,1264,2.768,1265,2.768,1266,2.768]],["title/components/ExampleComponent.html",[0,0.198,80,0.962]],["body/components/ExampleComponent.html",[0,0.347,1,1.191,2,1.701,3,0.256,4,0.203,5,1.304,6,1.638,7,1.428,8,1.428,9,0.229,11,1.428,12,1.743,13,1.662,15,1.626,17,1.554,19,0.339,23,0.018,28,1.016,30,0.523,31,0.556,32,0.283,33,0.128,61,1.428,62,1.78,63,1.701,64,1.428,65,1.854,66,1.428,67,0.87,68,1.428,69,1.246,70,1.701,71,1.863,72,1.191,73,1.494,74,1.246,75,1.78,76,1.138,77,1.304,78,1.191,79,1.908,80,1.772,81,1.494,82,1.191,83,1.428,84,1.246,85,1.494,86,1.246,87,1.191,88,1.428,89,1.246,90,1.494,91,1.494,92,1.365,93,1.494,94,1.138,95,1.428,96,1.138,97,1.428,98,1.191,99,1.494,100,1.087,101,1.246,102,1.78,103,1.246,104,1.494,105,1.087,106,0.556,107,1.191,108,1.246,109,1.428,110,1.428,111,0.014,112,0.014,233,1.177,237,1.282,250,0.944,293,1.293,329,1.068,548,2.332,566,2.559,1267,4.226,1268,6.662,1269,6.115,1270,4.905,1271,4.905,1272,5.268]],["title/classes/ExpressionGrammarModel.html",[33,0.099,1273,1.892]],["body/classes/ExpressionGrammarModel.html",[3,0.132,4,0.105,9,0.119,19,0.175,20,0.675,22,0.835,23,0.018,24,1.563,25,2.279,26,1.771,28,1.221,32,0.302,33,0.101,36,1.543,67,0.906,106,0.593,111,0.009,112,0.009,190,1.743,208,1.798,209,1.346,223,1.493,233,0.744,234,2.4,237,0.488,242,1.545,243,1.476,250,1.302,258,3.235,260,3.033,293,0.817,329,1.037,355,1.568,356,1.028,388,2.078,409,1.685,420,1.353,424,1.291,425,1.931,449,1.344,462,0.675,487,2.616,542,1.893,649,2.774,714,1.643,715,2.574,716,1.563,717,2.047,719,3.347,775,3.481,857,2.328,895,1.991,907,2.503,909,2.503,911,3.481,986,2.339,1103,1.267,1220,2.806,1273,1.931,1274,1.643,1275,2.639,1276,3.288,1277,3.288,1278,3.288,1279,3.288,1280,3.677,1281,3.677,1282,3.865,1283,3.865,1284,3.865,1285,3.865,1286,3.865,1287,3.677,1288,3.677,1289,3.865,1290,3.865,1291,3.677,1292,4.17,1293,3.392,1294,3.677,1295,2.714,1296,3.865,1297,4.861,1298,2.536,1299,3.396,1300,3.677,1301,4.309,1302,2.536,1303,3.372,1304,2.536,1305,2.536,1306,2.536,1307,2.536,1308,2.714,1309,3.288,1310,2.536,1311,2.714,1312,2.536,1313,2.714,1314,2.536,1315,2.714,1316,2.536,1317,2.714,1318,2.536,1319,2.536,1320,2.536,1321,2.536,1322,2.714,1323,2.536,1324,2.536,1325,2.536,1326,2.536,1327,2.536,1328,2.536,1329,2.536,1330,2.536,1331,2.536,1332,2.536,1333,2.536,1334,2.714,1335,2.714,1336,2.714,1337,1.781,1338,1.781,1339,1.781,1340,1.781,1341,1.781,1342,1.781,1343,1.781,1344,1.781,1345,1.781,1346,3.288,1347,2.714,1348,3.288,1349,3.677,1350,1.781,1351,1.781,1352,1.781,1353,1.781,1354,2.503,1355,1.781,1356,1.528,1357,2.714,1358,1.781,1359,3.288,1360,3.677,1361,3.677,1362,2.714,1363,2.714,1364,2.714,1365,2.714,1366,2.714,1367,2.714,1368,2.714,1369,2.714,1370,2.714,1371,3.677,1372,1.781,1373,2.714,1374,3.288,1375,1.781,1376,1.781,1377,1.781,1378,1.781,1379,1.781,1380,1.781,1381,1.781,1382,3.288,1383,1.781,1384,2.714,1385,1.781,1386,1.781,1387,2.714,1388,1.781,1389,1.781,1390,1.781,1391,1.781,1392,1.781,1393,1.781,1394,3.288,1395,1.781,1396,1.781,1397,1.781,1398,1.781,1399,1.781,1400,1.781,1401,1.781,1402,4.17,1403,2.714,1404,1.781,1405,1.781,1406,1.781,1407,3.288,1408,1.781,1409,1.781,1410,1.781,1411,3.288,1412,1.781,1413,1.781,1414,1.781,1415,1.781,1416,1.781,1417,1.781,1418,1.781,1419,4.17,1420,2.714,1421,1.781,1422,2.714,1423,1.781,1424,1.781,1425,1.781,1426,1.781]],["title/components/FooterComponent.html",[0,0.198,82,0.92]],["body/components/FooterComponent.html",[0,0.345,1,1.173,2,1.685,3,0.252,4,0.2,5,1.284,6,1.614,7,1.406,8,1.406,9,0.226,11,1.406,12,1.741,13,1.66,15,1.61,17,1.539,19,0.334,23,0.018,27,3.026,28,1.007,30,0.515,31,0.547,32,0.279,33,0.126,36,1.121,61,1.406,62,1.763,63,1.685,64,1.406,65,1.844,66,1.406,67,0.862,68,1.406,69,1.227,70,1.685,71,1.845,72,1.173,73,1.472,74,1.227,75,1.763,76,1.121,77,1.284,78,1.173,79,1.284,80,1.227,81,1.472,82,1.684,83,1.406,84,1.227,85,1.472,86,1.227,87,1.173,88,1.406,89,1.227,90,1.472,91,1.472,92,1.344,93,1.472,94,1.121,95,1.406,96,1.121,97,1.406,98,1.173,99,1.472,100,1.07,101,1.227,102,1.763,103,1.227,104,1.472,105,1.07,106,0.547,107,1.173,108,1.227,109,1.406,110,1.406,111,0.014,112,0.014,233,1.166,237,1.273,250,0.93,293,1.281,329,1.058,345,1.953,473,1.86,548,2.315,566,2.545,734,3.721,748,2.282,754,3.129,1427,4.162,1428,6.616,1429,6.616,1430,6.056,1431,4.831,1432,4.831,1433,5.218,1434,5.218,1435,4.831]],["title/interfaces/FourTuple.html",[462,0.662,1299,2.282]],["body/interfaces/FourTuple.html",[3,0.157,4,0.125,9,0.141,19,0.208,20,0.768,22,0.761,23,0.018,24,1.55,26,0.839,32,0.329,33,0.115,36,1.61,106,0.717,111,0.01,112,0.01,190,1.807,208,1.819,209,1.417,223,1.655,234,1.996,258,2.991,260,1.952,293,0.637,315,2.329,329,0.768,355,1.443,356,1.169,388,1.996,409,1.743,420,1.538,424,1.468,425,2.196,462,0.768,464,1.35,487,2.849,542,2.098,649,3.353,714,1.869,715,2.709,716,1.777,717,2.329,719,3.568,775,3.568,857,2.648,895,2.206,907,2.847,909,2.847,911,3.851,986,1.506,1103,1.506,1220,2.694,1273,1.506,1274,1.952,1275,2.478,1276,2.116,1277,2.116,1278,2.116,1279,2.116,1280,2.116,1281,2.116,1287,2.116,1288,2.116,1291,3.087,1292,4.004,1293,2.847,1294,3.087,1295,2.116,1297,4.847,1299,3.653,1300,4.445,1301,4.425,1303,3.462,1308,2.116,1309,2.116,1311,2.116,1313,2.116,1315,2.116,1317,2.116,1322,2.116,1334,3.087,1335,3.087,1336,3.087,1337,2.116,1338,2.116,1339,2.116,1340,2.116,1341,2.116,1342,2.116,1343,2.116,1344,2.116,1345,2.116,1346,3.643,1347,3.087,1348,3.643,1349,4.004,1350,2.116,1351,2.116,1352,2.116,1353,2.116,1354,2.847,1355,2.116,1356,1.816,1357,3.087,1358,2.116,1359,3.643,1360,4.004,1361,4.004,1362,3.087,1363,3.087,1364,3.087,1365,3.087,1366,3.087,1367,3.087,1368,3.087,1369,3.087,1370,3.087,1371,4.004,1372,2.116,1373,3.087,1374,3.643,1375,2.116,1376,2.116,1377,2.116,1378,2.116,1379,2.116,1380,2.116,1381,2.116,1382,3.643,1383,2.116,1384,3.087,1385,2.116,1386,2.116,1387,3.087,1388,2.116,1389,2.116,1390,2.116,1391,2.116,1392,2.116,1393,2.116,1394,3.643,1395,2.116,1396,2.116,1397,2.116,1398,2.116,1399,2.116,1400,2.116,1401,2.116,1402,4.445,1403,3.087,1404,2.116,1405,2.116,1406,2.116,1407,3.643,1408,2.116,1409,2.116,1410,2.116,1411,3.643,1412,2.116,1413,2.116,1414,2.116,1415,2.116,1416,2.116,1417,2.116,1418,2.116,1419,4.445,1420,3.087,1421,2.116,1422,3.087,1423,2.116,1424,2.116,1425,2.116,1426,2.116]],["title/components/GrammarComponent.html",[0,0.198,84,0.962]],["body/components/GrammarComponent.html",[0,0.2,1,0.452,2,0.842,3,0.23,4,0.077,5,0.495,6,0.621,7,0.541,8,0.541,9,0.087,11,0.541,12,1.55,13,1.469,15,0.805,17,0.769,19,0.129,20,0.529,22,0.748,23,0.018,24,0.979,25,2.456,26,1.69,28,1.194,30,0.662,31,0.211,32,0.107,33,0.048,35,2.869,36,1.703,37,2.478,42,2.292,43,3.737,45,0.929,47,2.893,50,2.72,51,2.598,52,2.027,53,3.737,54,3.369,57,3.369,58,2.027,59,2.125,61,0.541,62,0.881,63,1.064,64,0.541,65,1.172,66,0.541,67,0.78,68,0.541,69,0.473,70,1.227,71,0.922,72,0.452,73,0.567,74,0.473,75,0.881,76,0.431,77,0.495,78,0.452,79,1.017,80,0.473,81,0.567,82,0.452,83,0.541,84,1.12,85,0.567,86,0.473,87,0.452,88,0.541,89,0.473,90,0.922,91,0.567,92,0.517,93,0.567,94,0.431,95,0.541,96,0.431,97,0.541,98,0.452,99,0.567,100,0.412,101,0.473,102,0.881,103,0.473,104,0.567,105,0.412,106,0.589,107,0.452,108,1.321,109,0.541,110,0.541,111,0.007,112,0.007,190,0.473,208,0.965,209,0.932,223,0.965,233,0.582,237,0.358,242,1.178,243,1.125,246,1.404,250,1.259,253,1.713,254,0.716,258,0.791,293,0.64,296,1.048,302,2.687,309,2.687,316,1.205,318,2.125,327,0.985,329,1.243,343,1.433,344,1.205,345,2.31,346,1.306,348,2.432,350,2.083,352,3.33,354,2.305,355,1.227,356,0.805,357,0.752,364,3.143,365,1.433,377,3.504,402,2.083,403,3.217,404,2.485,409,0.735,410,1.121,418,2.125,424,1.011,428,2.125,435,2.125,473,1.697,500,1.287,519,1.823,548,1.339,559,2.947,566,1.618,567,3.396,568,1.603,569,3.396,570,3.396,571,3.396,573,3.798,576,3.798,593,2.607,595,1.602,630,1.048,632,2.607,633,1.306,641,1.433,649,2.336,657,1.823,662,1.433,666,3.396,670,3.369,689,1.433,697,1.96,704,2.331,705,2.331,706,3.396,715,1.224,724,2.607,725,2.607,726,2.607,728,2.607,729,2.607,730,2.607,731,3.303,733,1.808,734,2.331,735,3.442,737,1.602,738,2.331,739,2.457,740,1.603,741,4.18,742,3.369,743,1.706,744,3.559,745,3.819,746,3.296,747,1.823,748,2.7,750,1.602,751,1.433,752,1.433,753,1.602,754,3.551,755,2.331,756,2.331,757,1.602,758,1.602,759,1.602,760,1.048,761,1.602,762,1.706,763,1.433,764,1.602,765,1.602,766,1.602,767,1.602,768,1.602,769,1.602,770,1.602,771,3.798,772,1.602,776,1.602,777,3.396,780,2.947,781,1.433,782,1.433,783,1.306,784,1.433,785,1.602,786,1.121,787,1.602,788,2.607,789,3.296,790,2.485,791,1.602,792,1.602,793,2.607,794,1.602,795,1.602,796,2.607,797,2.157,798,2.607,799,3.798,800,1.602,801,1.602,802,1.433,803,1.602,804,1.602,885,2.607,911,1.706,917,1.706,995,1.706,1009,2.656,1016,3.303,1101,1.823,1273,1.912,1297,3.143,1303,2.027,1356,2.305,1436,1.86,1437,1.602,1438,3.826,1439,3.826,1440,3.026,1441,3.798,1442,3.826,1443,3.826,1444,3.826,1445,3.026,1446,3.026,1447,3.798,1448,3.026,1449,3.798,1450,1.86,1451,2.932,1452,3.826,1453,2.656,1454,3.026,1455,3.026,1456,1.86,1457,1.86,1458,1.86,1459,3.026,1460,1.86,1461,1.86,1462,1.86,1463,3.026,1464,1.86,1465,1.86,1466,1.86,1467,1.86,1468,1.86,1469,1.86,1470,1.86,1471,1.86,1472,2.947,1473,1.86,1474,1.86,1475,1.86,1476,3.026,1477,5.2,1478,1.86,1479,4.409,1480,3.026,1481,3.026,1482,3.026,1483,1.86,1484,1.86,1485,1.86,1486,1.86,1487,2.331,1488,1.86,1489,1.86,1490,1.86,1491,1.86,1492,1.433,1493,2.331,1494,1.86,1495,1.205,1496,1.602,1497,2.331,1498,1.86,1499,1.433,1500,1.86,1501,1.86,1502,1.86,1503,1.86,1504,1.602,1505,1.86,1506,1.86,1507,1.602,1508,1.86,1509,1.602,1510,1.86,1511,1.86,1512,1.86,1513,1.86,1514,1.86,1515,1.86,1516,1.86,1517,3.026,1518,1.86,1519,1.86,1520,1.86,1521,1.86,1522,1.86,1523,1.86,1524,3.826,1525,1.86,1526,1.86,1527,1.86,1528,3.396,1529,3.026,1530,3.026,1531,4.922,1532,3.026,1533,4.409,1534,2.607,1535,3.798,1536,2.607,1537,3.026,1538,7.186,1539,5.714,1540,3.026,1541,4.18,1542,3.026,1543,3.026,1544,3.026,1545,4.409,1546,3.026,1547,2.607,1548,5.2,1549,4.409,1550,3.026,1551,3.026,1552,4.409,1553,3.026,1554,3.026,1555,4.409,1556,2.607,1557,3.026,1558,3.026,1559,2.607,1560,3.026,1561,3.798,1562,2.607,1563,2.607,1564,3.026,1565,3.026,1566,4.409,1567,3.026,1568,3.026,1569,3.026,1570,2.607,1571,2.331,1572,3.026,1573,2.607,1574,2.607,1575,2.331,1576,3.026,1577,3.026,1578,3.026,1579,3.026,1580,3.026,1581,3.026,1582,1.86,1583,3.026,1584,1.86,1585,3.026,1586,3.296,1587,1.86,1588,1.86,1589,3.026,1590,1.86,1591,3.026,1592,2.125,1593,1.86,1594,4.852,1595,3.826,1596,1.86,1597,1.86,1598,1.86,1599,1.86,1600,1.86,1601,1.86,1602,1.86,1603,1.86,1604,3.026,1605,1.86,1606,1.86,1607,1.86,1608,1.86,1609,1.86,1610,1.86,1611,1.86,1612,1.86,1613,1.86,1614,1.86,1615,3.026,1616,1.86,1617,1.86,1618,1.86,1619,1.86,1620,1.602,1621,1.602,1622,1.86,1623,3.826,1624,3.826,1625,3.026,1626,3.026,1627,3.026,1628,3.026,1629,3.026,1630,1.86,1631,1.602,1632,1.86,1633,1.602,1634,1.86,1635,1.86,1636,1.602,1637,1.86]],["title/components/GrammarGraphComponent.html",[0,0.198,86,0.962]],["body/components/GrammarGraphComponent.html",[0,0.304,1,0.904,2,1.42,3,0.194,4,0.154,5,1.357,6,1.946,7,1.084,8,1.084,9,0.174,11,1.084,12,1.702,13,1.621,19,0.257,20,0.892,22,0.835,23,0.018,25,1.506,26,1.036,28,1.218,30,0.7,31,0.422,32,0.215,33,0.097,36,0.864,61,1.084,62,1.486,63,1.42,64,1.084,65,1.666,66,1.084,67,0.892,68,1.084,69,0.946,70,1.744,71,1.555,72,0.904,73,1.135,74,0.946,75,1.486,76,0.864,77,0.99,78,0.904,79,0.99,80,0.946,81,1.135,82,0.904,83,1.084,84,0.946,85,1.135,86,1.593,87,0.904,88,1.084,89,0.946,90,1.135,91,1.135,92,1.036,93,1.135,94,0.864,95,1.084,96,0.864,97,1.084,98,0.904,99,1.135,100,0.825,101,0.946,102,1.486,103,0.946,104,1.135,105,0.825,106,0.422,107,0.904,108,0.946,109,1.084,110,1.084,111,0.012,112,0.012,123,3.086,209,0.788,233,0.983,234,2.298,237,0.717,242,1.24,243,1.184,250,1.206,258,2.171,292,2.868,293,1.08,294,3.284,295,3.076,296,3.533,297,5.984,298,5.984,299,2.878,300,4.828,301,3.932,302,4.09,303,4.398,304,5.019,305,4.398,306,3.208,307,4.828,308,5.019,309,4.401,310,4.487,312,4.398,313,3.932,315,1.973,316,3.774,317,4.398,318,4.09,319,3.585,320,3.208,321,5.4,322,3.208,323,4.398,324,5.225,327,2.705,328,4.398,329,1.235,330,4.398,331,4.398,332,5.4,334,2.099,337,3.208,338,4.487,339,4.398,340,4.401,341,3.585,342,3.585,343,2.868,344,2.412,345,1.506,346,2.615,347,3.208,348,1.366,349,3.208,350,1.759,351,3.208,352,2.099,353,3.208,354,2.244,355,1.42,356,0.99,357,1.506,358,3.208,359,4.398,360,3.208,361,2.868,362,2.868,363,2.615,364,2.412,365,2.868,366,3.208,367,3.208,548,1.303,697,2.412,1451,3.533,1495,4.787,1638,5.189,1639,3.724,1640,3.724,1641,3.724,1642,5.105,1643,3.724,1644,3.724,1645,3.585,1646,3.724]],["title/injectables/GrammarGraphService.html",[228,1.531,1451,2.135]],["body/injectables/GrammarGraphService.html",[3,0.18,4,0.143,9,0.161,14,1.944,19,0.238,20,0.845,22,0.768,23,0.018,24,1.129,25,2.452,26,1.687,28,1.154,30,0.516,31,0.391,32,0.199,33,0.09,47,3.119,52,1.827,54,3.622,57,4.137,67,0.689,106,0.548,111,0.011,112,0.011,208,1.934,209,1.492,223,1.1,228,1.957,229,1.944,233,0.931,234,2.469,237,1.076,242,1.175,243,1.123,246,2.343,250,1.076,254,1.327,257,2.077,296,3.152,319,2.421,329,1.116,348,2.676,355,1.346,356,1.287,363,2.421,368,2.656,369,4.818,370,4.818,371,4.818,372,3.728,373,5.224,374,4.17,375,4.17,376,4.17,377,3.977,378,2.97,379,4.65,380,2.564,381,2.97,382,4.17,383,2.97,384,4.17,385,2.97,386,3.927,387,4.92,388,1.694,389,2.97,390,2.97,391,3.728,392,4.17,393,4.17,394,4.17,395,4.17,396,5.705,397,4.818,398,5.224,399,5.705,400,4.17,401,6.332,402,3.591,403,4.027,404,3.418,405,4.17,406,4.17,407,3.398,408,4.671,409,1.175,410,3.653,411,4.818,412,2.97,413,5.224,414,5.502,415,4.671,416,2.97,417,4.484,418,4.65,419,2.97,420,1.694,421,2.97,422,4.818,423,2.97,424,1.152,425,1.723,426,4.17,427,2.97,428,3.927,429,2.97,430,2.97,431,2.97,432,2.97,433,2.97,434,2.97,435,2.421,436,2.97,437,4.17,438,2.97,439,2.656,440,2.656,441,2.97,442,2.97,443,2.421,444,1.466,445,2.97,446,2.077,447,2.421,1451,2.728,1495,4.57,1638,4.954]],["title/interfaces/GrammarModel.html",[462,0.662,1275,2.135]],["body/interfaces/GrammarModel.html",[3,0.157,4,0.125,9,0.141,19,0.209,20,0.769,22,0.686,23,0.018,24,1.538,26,0.84,32,0.329,33,0.115,36,1.611,106,0.588,111,0.01,112,0.01,190,1.808,208,1.82,209,1.417,223,1.656,234,1.997,258,2.992,260,1.955,293,0.638,329,0.769,355,1.445,356,1.17,388,1.997,409,1.744,420,1.54,424,1.47,425,2.198,462,0.769,464,1.352,487,2.851,542,2.1,649,2.751,714,1.871,715,2.71,716,1.779,717,2.331,719,3.57,775,3.57,857,2.651,895,2.208,907,2.85,909,2.85,911,3.57,986,1.508,1103,1.508,1220,2.992,1273,1.508,1274,1.955,1275,2.927,1276,2.119,1277,2.119,1278,2.119,1279,2.119,1280,2.119,1281,2.119,1287,2.119,1288,2.119,1291,4.26,1292,4.591,1293,3.93,1294,4.26,1295,2.119,1297,4.848,1299,3.816,1300,3.646,1301,4.427,1303,3.62,1308,2.119,1309,2.119,1311,2.119,1313,2.119,1315,2.119,1317,2.119,1322,2.119,1334,3.09,1335,3.09,1336,3.09,1337,2.119,1338,2.119,1339,2.119,1340,2.119,1341,2.119,1342,2.119,1343,2.119,1344,2.119,1345,2.119,1346,3.646,1347,3.09,1348,3.646,1349,4.007,1350,2.119,1351,2.119,1352,2.119,1353,2.119,1354,2.85,1355,2.119,1356,1.819,1357,3.09,1358,2.119,1359,3.646,1360,4.007,1361,4.007,1362,3.09,1363,3.09,1364,3.09,1365,3.09,1366,3.09,1367,3.09,1368,3.09,1369,3.09,1370,3.09,1371,4.007,1372,2.119,1373,3.09,1374,3.646,1375,2.119,1376,2.119,1377,2.119,1378,2.119,1379,2.119,1380,2.119,1381,2.119,1382,3.646,1383,2.119,1384,3.09,1385,2.119,1386,2.119,1387,3.09,1388,2.119,1389,2.119,1390,2.119,1391,2.119,1392,2.119,1393,2.119,1394,3.646,1395,2.119,1396,2.119,1397,2.119,1398,2.119,1399,2.119,1400,2.119,1401,2.119,1402,4.447,1403,3.09,1404,2.119,1405,2.119,1406,2.119,1407,3.646,1408,2.119,1409,2.119,1410,2.119,1411,3.646,1412,2.119,1413,2.119,1414,2.119,1415,2.119,1416,2.119,1417,2.119,1418,2.119,1419,4.447,1420,3.09,1421,2.119,1422,3.09,1423,2.119,1424,2.119,1425,2.119,1426,2.119]],["title/modules/GrammarModule.html",[113,2.135,1647,2.659]],["body/modules/GrammarModule.html",[3,0.26,4,0.207,9,0.233,23,0.018,30,0.832,31,0.566,32,0.288,33,0.13,70,1.72,84,1.868,86,1.868,111,0.014,112,0.014,115,2.36,116,3.276,123,3.276,124,2.646,125,2.495,127,3.725,128,2.815,131,3.485,133,3.507,148,5.327,149,4.302,150,4.763,151,4.763,186,3.725,187,2.815,344,3.235,809,4.763,811,5.327,812,4.302,813,4.302,814,5.327,815,4.302,816,5.327,817,4.302,818,5.327,819,4.302,820,5.327,821,4.302,822,5.327,823,4.302,824,5.327,825,3.847,826,4.302,1451,4.143,1453,4.428,1495,4.005,1496,4.302,1647,5.416,1648,4.302,1649,4.302,1650,4.302,1651,4.994,1652,4.994,1653,6.183,1654,4.994]],["title/injectables/GrammarService.html",[228,1.531,1453,2.282]],["body/injectables/GrammarService.html",[3,0.22,4,0.174,9,0.197,14,2.374,19,0.291,20,0.969,22,0.875,23,0.018,25,2.768,26,1.905,28,1.27,30,0.729,31,0.477,32,0.243,33,0.11,67,0.599,106,0.628,111,0.013,112,0.013,228,2.243,229,2.374,233,1.067,237,1.193,242,1.023,243,0.977,246,2.275,250,1.4,253,2.777,254,1.622,257,2.538,329,1.27,355,1.543,356,1.869,377,3.714,386,4.808,409,1.74,415,3.245,559,4.776,567,5.076,568,3.491,569,5.076,570,5.076,571,4.776,615,4.778,637,3.629,638,4.778,639,3.629,641,3.245,687,3.629,689,3.245,1303,3.724,1356,4.125,1447,5.677,1449,5.677,1453,3.341,1487,3.245,1492,3.245,1504,3.629,1655,3.245,1656,6.2,1657,6.2,1658,5.546,1659,5.546,1660,5.546,1661,4.212,1662,4.212,1663,4.212,1664,4.212,1665,4.212,1666,4.212,1667,4.212,1668,4.212,1669,6.847,1670,4.212,1671,4.212,1672,5.546,1673,4.212,1674,4.212,1675,4.212,1676,4.212,1677,4.212,1678,4.212,1679,3.629,1680,4.212,1681,4.212,1682,4.212,1683,4.212,1684,4.212,1685,4.212,1686,4.212,1687,4.212,1688,7.03,1689,5.546,1690,4.212,1691,4.212,1692,4.212,1693,6.2,1694,4.212,1695,4.212,1696,4.212,1697,4.212]],["title/interfaces/GrammarState.html",[462,0.662,1698,2.659]],["body/interfaces/GrammarState.html",[3,0.278,4,0.221,9,0.249,19,0.369,20,1.124,22,0.642,23,0.018,25,2.157,30,0.765,32,0.431,111,0.015,112,0.015,164,2.521,188,2.521,190,1.356,209,1.554,246,2.634,356,1.418,462,0.932,464,2.389,697,4.837,786,4.326,881,2.826,1273,3.216,1275,4.047,1492,4.109,1698,5.161,1699,3.746,1700,5.335,1701,5.546,1702,5.335,1703,5.335,1704,5.335,1705,5.546,1706,5.335,1707,4.959,1708,4.109,1709,4.596,1710,5.957,1711,4.109,1712,5.335,1713,5.335,1714,4.109,1715,4.596,1716,4.596,1717,5.335]],["title/components/LoginComponent.html",[0,0.198,87,0.92]],["body/components/LoginComponent.html",[0,0.346,1,1.183,2,1.694,3,0.254,4,0.202,5,1.295,6,1.627,7,1.418,8,1.418,9,0.228,11,1.418,12,1.743,13,1.661,15,1.619,17,1.547,19,0.337,23,0.018,28,1.012,30,0.519,31,0.552,32,0.281,33,0.127,61,1.418,62,1.772,63,1.694,64,1.418,65,1.85,66,1.418,67,0.866,68,1.418,69,1.238,70,1.694,71,1.855,72,1.183,73,1.484,74,1.238,75,1.772,76,1.13,77,1.295,78,1.183,79,1.295,80,1.238,81,1.484,82,1.183,83,1.418,84,1.238,85,1.484,86,1.238,87,1.689,88,1.418,89,1.238,90,1.484,91,1.484,92,1.355,93,1.484,94,1.13,95,1.418,96,1.13,97,1.418,98,1.183,99,1.484,100,1.079,101,1.238,102,1.772,103,1.238,104,1.484,105,1.079,106,0.552,107,1.183,108,1.238,109,1.418,110,1.418,111,0.014,112,0.014,212,5.993,233,1.172,237,1.278,250,0.937,293,1.287,329,1.063,548,2.324,566,2.553,1718,4.196,1719,6.641,1720,6.088,1721,4.871,1722,4.871,1723,3.225,1724,6.088,1725,6.088]],["title/components/MainPageComponent.html",[0,0.198,89,0.962]],["body/components/MainPageComponent.html",[0,0.345,1,1.17,2,1.683,3,0.251,4,0.2,5,1.281,6,1.61,7,1.403,8,1.403,9,0.225,11,1.403,12,1.741,13,1.66,15,1.608,17,1.537,19,0.333,23,0.018,28,1.005,30,0.514,31,0.546,32,0.278,33,0.126,61,1.403,62,1.761,63,1.683,64,1.403,65,1.843,66,1.403,67,0.86,68,1.403,69,1.225,70,1.683,71,1.843,72,1.17,73,1.468,74,1.225,75,1.761,76,1.118,77,1.281,78,1.17,79,1.281,80,1.225,81,1.468,82,1.17,83,1.403,84,1.225,85,1.468,86,1.225,87,1.17,88,1.403,89,1.761,90,2.314,91,1.468,92,1.341,93,1.468,94,1.118,95,1.403,96,1.118,97,1.403,98,1.17,99,1.468,100,1.068,101,1.225,102,1.761,103,1.225,104,1.468,105,1.068,106,0.546,107,1.17,108,1.225,109,1.403,110,1.403,111,0.014,112,0.014,140,5.091,233,1.164,237,1.272,250,0.928,293,1.279,329,1.056,548,2.313,566,2.543,1272,5.21,1726,5.694,1727,4.152,1728,5.971,1729,6.609,1730,6.048,1731,4.82,1732,4.82]],["title/components/MyCounterComponent.html",[0,0.198,92,1.054]],["body/components/MyCounterComponent.html",[0,0.337,1,1.113,2,1.63,3,0.239,4,0.19,5,1.219,7,1.335,8,1.335,9,0.214,11,1.335,12,1.734,13,1.653,17,1.489,19,0.317,20,1.024,22,0.551,23,0.018,28,1.169,30,0.624,31,0.52,32,0.264,33,0.119,61,1.335,62,1.706,63,1.63,64,1.335,65,1.809,66,1.335,67,0.834,68,1.335,69,1.165,70,1.63,71,1.785,72,1.113,73,1.397,74,1.165,75,1.706,76,1.063,77,1.219,78,1.113,79,1.219,80,1.165,81,1.397,82,1.113,83,1.335,84,1.165,85,1.397,86,1.165,87,1.113,88,1.335,89,1.165,90,1.397,91,1.397,92,1.893,93,1.397,94,1.063,95,1.335,96,1.063,97,1.335,98,1.113,99,1.397,100,1.016,101,1.165,102,1.706,103,1.165,104,1.397,105,1.016,106,0.52,107,1.113,108,1.165,109,1.335,110,1.335,111,0.013,112,0.013,124,3.726,233,1.128,237,1.243,240,2.429,246,1.682,250,1.243,253,2.892,254,1.765,255,4.938,329,1.128,604,3.95,786,3.891,1733,6.196,1734,6.196,1735,3.95,1736,5.859,1737,5.859,1738,4.408,1739,7.032,1740,5.859,1741,4.585,1742,4.585,1743,4.585,1744,6.805,1745,4.585,1746,2.97,1747,4.585,1748,6.458]],["title/components/NavigationComponent.html",[0,0.198,94,0.878]],["body/components/NavigationComponent.html",[0,0.332,1,1.083,2,1.602,3,0.233,4,0.185,5,1.186,6,1.49,7,1.299,8,1.299,9,0.208,11,1.299,12,1.73,13,1.649,15,1.531,17,1.463,19,0.308,20,1.006,22,0.693,23,0.018,24,0.9,28,1.06,30,0.679,31,0.506,32,0.257,33,0.116,36,1.035,61,1.299,62,1.676,63,1.602,64,1.299,65,1.791,66,1.299,67,0.907,68,1.299,69,1.134,70,1.602,71,1.754,72,1.083,73,1.359,74,1.134,75,1.676,76,1.035,77,1.186,78,1.083,79,1.186,80,1.134,81,1.359,82,1.083,83,1.299,84,1.134,85,1.359,86,1.134,87,1.083,88,1.299,89,1.134,90,1.359,91,1.359,92,1.241,93,1.359,94,1.563,95,1.299,96,1.035,97,1.299,98,1.083,99,1.359,100,0.988,101,1.134,102,1.676,103,1.134,104,1.359,105,0.988,106,0.506,107,1.083,108,1.134,109,1.299,110,1.299,111,0.013,112,0.013,164,2.108,216,4.73,218,4.96,233,1.108,237,0.859,240,3.783,242,1.083,243,1.035,250,0.859,253,2.855,254,1.718,263,1.561,264,3.246,293,1.218,329,1.006,348,1.637,357,1.804,462,0.779,548,2.231,566,2.472,731,2.688,735,2.688,736,3.844,739,2.108,744,2.688,745,2.688,747,2.688,1592,3.133,1723,2.364,1738,4.517,1746,2.89,1749,3.437,1750,4.96,1751,5.492,1752,4.96,1753,3.844,1754,5.758,1755,4.461,1756,2.688,1757,2.688,1758,2.688,1759,2.688,1760,2.688,1761,4.96,1762,4.96,1763,5.758,1764,4.96,1765,5.758,1766,4.461,1767,3.437,1768,4.461]],["title/components/ProfileComponent.html",[0,0.198,96,0.878]],["body/components/ProfileComponent.html",[0,0.338,1,1.122,2,1.638,3,0.241,4,0.191,5,1.229,6,1.543,7,1.345,8,1.345,9,0.216,11,1.345,12,1.735,13,1.654,15,1.566,17,1.496,19,0.319,20,1.029,22,0.708,23,0.018,24,0.932,28,1.077,30,0.691,31,0.524,32,0.267,33,0.12,61,1.345,62,1.714,63,1.638,64,1.345,65,1.815,66,1.345,67,1.003,68,1.345,69,1.174,70,1.638,71,1.794,72,1.122,73,1.408,74,1.174,75,1.714,76,1.072,77,1.229,78,1.122,79,1.229,80,1.174,81,1.408,82,1.122,83,1.345,84,1.174,85,1.408,86,1.174,87,1.122,88,1.345,89,1.174,90,1.408,91,1.408,92,1.286,93,1.408,94,1.072,95,1.345,96,1.583,97,1.345,98,1.122,99,1.408,100,1.024,101,1.174,102,1.714,103,1.174,104,1.408,105,1.024,106,0.524,107,1.122,108,1.174,109,1.345,110,1.345,111,0.013,112,0.013,164,2.183,216,4.792,233,1.133,237,0.889,240,3.818,242,1.122,243,1.072,250,0.889,253,2.903,254,1.779,263,1.617,293,1.245,329,1.029,357,1.868,462,0.807,548,2.268,566,2.504,1723,3.434,1738,4.199,1746,2.993,1753,3.981,1756,2.784,1757,2.784,1758,2.784,1759,2.784,1760,2.784,1764,5.073,1769,3.559,1770,5.584,1771,5.073,1772,5.889,1773,4.621,1774,3.815,1775,5.889]],["title/components/PuzzleComponent.html",[0,0.198,98,0.92]],["body/components/PuzzleComponent.html",[0,0.301,1,0.886,2,1.4,3,0.19,4,0.208,5,0.97,6,1.219,7,1.062,8,1.062,9,0.17,11,1.062,12,1.707,13,1.617,15,1.338,17,1.279,19,0.252,23,0.018,28,0.606,30,0.662,31,0.413,32,0.21,33,0.095,35,2.378,47,2.636,50,2.581,61,1.062,62,1.465,63,1.603,64,1.062,65,1.652,66,1.062,67,0.82,68,1.062,69,0.927,70,1.4,71,1.534,72,0.886,73,1.112,74,0.927,75,1.465,76,0.846,77,0.97,78,1.509,79,0.97,80,0.927,81,1.112,82,0.886,83,1.062,84,0.927,85,1.112,86,0.927,87,0.886,88,1.062,89,0.927,90,1.112,91,1.112,92,1.015,93,1.112,94,0.846,95,1.062,96,0.846,97,1.062,98,1.509,99,1.112,100,0.808,101,1.464,102,1.465,103,0.927,104,1.112,105,0.808,106,0.57,107,0.886,108,0.927,109,1.062,110,1.062,111,0.011,112,0.011,125,1.823,188,2.723,190,0.927,208,1.164,209,1.219,223,1.838,233,0.969,250,0.702,293,1.065,295,3.033,296,3.249,300,2.81,329,0.879,340,4.578,345,2.035,348,1.847,364,3.261,407,3.535,409,1.399,417,4.363,420,1.277,443,2.562,469,2.919,474,2.017,482,2.937,548,2.017,566,2.28,718,4.047,731,3.033,733,1.724,744,3.033,745,3.744,747,3.033,748,1.724,778,3.261,779,2.667,783,2.562,895,2.14,1043,2.057,1054,2.198,1091,2.057,1120,2.198,1123,2.198,1136,2.198,1145,2.057,1150,3.472,1155,2.057,1156,3.894,1293,3.733,1507,4.965,1509,3.143,1528,3.878,1571,3.878,1592,3.535,1645,3.535,1767,3.878,1776,3.143,1777,5.763,1778,5.034,1779,3.648,1780,5.034,1781,3.143,1782,3.648,1783,3.143,1784,6.213,1785,5.763,1786,5.034,1787,3.648,1788,3.648,1789,6.213,1790,5.763,1791,3.648,1792,3.648,1793,3.648,1794,3.648,1795,3.648,1796,3.648,1797,5.034,1798,3.648,1799,3.648,1800,3.648,1801,3.648,1802,3.648,1803,3.648,1804,3.648,1805,3.648,1806,3.648,1807,3.648,1808,3.648,1809,5.034,1810,3.648,1811,3.648,1812,3.648,1813,5.034,1814,5.034,1815,5.616,1816,3.648,1817,5.034,1818,5.034,1819,5.034,1820,5.034,1821,5.034,1822,3.648,1823,3.648,1824,3.648,1825,3.648,1826,4.337,1827,3.143,1828,4.337,1829,5.034,1830,3.648,1831,3.648,1832,3.143,1833,2.81,1834,4.337,1835,3.143,1836,3.143,1837,3.648,1838,3.648,1839,3.648,1840,3.648,1841,5.034,1842,5.034,1843,3.648,1844,3.648,1845,4.337,1846,3.648,1847,3.143,1848,2.81,1849,5.034]],["title/components/PuzzleGameComponent.html",[0,0.198,100,0.839]],["body/components/PuzzleGameComponent.html",[0,0.213,1,0.399,2,0.76,3,0.086,4,0.068,5,0.932,6,0.548,7,0.478,8,0.478,9,0.077,11,0.478,12,1.525,13,1.434,15,0.726,17,0.891,19,0.314,20,0.477,22,0.679,23,0.018,24,0.825,25,2.354,26,1.788,28,1.165,30,0.62,31,0.31,32,0.202,33,0.091,35,2.569,36,1.692,37,1.064,39,1.83,40,2.113,41,1.645,42,1.657,45,2.447,47,2.198,50,2.527,51,2.447,56,1.54,58,2.165,59,1.918,61,0.478,62,0.795,63,0.76,64,0.478,65,1.302,66,0.478,67,0.697,68,0.478,69,0.417,70,0.76,71,0.832,72,0.399,73,0.5,74,0.417,75,0.795,76,0.634,77,1.548,78,1.189,79,0.932,80,0.417,81,0.5,82,0.399,83,0.478,84,0.417,85,0.5,86,0.417,87,0.399,88,0.478,89,0.417,90,0.5,91,0.5,92,0.457,93,0.5,94,0.381,95,0.478,96,0.381,97,0.478,98,0.399,99,0.5,100,0.905,101,1.381,102,0.795,103,0.417,104,0.5,105,0.364,106,0.397,107,0.399,108,0.694,109,0.478,110,0.478,111,0.006,112,0.006,124,1.447,156,0.87,160,1.29,169,3.181,184,3.972,188,0.776,190,1.381,208,1.447,209,1.445,211,1.645,223,2.21,231,0.926,233,0.526,234,2.643,237,0.526,242,0.992,243,0.948,246,1.287,250,1.176,263,0.575,264,0.926,282,1.645,293,0.578,294,1.977,299,2.304,316,1.064,327,0.87,329,1.088,334,1.977,345,2.416,346,1.153,348,2.241,350,2.314,352,1.977,354,2.462,355,1.444,356,1.864,357,0.664,380,0.87,388,1.975,402,2.144,403,2.88,404,2.558,409,0.851,410,0.989,420,1.227,424,1.516,444,0.698,462,0.287,463,1.738,465,2.997,468,1.931,469,2.032,472,2.314,473,1.35,474,0.575,475,0.776,476,1.491,478,2.666,482,2.207,486,0.735,489,0.82,500,0.698,520,0.735,535,0.776,542,0.664,568,1.447,574,2.353,578,2.734,612,0.87,630,0.926,714,1.161,715,1.104,716,1.104,731,1.645,733,1.931,735,0.989,739,1.657,740,0.87,742,3.172,743,0.926,744,2.462,745,2.734,747,1.645,748,2.144,749,2.353,751,1.265,752,1.265,754,1.769,760,1.54,762,0.926,774,0.926,775,2.558,777,2.701,778,1.064,779,2.165,780,2.104,781,2.701,782,2.701,784,1.265,790,0.926,797,0.926,845,0.989,861,0.926,881,1.447,895,0.698,917,0.926,921,1.54,922,0.87,923,1.064,924,1.064,927,2.647,928,1.064,929,0.989,930,1.54,931,1.064,932,1.064,933,2.647,934,1.064,935,1.064,936,2.716,937,2.267,938,0.989,939,2.404,940,1.064,941,0.989,942,1.645,943,0.989,944,1.064,945,1.769,946,1.769,947,1.064,948,1.064,949,1.064,950,1.769,951,1.064,952,1.064,953,2.647,954,1.064,955,1.769,956,1.064,957,1.064,958,1.064,959,1.064,960,1.064,961,1.54,962,1.977,963,1.769,964,1.769,965,2.272,966,2.272,967,3.363,968,2.272,969,1.769,970,2.272,971,1.769,972,2.939,973,1.769,974,3.275,975,1.769,976,2.272,977,1.769,978,1.769,979,1.769,980,1.769,981,1.769,982,1.769,983,2.272,984,1.769,985,1.769,986,1.365,987,2.272,988,1.769,989,1.769,990,1.645,991,1.153,992,2.272,993,0.989,994,1.769,995,1.54,996,1.064,997,1.064,998,1.064,999,1.064,1000,1.064,1001,1.064,1002,1.064,1003,2.272,1004,1.064,1005,2.272,1006,1.064,1007,2.647,1008,1.064,1009,2.734,1010,1.769,1011,1.064,1012,1.064,1013,1.064,1014,1.064,1015,0.989,1016,0.989,1017,1.769,1018,2.272,1019,1.064,1020,1.064,1021,1.064,1022,1.064,1023,1.064,1024,1.064,1025,2.272,1026,2.272,1027,1.064,1028,1.064,1029,1.064,1030,1.064,1031,1.769,1032,1.064,1033,2.272,1034,2.647,1035,1.769,1036,1.769,1037,1.064,1038,1.064,1039,1.064,1040,1.064,1041,1.064,1042,1.064,1043,0.926,1044,1.064,1045,1.769,1046,1.064,1047,1.064,1048,1.064,1049,1.064,1050,1.064,1051,1.064,1052,1.769,1053,1.064,1054,2.113,1055,1.769,1056,1.769,1057,3.656,1058,1.769,1059,1.769,1060,1.769,1061,3.521,1062,1.769,1063,1.769,1064,1.769,1065,1.064,1066,2.272,1067,1.064,1068,2.939,1069,1.064,1070,1.769,1071,2.272,1072,1.064,1073,2.113,1074,2.113,1075,1.064,1076,2.939,1077,1.769,1078,1.769,1079,1.064,1080,1.064,1081,1.064,1082,1.064,1083,1.064,1084,1.064,1085,1.064,1086,1.064,1087,1.769,1088,0.989,1089,1.064,1090,1.769,1091,1.54,1092,2.272,1093,2.272,1094,2.272,1095,2.272,1096,2.462,1097,1.064,1098,1.064,1099,2.272,1100,1.064,1101,2.113,1102,1.769,1103,0.82,1104,1.064,1105,1.064,1106,1.064,1107,1.064,1108,1.064,1109,1.064,1110,1.064,1111,1.064,1112,2.647,1113,2.939,1114,1.064,1115,1.769,1116,2.939,1117,1.064,1118,1.769,1119,1.064,1120,0.989,1121,1.064,1122,1.064,1123,0.989,1124,1.064,1125,0.989,1126,1.769,1127,1.064,1128,2.647,1129,2.272,1130,1.064,1131,1.064,1132,1.064,1133,1.769,1134,1.064,1135,1.064,1136,0.989,1137,2.272,1138,1.064,1139,1.064,1140,1.064,1141,1.064,1142,1.064,1143,1.064,1144,1.064,1145,0.926,1146,1.064,1147,1.064,1148,1.064,1149,1.064,1150,0.989,1151,1.064,1152,0.989,1153,1.064,1154,1.064,1155,0.926,1156,0.926,1157,0.989,1158,1.064,1159,1.064,1160,1.064,1161,2.647,1162,1.064,1163,2.272,1164,1.769,1165,1.064,1166,0.989,1167,1.064,1168,1.064,1169,0.989,1170,1.064,1171,1.064,1172,1.769,1173,1.769,1174,1.064,1175,2.939,1176,1.064,1177,1.064,1178,1.064,1179,1.769,1180,1.769,1181,1.769,1182,1.153,1183,2.647,1184,2.272,1185,2.272,1186,2.272,1187,1.064,1188,1.064,1189,1.064,1190,2.647,1191,1.064,1192,1.153,1193,0.989,1194,0.989,1195,0.989,1196,0.989,1197,1.645,1198,1.769,1199,1.645,1200,1.769,1201,2.939,1202,1.769,1203,1.769,1204,2.272,1205,1.769,1206,1.769,1207,1.769,1208,1.769,1209,2.647,1210,1.064,1211,1.064,1212,1.153,1213,1.153,1214,1.153,1215,1.064,1216,1.064,1217,1.153,1218,1.064,1219,1.54,1220,1.657,1221,1.064,1222,1.064,1223,1.064,1224,1.064,1225,0.989,1226,0.989,1227,1.645,1228,1.064,1229,1.064,1827,2.353,1833,1.265,1845,1.414,1848,1.265,1850,2.731,1851,3.507,1852,2.731,1853,1.642,1854,2.731,1855,1.642,1856,1.642,1857,1.642,1858,1.642,1859,1.642,1860,1.642,1861,1.642,1862,1.642,1863,1.642,1864,1.642,1865,1.642,1866,1.642,1867,1.642,1868,1.642,1869,1.642,1870,1.642,1871,1.414,1872,1.642,1873,1.642,1874,1.642,1875,1.642,1876,1.642,1877,1.642,1878,2.731,1879,2.353,1880,2.731,1881,1.642,1882,1.642,1883,1.642,1884,1.642,1885,1.642,1886,1.642,1887,1.642,1888,1.642,1889,1.642,1890,1.642,1891,1.642,1892,1.642,1893,1.642,1894,2.731,1895,1.642,1896,1.642,1897,1.642,1898,1.642,1899,2.731,1900,1.642,1901,1.642,1902,2.731,1903,1.642,1904,2.731,1905,1.642,1906,1.642,1907,1.642,1908,1.642,1909,1.642]],["title/modules/PuzzleModule.html",[113,2.135,122,2.453]],["body/modules/PuzzleModule.html",[3,0.297,4,0.235,9,0.266,23,0.018,30,0.781,31,0.644,32,0.328,33,0.148,98,1.839,111,0.015,112,0.015,115,2.687,116,3.543,122,4.908,123,3.543,124,3.012,125,2.841,127,4.029,128,3.205,131,3.769,132,5.761,133,3.993,134,3.993,186,4.029,187,3.205,1910,4.899,1911,4.899,1912,5.686,1913,5.686]],["title/components/RegisterComponent.html",[0,0.198,103,0.962]],["body/components/RegisterComponent.html",[0,0.343,1,1.161,2,1.674,3,0.249,4,0.198,5,1.271,6,1.597,7,1.392,8,1.392,9,0.223,11,1.392,12,1.74,13,1.659,15,1.6,17,1.529,19,0.33,23,0.018,28,1,30,0.509,31,0.542,32,0.276,33,0.125,61,1.392,62,1.752,63,1.674,64,1.392,65,1.837,66,1.392,67,0.983,68,1.392,69,1.215,70,1.674,71,1.833,72,1.161,73,1.457,74,1.215,75,1.752,76,1.109,77,1.271,78,1.161,79,1.271,80,1.215,81,1.457,82,1.161,83,1.392,84,1.215,85,1.457,86,1.215,87,1.161,88,1.392,89,1.215,90,1.457,91,1.457,92,1.33,93,1.457,94,1.109,95,1.392,96,1.109,97,1.392,98,1.161,99,1.457,100,1.059,101,1.215,102,1.752,103,1.756,104,1.457,105,1.059,106,0.542,107,1.161,108,1.215,109,1.392,110,1.392,111,0.014,112,0.014,215,5.953,233,1.158,237,1.267,250,0.92,293,1.273,329,1.051,548,2.304,566,2.536,1166,3.625,1723,3.661,1774,4.476,1914,4.119,1915,6.584,1916,6.017,1917,4.781,1918,4.781,1919,5.184,1920,6.017,1921,6.017,1922,6.017,1923,6.017]],["title/classes/RuleSetInterface.html",[33,0.099,1303,2.006]],["body/classes/RuleSetInterface.html",[3,0.156,4,0.124,9,0.14,19,0.206,20,0.763,22,0.726,23,0.018,24,1.54,26,0.831,28,1.004,32,0.327,33,0.114,36,1.606,67,0.425,106,0.585,111,0.01,112,0.01,190,1.804,208,1.811,209,1.413,223,1.646,234,1.987,237,0.575,242,0.725,243,0.693,258,2.985,260,1.934,293,0.631,329,0.763,355,1.579,356,1.161,388,2.114,409,1.74,420,1.528,424,1.458,425,2.181,449,1.582,462,0.763,487,2.836,542,2.087,588,2.572,649,2.734,714,1.856,715,2.701,716,1.765,717,2.313,719,3.556,775,3.556,857,2.63,895,2.194,907,2.828,909,2.828,911,3.556,986,1.492,1103,1.492,1220,2.682,1273,1.492,1274,1.934,1275,2.461,1276,2.097,1277,2.097,1278,2.097,1279,2.097,1280,2.097,1281,2.097,1287,2.097,1288,2.097,1291,3.065,1292,4.43,1293,2.828,1294,3.065,1295,2.097,1297,4.841,1299,3.42,1300,3.623,1301,4.414,1303,3.669,1308,2.097,1309,2.097,1311,2.097,1313,2.097,1315,2.097,1317,2.097,1322,2.097,1334,3.986,1335,3.986,1336,3.986,1337,3.065,1338,2.097,1339,2.097,1340,2.097,1341,2.097,1342,2.097,1343,2.097,1344,2.097,1345,2.097,1346,3.623,1347,3.065,1348,3.623,1349,3.986,1350,2.097,1351,2.097,1352,2.097,1353,2.097,1354,2.828,1355,2.097,1356,1.799,1357,3.065,1358,2.097,1359,3.623,1360,3.986,1361,3.986,1362,3.065,1363,3.065,1364,3.065,1365,3.065,1366,3.065,1367,3.065,1368,3.065,1369,3.065,1370,3.065,1371,3.986,1372,2.097,1373,3.065,1374,3.623,1375,2.097,1376,2.097,1377,2.097,1378,2.097,1379,2.097,1380,2.097,1381,2.097,1382,3.623,1383,2.097,1384,3.065,1385,2.097,1386,2.097,1387,3.065,1388,2.097,1389,2.097,1390,2.097,1391,2.097,1392,2.097,1393,2.097,1394,3.623,1395,2.097,1396,2.097,1397,2.097,1398,2.097,1399,2.097,1400,2.097,1401,2.097,1402,4.43,1403,3.065,1404,2.097,1405,2.097,1406,2.097,1407,3.623,1408,2.097,1409,2.097,1410,2.097,1411,3.623,1412,2.097,1413,2.097,1414,2.097,1415,2.097,1416,2.097,1417,2.097,1418,2.097,1419,4.43,1420,3.065,1421,2.097,1422,3.065,1423,2.097,1424,2.097,1425,2.097,1426,2.097,1924,4.365,1925,2.572,1926,2.986,1927,2.986,1928,2.986]],["title/components/StartGameComponent.html",[0,0.198,105,0.839]],["body/components/StartGameComponent.html",[0,0.311,1,0.948,2,1.467,3,0.204,4,0.162,5,1.039,6,1.305,7,1.137,8,1.137,9,0.183,11,1.137,12,1.71,13,1.629,15,1.402,17,1.34,19,0.27,20,0.921,22,0.718,23,0.018,24,0.788,27,2.635,28,1.143,30,0.681,31,0.443,32,0.225,33,0.102,35,2.492,61,1.137,62,1.535,63,1.467,64,1.137,65,1.7,66,1.137,67,0.849,68,1.137,69,0.993,70,1.467,71,1.607,72,0.948,73,1.19,74,0.993,75,1.535,76,0.906,77,1.039,78,1.281,79,1.039,80,0.993,81,1.19,82,0.948,83,1.137,84,0.993,85,1.19,86,0.993,87,0.948,88,1.137,89,0.993,90,1.19,91,1.19,92,1.087,93,1.19,94,0.906,95,1.137,96,0.906,97,1.137,98,0.948,99,1.19,100,0.865,101,1.517,102,1.535,103,0.993,104,1.19,105,1.416,106,0.838,107,0.948,108,0.993,109,1.137,110,1.137,111,0.012,112,0.012,164,1.846,177,4.556,233,1.015,235,4.544,237,1.015,240,3.726,242,0.948,243,0.906,250,1.149,253,3.15,254,1.504,258,2.243,263,1.367,293,1.115,329,1.117,345,2.133,403,2.069,404,2.202,462,0.682,484,2.492,548,2.09,566,2.346,731,3.178,733,2.492,742,2.53,744,2.354,745,3.597,747,3.178,778,3.416,779,2.794,783,2.743,922,2.069,936,3.194,937,3.514,961,2.973,962,3.366,993,2.354,1259,4.063,1575,3.009,1592,3.703,1723,2.069,1756,2.354,1757,2.354,1758,2.354,1759,2.354,1760,2.354,1762,4.544,1767,4.063,1847,3.365,1848,4.063,1871,3.365,1929,4.938,1930,5.752,1931,5.508,1932,5.508,1933,3.906,1934,3.878,1935,5.274,1936,3.906,1937,3.906,1938,3.906,1939,3.009,1940,4.544,1941,3.365,1942,3.365,1943,3.365,1944,4.544,1945,3.365,1946,3.365,1947,3.365,1948,5.274,1949,5.274,1950,5.274,1951,3.906,1952,3.906,1953,3.365,1954,3.906,1955,3.906,1956,3.906]],["title/modules/StartGameModule.html",[113,2.135,176,2.453]],["body/modules/StartGameModule.html",[3,0.286,4,0.227,9,0.256,23,0.018,30,0.789,31,0.621,32,0.316,33,0.143,105,1.665,106,0.621,107,1.824,111,0.015,112,0.015,115,2.591,116,3.467,123,3.467,124,2.905,125,2.739,127,3.943,128,3.091,131,3.689,176,5.016,177,3.552,179,4.724,186,3.943,187,3.091,809,5.041,1929,3.85,1934,4.236,1939,4.223,1957,4.724,1958,4.724,1959,4.724,1960,5.483,1961,5.483]],["title/components/TableComponent.html",[0,0.198,107,0.92]],["body/components/TableComponent.html",[0,0.334,1,1.095,2,1.613,3,0.235,4,0.187,5,1.199,6,1.506,7,1.313,8,1.313,9,0.211,11,1.313,12,1.732,13,1.65,15,1.542,17,1.473,19,0.312,23,0.018,28,0.964,30,0.481,31,0.511,32,0.26,33,0.118,37,3.756,42,2.131,47,2.344,50,2.02,61,1.313,62,1.688,63,1.613,64,1.313,65,1.798,66,1.313,67,0.962,68,1.313,69,1.146,70,1.613,71,1.767,72,1.095,73,1.374,74,1.146,75,1.688,76,1.046,77,1.199,78,1.095,79,1.199,80,1.146,81,1.374,82,1.095,83,1.313,84,1.146,85,1.374,86,1.146,87,1.095,88,1.313,89,1.146,90,1.374,91,1.374,92,1.255,93,1.374,94,1.046,95,1.313,96,1.046,97,1.313,98,1.095,99,1.374,100,0.999,101,1.146,102,1.688,103,1.146,104,1.374,105,0.999,106,0.511,107,1.642,108,1.628,109,1.313,110,1.313,111,0.013,112,0.013,233,1.116,237,1.233,250,0.868,293,1.226,329,1.013,348,1.655,352,2.542,354,2.717,403,3.072,404,2.542,409,1.408,420,2.029,424,1.937,473,1.736,548,2.243,566,2.482,733,2.131,735,3.861,739,3.028,742,2.922,754,2.922,755,3.474,756,4.466,763,3.474,1073,2.717,1074,2.717,1433,4.995,1434,4.995,1636,3.885,1879,4.995,1962,3.885,1963,6.408,1964,5.798,1965,4.51,1966,4.51,1967,7.378,1968,5.798,1969,5.798,1970,5.798,1971,5.798,1972,5.798,1973,4.51,1974,4.51,1975,4.51,1976,5.798,1977,5.798,1978,4.51,1979,4.51,1980,4.51]],["title/interfaces/User.html",[263,1.325,462,0.662]],["body/interfaces/User.html",[0,0.338,3,0.281,4,0.223,9,0.252,12,1.194,13,1.14,15,1.433,17,1.37,19,0.372,20,1.132,22,0.886,23,0.018,24,1.566,30,0.74,31,0.611,32,0.311,33,0.14,96,1.25,111,0.015,112,0.015,164,2.547,216,3.785,240,3.679,253,2.901,254,2.075,263,2.267,293,1.14,329,0.942,357,2.18,462,0.942,464,2.414,474,2.431,548,2.267,566,1.978,1723,3.817,1738,3.492,1746,3.492,1756,3.247,1757,3.247,1758,3.247,1759,3.247,1760,3.247,1769,4.152,1770,4.644,1771,4.644,1774,4.499,1981,5.35,1982,5.35]],["title/interfaces/User-1.html",[263,1.108,409,0.768,462,0.553]],["body/interfaces/User-1.html",[0,0.327,3,0.267,4,0.212,9,0.239,12,1.132,13,1.081,15,1.359,17,1.299,19,0.353,20,1.096,22,0.873,23,0.018,24,1.555,30,0.754,31,0.579,32,0.295,33,0.133,78,1.241,105,1.132,106,0.769,111,0.014,112,0.014,164,2.415,177,3.311,237,0.984,240,3.595,253,3.252,254,1.968,258,2.667,263,2.195,293,1.081,329,0.893,462,0.893,464,2.289,474,2.375,548,2.195,566,1.875,922,2.708,936,2.553,937,2.553,961,2.881,962,2.881,1723,3.748,1756,3.079,1757,3.079,1758,3.079,1759,3.079,1760,3.079,1774,4.396,1929,3.589,1930,4.403,1931,4.403,1932,4.403,1934,3.825,1939,3.937,1940,5.403,1941,4.403,1942,4.403,1943,4.403,1944,5.403,1945,4.403,1946,4.403,1947,4.403,1981,5.227,1982,5.227]],["title/interfaces/User-2.html",[263,1.108,424,1.057,462,0.553]],["body/interfaces/User-2.html",[0,0.338,3,0.281,4,0.223,9,0.252,12,1.194,13,1.14,15,1.433,17,1.37,19,0.372,20,1.132,22,0.886,23,0.018,24,1.566,30,0.74,31,0.611,32,0.311,33,0.14,94,1.25,111,0.015,112,0.015,164,2.547,240,3.679,253,2.901,254,2.075,263,2.267,293,1.14,329,0.942,357,2.18,462,0.942,464,2.414,474,2.431,548,2.267,566,1.978,1723,3.817,1738,3.492,1746,3.492,1749,4.152,1750,4.644,1751,4.644,1752,4.644,1756,3.247,1757,3.247,1758,3.247,1759,3.247,1760,3.247,1774,4.499,1981,5.35,1982,5.35]],["title/injectables/UsersService.html",[228,1.531,1934,2.135]],["body/injectables/UsersService.html",[3,0.293,4,0.232,9,0.262,14,3.162,19,0.388,22,0.675,23,0.018,28,1.174,30,0.707,31,0.636,32,0.324,33,0.146,67,0.798,111,0.015,112,0.015,181,4.832,190,1.686,228,2.682,229,3.162,233,1.277,237,1.079,242,1.362,243,1.301,250,1.277,257,3.379,357,2.268,1934,3.739,1983,4.832,1984,7.3,1985,7.3,1986,5.609,1987,7.3,1988,5.609,1989,6.633,1990,5.609,1991,5.609,1992,5.609,1993,5.609]],["title/classes/WordChecker.html",[33,0.099,939,2.006]],["body/classes/WordChecker.html",[3,0.242,4,0.192,9,0.217,19,0.525,22,0.822,23,0.018,24,1.456,26,1.964,27,2.95,28,0.981,30,0.495,32,0.268,33,0.121,36,1.37,67,0.84,106,0.526,111,0.013,112,0.013,190,1.794,208,1.884,209,1.526,223,1.48,233,1.137,242,1.434,243,1.37,250,1.137,315,3.129,355,1.964,356,1.234,409,1.434,447,3.259,449,2.459,463,3.118,465,2.762,466,3.913,471,3.854,478,3.59,479,4.573,486,2.079,493,3.007,494,3.007,495,3.007,496,3.007,500,1.974,507,3.825,508,3.825,509,3.825,533,3.007,534,3.007,535,2.193,540,3.007,861,2.616,881,2.459,938,2.796,939,3.129,1193,2.796,1194,2.796,1195,2.796,1196,2.796,1220,2.79,1994,3.999,1995,5.905,1996,5.905,1997,5.905,1998,4.641,1999,5.905,2000,4.641,2001,4.641,2002,4.641,2003,4.641,2004,5.905,2005,4.641,2006,4.641,2007,4.641,2008,4.641,2009,4.641,2010,4.641,2011,4.641,2012,4.641,2013,4.641,2014,4.641,2015,4.641,2016,4.641,2017,4.641,2018,5.905,2019,4.641,2020,4.641,2021,4.641,2022,4.641,2023,4.641,2024,4.641]],["title/classes/WordGenerator.html",[33,0.099,476,1.61]],["body/classes/WordGenerator.html",[3,0.211,4,0.168,9,0.189,19,0.481,22,0.732,23,0.018,24,1.541,27,3.04,28,1.124,32,0.374,33,0.106,36,1.411,39,2.907,67,0.962,106,0.736,111,0.012,112,0.012,190,1.649,209,1.573,233,1.041,242,1.642,243,1.568,250,1.301,283,2.627,355,1.975,380,2.148,388,2.366,409,1.313,444,1.724,446,2.443,449,2.148,462,1.063,463,3.137,465,2.957,466,4.19,467,2.627,468,3.195,469,1.816,470,3.258,471,3.812,472,1.916,473,2.499,474,1.419,475,1.916,476,2.3,477,3.798,478,3.451,479,4.38,480,2.848,481,3.798,482,2.3,483,2.848,484,1.916,485,2.848,486,1.816,487,2.026,488,2.848,489,2.026,490,2.848,491,2.848,492,2.848,493,2.627,494,2.627,495,2.627,496,2.627,497,2.848,498,3.224,499,2.848,500,1.724,501,2.848,502,2.848,503,3.503,504,2.848,505,2.848,506,2.848,507,3.503,508,3.503,509,3.503,510,2.848,511,2.848,512,2.848,513,2.848,514,2.848,515,2.627,516,2.848,517,3.798,518,2.848,519,3.258,520,2.422,521,2.865,522,3.798,523,2.848,524,2.848,525,2.848,526,2.848,527,2.848,528,3.798,529,3.798,530,3.798,531,4.205,532,2.443,533,2.627,534,2.627,535,1.916,536,2.848,537,2.627,538,2.848,539,2.627,540,2.627,541,3.798,542,2.187,543,2.848,544,2.848,545,2.848,546,3.798,2025,5.408,2026,5.408,2027,5.408,2028,5.408,2029,5.408,2030,4.055,2031,4.055,2032,4.659,2033,4.055,2034,4.055,2035,4.055,2036,4.055]],["title/coverage.html",[2037,4.449]],["body/coverage.html",[0,0.396,1,0.846,9,0.163,10,3,22,0.419,23,0.018,33,0.173,36,1.851,69,0.885,72,0.846,74,0.885,76,0.808,80,0.885,82,0.846,84,0.885,86,0.885,87,0.846,89,0.885,92,0.969,94,0.808,96,0.808,98,0.846,100,0.772,103,0.885,105,0.772,107,0.846,108,0.885,111,0.011,112,0.011,126,2.683,140,2.683,161,2.446,165,2.683,166,2.683,172,3.754,177,3.157,184,3.433,188,2.303,228,2.686,230,3,255,2.446,263,1.968,290,3.754,291,3.157,292,3.754,311,2.256,341,2.446,342,2.446,356,0.926,368,3.754,377,1.963,448,2.446,450,3,462,1.251,463,1.481,465,3.079,466,3.862,467,3.945,470,2.098,471,1.963,476,1.481,547,3,579,2.098,606,2.683,608,2.683,623,2.683,634,2.683,640,2.683,827,3,851,2.683,921,1.963,922,3.519,930,1.963,936,1.74,937,1.74,939,1.845,1219,1.963,1230,3,1267,3,1273,1.74,1274,3.945,1275,1.963,1299,2.098,1303,1.845,1427,3,1437,3,1451,1.963,1453,2.098,1472,2.683,1493,2.683,1495,3.157,1497,2.683,1499,2.683,1638,3.948,1655,2.683,1698,2.446,1699,4.664,1707,3.754,1708,2.683,1711,2.683,1714,2.683,1718,3,1726,3,1727,3,1733,3,1734,3,1735,3,1749,3.754,1761,3,1769,3.754,1776,3,1914,3,1929,3.422,1934,1.963,1962,3,1983,3,1994,3,2037,3,2038,3.483,2039,3.483,2040,6.09,2041,4.844,2042,7.826,2043,7.841,2044,3,2045,7.07,2046,6.41,2047,6.82,2048,4.199,2049,4.844,2050,4.874,2051,5.622,2052,3.483,2053,3,2054,4.199,2055,3,2056,3,2057,3.483,2058,3.483,2059,6.41,2060,3.483,2061,3,2062,3,2063,3,2064,3,2065,3,2066,3,2067,3.483,2068,3,2069,4.199,2070,3,2071,3.483,2072,3,2073,3,2074,4.199,2075,3,2076,3,2077,5.995,2078,3,2079,3,2080,3,2081,3,2082,3,2083,3,2084,3.483]],["title/dependencies.html",[116,2.412,2085,2.438]],["body/dependencies.html",[23,0.018,31,0.602,111,0.015,112,0.015,116,2.815,129,4.578,133,4.51,134,4.51,144,3.442,159,4.51,160,3.261,164,3.035,169,3.62,171,4.578,175,4.093,187,2.996,254,2.046,340,4.847,482,2.26,561,3.731,633,3.731,825,4.093,899,4.578,1155,2.996,1156,2.996,1244,4.578,1645,3.731,1781,4.578,2086,5.314,2087,7.614,2088,5.314,2089,6.423,2090,5.314,2091,5.314,2092,5.314,2093,5.314,2094,5.314,2095,6.423,2096,6.423,2097,5.314,2098,5.314,2099,5.314,2100,5.314,2101,5.314,2102,5.314,2103,5.314,2104,5.314,2105,5.314,2106,5.314,2107,5.314,2108,5.314,2109,5.314,2110,5.314,2111,5.314,2112,5.314,2113,5.314,2114,5.314,2115,5.314,2116,5.314,2117,5.314,2118,5.314,2119,5.314,2120,5.314,2121,5.314]],["title/miscellaneous/functions.html",[2122,1.907,2123,3.923]],["body/miscellaneous/functions.html",[19,0.409,22,0.823,23,0.017,67,0.973,111,0.016,112,0.016,126,4.555,158,5.27,159,4.152,189,5.094,242,1.661,243,1.587,246,2.17,786,4.473,1699,4.152,1716,5.094,2044,5.894,2063,5.894,2122,3.563,2123,5.094,2124,5.913,2125,5.094]],["title/index.html",[19,0.219,2126,3.165,2127,3.165]],["body/index.html",[0,0.362,4,0.222,13,1.136,23,0.015,27,2.683,67,0.764,111,0.015,112,0.015,125,2.683,160,3.276,175,5.341,220,4.136,293,1.136,356,1.428,774,4.215,929,3.235,995,3.027,1015,3.235,1441,4.626,1561,4.626,1633,5.973,1728,4.626,1953,4.626,2085,4.136,2128,6.463,2129,5.369,2130,4.626,2131,5.369,2132,5.369,2133,6.463,2134,7.362,2135,7.563,2136,5.369,2137,5.369,2138,5.369,2139,5.369,2140,5.369,2141,5.369,2142,5.369,2143,5.369,2144,6.933,2145,6.933,2146,5.369,2147,7.195,2148,5.369,2149,5.369,2150,5.369,2151,5.369,2152,6.463,2153,6.463,2154,7.195,2155,6.463,2156,6.463,2157,5.369,2158,5.369,2159,5.369,2160,5.369,2161,6.463,2162,5.369,2163,5.369,2164,5.369,2165,5.369,2166,5.369,2167,4.136,2168,5.369]],["title/modules.html",[115,2.44]],["body/modules.html",[23,0.015,111,0.015,112,0.015,114,4.134,115,2.782,121,3.814,122,3.814,134,5.298,152,3.814,176,3.814,288,4.535,295,4.112,1647,4.134,1919,5.879,2169,7.545,2170,7.545,2171,7.699]],["title/overview.html",[2167,3.978]],["body/overview.html",[1,1.795,2,1.339,23,0.018,36,1.117,69,1.678,72,1.604,74,1.678,76,1.532,80,1.678,82,1.604,84,1.678,86,1.678,87,1.604,89,1.678,94,1.532,96,1.532,98,1.604,100,1.463,103,1.678,105,1.463,107,1.604,111,0.014,112,0.014,114,5.567,115,2.275,116,3.202,117,4.147,118,4.147,119,4.147,120,4.147,121,4.279,122,4.623,123,3.202,124,2.55,125,2.405,152,4.842,176,4.842,229,2.714,449,2.55,464,2.156,579,3.98,716,2.444,717,2.55,805,4.147,806,4.147,807,4.147,895,2.047,1451,3.724,1453,3.98,1647,5.333,1648,4.147,1649,4.147,1650,4.147,1910,4.147,1911,4.147,1934,3.724,1957,4.147,1958,4.147,1959,4.147,2167,3.708,2172,4.814]],["title/properties.html",[20,0.795,2085,2.438]],["body/properties.html",[20,1.074,23,0.017,111,0.016,112,0.016,2130,5.298,2173,6.15]],["title/routes.html",[143,3.626]],["body/routes.html",[23,0.016,111,0.016,112,0.016,143,4.338]],["title/miscellaneous/typealiases.html",[2122,1.907,2174,4.554]],["body/miscellaneous/typealiases.html",[19,0.421,22,0.732,23,0.017,106,0.69,111,0.016,112,0.016,1487,4.689,1655,4.689,1679,5.993,2122,3.667,2175,6.087,2176,6.087]],["title/miscellaneous/variables.html",[2122,1.907,2177,3.923]],["body/miscellaneous/variables.html",[0,0.052,4,0.248,12,0.895,19,0.069,22,0.701,23,0.018,24,0.203,25,2.73,26,1.878,27,1.208,36,1.782,39,0.45,42,1.142,45,2.271,47,2.484,50,1.808,51,1.68,55,1.542,56,0.567,63,1.5,67,0.255,78,1.647,106,0.723,111,0.004,112,0.004,125,1.208,165,1.379,166,1.379,172,2.259,188,2.246,190,1.457,208,1.629,209,1.268,220,0.775,223,1.759,246,1.076,255,1.698,315,0.533,324,1.379,341,1.257,342,1.257,345,0.724,348,1.581,350,2.962,352,1.895,355,0.498,356,1.467,361,3.319,362,3.319,377,1.009,380,0.533,388,0.352,391,4.415,402,1.589,403,2.706,407,1.698,408,3.501,409,1.863,410,0.606,417,4.025,420,2.517,424,2.533,425,1.68,439,0.775,440,4.415,443,4.359,444,1.717,449,1.554,465,0.761,468,2.753,469,2.685,472,3.537,473,2.985,474,2.627,475,2.962,476,2.55,482,0.761,484,1.142,486,2.807,487,0.503,498,2.706,500,2.022,519,2.026,520,1.313,521,1.974,531,0.652,532,1.767,537,1.9,539,1.9,606,1.379,608,1.379,611,4.4,612,3.037,613,4.4,623,1.379,634,1.379,640,1.379,643,2.259,649,2.139,657,0.606,662,4.154,696,2.259,697,1.159,698,2.527,699,0.866,700,0.866,701,0.775,702,0.775,703,0.866,704,2.259,705,0.775,706,2.87,708,0.866,709,0.866,714,2.666,715,2.23,716,2.23,717,2.519,718,4.153,719,1.653,720,4.049,721,2.259,723,0.866,735,1.457,738,0.775,739,1.386,740,2.283,748,1.386,775,1.363,778,0.652,786,0.606,802,0.775,851,1.379,857,1.457,887,2.083,911,1.363,930,1.009,936,0.894,937,0.894,974,2.596,1043,1.009,1088,2.026,1091,1.363,1096,1.078,1125,2.433,1145,1.009,1152,1.078,1157,2.596,1197,3.249,1199,0.606,1238,0.866,1240,0.866,1245,0.866,1255,0.775,1256,1.379,1257,3.11,1273,0.503,1301,1.566,1354,1.159,1472,1.379,1493,1.379,1497,1.379,1499,1.379,1528,0.775,1531,2.897,1534,1.542,1535,1.542,1536,0.866,1541,1.542,1547,0.866,1556,2.897,1559,1.542,1562,0.866,1563,2.527,1570,2.083,1571,0.775,1573,2.527,1574,0.866,1575,0.775,1586,2.527,1620,3.916,1621,0.866,1631,5.291,1638,0.706,1645,0.706,1698,1.257,1699,0.706,1701,2.083,1705,0.866,1707,2.87,1708,1.379,1709,0.866,1710,2.083,1711,1.379,1714,1.379,1715,0.866,1783,1.542,1815,5.401,1826,1.542,1828,1.542,1832,0.866,1833,2.59,1834,2.527,1835,1.542,1836,1.542,1925,1.542,2032,0.866,2041,0.866,2048,0.866,2049,0.866,2053,0.866,2054,0.866,2055,0.866,2056,0.866,2061,0.866,2062,1.542,2064,0.866,2065,0.866,2066,0.866,2068,0.866,2069,0.866,2070,1.542,2072,0.866,2073,0.866,2074,0.866,2075,1.542,2076,1.542,2077,0.866,2078,1.542,2079,3.712,2080,2.527,2081,2.083,2082,1.542,2083,3.21,2122,0.606,2125,2.527,2177,0.866,2178,4.941,2179,1.79,2180,2.418,2181,2.418,2182,1.79,2183,1.006,2184,1.006,2185,1.006,2186,1.006,2187,1.006,2188,1.006,2189,1.006,2190,1.79,2191,1.006,2192,1.006,2193,1.006,2194,1.006,2195,1.006,2196,1.006,2197,1.006,2198,1.006,2199,1.006,2200,1.006,2201,1.006,2202,1.006,2203,1.006,2204,1.006,2205,1.79,2206,1.006,2207,1.006,2208,1.79,2209,2.418,2210,1.006,2211,2.418,2212,1.79,2213,1.006,2214,1.006,2215,1.006,2216,1.006,2217,1.006,2218,1.006,2219,1.006,2220,1.006,2221,1.006,2222,1.006,2223,1.006,2224,1.006,2225,3.726,2226,1.006,2227,1.006,2228,2.418,2229,2.418,2230,1.79,2231,1.79,2232,1.79,2233,1.79,2234,1.006,2235,1.006,2236,1.006,2237,1.006,2238,1.79,2239,1.79,2240,1.006,2241,1.006,2242,1.006,2243,1.006,2244,1.006,2245,1.006,2246,1.006,2247,1.006,2248,1.006,2249,1.006,2250,1.006,2251,1.006,2252,1.006,2253,1.006,2254,1.006,2255,1.006,2256,1.006,2257,1.006,2258,1.006,2259,1.006,2260,1.006,2261,1.006,2262,1.006,2263,1.006,2264,1.006,2265,1.006,2266,1.006,2267,1.006,2268,1.006,2269,1.79,2270,1.006,2271,2.933,2272,1.006,2273,1.006,2274,1.79,2275,2.933,2276,4.038,2277,2.933,2278,3.362,2279,2.933,2280,2.933,2281,4.038,2282,2.933,2283,2.933,2284,6.922,2285,1.006,2286,1.006,2287,1.006,2288,2.418,2289,3.726,2290,2.418,2291,4.038,2292,2.933,2293,4.038,2294,1.006,2295,1.006,2296,1.006,2297,1.006,2298,1.006,2299,1.006,2300,1.006,2301,4.038,2302,1.006,2303,1.006,2304,1.006,2305,2.418,2306,2.418,2307,3.726,2308,1.006,2309,2.418,2310,2.418,2311,2.418,2312,2.418,2313,2.418,2314,2.418,2315,1.006,2316,1.006,2317,1.006,2318,1.006,2319,1.006,2320,1.006,2321,1.006,2322,1.006,2323,1.006,2324,2.418,2325,1.006,2326,2.418,2327,2.418,2328,1.79,2329,1.79,2330,1.79,2331,1.006,2332,1.006,2333,1.006,2334,1.006,2335,1.006,2336,1.006,2337,1.006,2338,1.006,2339,1.79,2340,1.79,2341,1.79,2342,2.933,2343,1.79,2344,3.362,2345,1.79,2346,1.79,2347,1.79,2348,1.79,2349,1.79,2350,1.79,2351,1.79,2352,1.006,2353,1.006,2354,1.79,2355,1.006,2356,1.79,2357,1.006,2358,1.79,2359,1.79,2360,1.006,2361,1.006,2362,1.006,2363,2.418,2364,1.79,2365,1.006,2366,1.79,2367,1.006,2368,1.79,2369,2.933,2370,1.006,2371,1.79,2372,1.006,2373,1.006,2374,1.79,2375,1.006,2376,1.006,2377,1.006,2378,1.79,2379,1.79,2380,2.933,2381,2.933,2382,1.79,2383,1.79,2384,1.79,2385,1.79,2386,1.79,2387,1.79,2388,1.79,2389,1.79,2390,1.79,2391,1.79,2392,1.79,2393,1.006,2394,1.006,2395,1.006,2396,1.006,2397,1.006,2398,1.006,2399,1.006,2400,1.006,2401,1.79,2402,1.006,2403,1.006,2404,1.79,2405,1.006,2406,1.006,2407,1.006,2408,1.006,2409,1.006,2410,3.726,2411,1.79,2412,1.006,2413,1.006,2414,1.006,2415,1.006,2416,1.006,2417,2.418,2418,1.79,2419,1.79,2420,1.006,2421,2.933,2422,1.006,2423,1.006,2424,1.006,2425,1.006,2426,1.006,2427,1.006,2428,1.006,2429,1.79,2430,1.79,2431,1.006,2432,1.006,2433,1.006,2434,1.006,2435,1.006,2436,1.006,2437,1.006,2438,1.006,2439,1.006,2440,1.006,2441,1.006,2442,1.006,2443,1.79,2444,1.79,2445,1.006,2446,1.006,2447,1.79,2448,1.006,2449,1.006,2450,1.006,2451,1.006,2452,1.006,2453,1.006,2454,1.006,2455,1.79,2456,1.006,2457,1.006,2458,1.006,2459,1.006,2460,1.006]],["title/components/DialogDataComponent.html",[0,0.198,2461,3.263]],["body/components/DialogDataComponent.html",[0,0.242,1,0.494,2,0.905,3,0.106,4,0.084,5,1.081,7,0.593,8,0.593,9,0.095,11,0.593,12,1.439,13,1.374,15,0.541,17,1.033,19,0.225,20,0.568,22,0.489,23,0.018,24,0.411,26,1.131,28,0.844,30,0.666,31,0.369,32,0.235,33,0.106,35,2.4,36,1.688,39,2.081,40,1.961,41,1.226,42,1.921,45,1.017,47,1.879,50,1.821,51,2.321,56,1.835,58,1.078,61,0.593,62,0.947,63,0.905,64,0.593,65,1.441,66,0.593,67,0.579,68,0.593,75,0.593,77,1.62,78,1.578,79,1.351,82,0.494,83,0.593,87,0.494,88,0.593,94,0.472,95,0.593,96,0.472,97,0.593,100,0.721,101,1.181,102,0.947,105,0.451,106,0.461,107,0.494,108,0.827,109,0.593,110,0.593,111,0.007,112,0.007,156,1.078,160,1.538,169,2.864,184,3.054,188,0.962,190,1.501,208,1.482,209,1.503,211,1.961,223,2.279,231,1.147,233,0.626,234,2.501,237,0.392,242,0.494,243,0.472,246,0.747,250,0.626,263,0.712,264,1.147,282,1.961,293,0.43,294,1.835,295,1.961,299,1.147,327,1.078,329,0.887,334,2.292,345,2.054,348,1.864,350,0.962,355,1.131,356,1.928,357,0.823,388,2.068,402,1.538,409,1.128,420,0.712,424,1.697,444,0.866,462,0.356,463,1.976,465,2.304,468,2.195,469,2.275,472,2.56,473,1.566,474,0.712,475,0.962,476,1.729,478,2.688,482,2.419,484,2.195,486,0.912,489,1.017,498,3.13,500,0.866,520,2.081,521,2.461,535,0.962,542,0.823,568,1.724,578,1.961,612,1.078,630,1.147,655,2.507,657,1.961,670,2.108,714,1.384,715,1.316,716,1.316,733,0.962,739,0.962,740,1.078,743,1.147,748,0.962,760,1.835,762,1.147,774,1.147,779,2.154,790,1.147,797,1.147,845,1.226,861,1.147,881,1.078,895,0.866,917,1.147,921,1.835,922,1.078,923,1.318,924,1.318,927,2.108,928,1.318,929,1.226,930,1.835,931,1.318,932,1.318,933,2.634,934,1.318,935,1.318,936,2.321,937,1.626,938,1.226,939,2.691,940,1.318,941,1.226,942,3.061,943,1.226,944,1.318,945,2.108,946,2.108,947,1.318,948,1.318,949,1.318,950,2.108,951,1.318,952,1.318,953,3.01,954,1.318,955,2.108,956,1.318,957,1.318,958,1.318,959,1.318,960,1.318,961,1.147,962,1.147,963,1.318,964,1.318,965,1.318,966,1.318,967,3.291,968,1.318,969,1.318,970,1.318,971,1.318,972,1.318,973,1.318,974,1.226,975,1.318,976,1.318,977,1.318,978,1.318,979,1.318,980,1.318,981,1.318,982,1.318,983,2.108,984,1.318,985,1.318,986,1.017,987,1.318,988,1.318,989,1.318,990,3.061,992,1.318,993,1.226,994,2.108,995,1.147,996,1.318,997,1.318,998,1.318,999,1.318,1000,1.318,1001,1.318,1002,1.318,1003,2.634,1004,1.318,1005,2.634,1006,1.318,1007,2.634,1008,1.318,1009,1.961,1010,2.108,1011,1.318,1012,1.318,1013,1.318,1014,1.318,1015,1.226,1016,1.226,1017,2.108,1018,2.634,1019,1.318,1020,1.318,1021,1.318,1022,1.318,1023,1.318,1024,1.318,1025,2.634,1026,2.634,1027,1.318,1028,1.318,1029,1.318,1030,1.318,1031,2.108,1032,1.318,1033,2.634,1034,1.318,1035,2.108,1036,2.108,1037,1.318,1038,1.318,1039,1.318,1040,1.318,1041,1.318,1042,1.318,1043,1.147,1044,1.318,1045,2.108,1046,1.318,1047,1.318,1048,1.318,1049,1.318,1050,1.318,1051,1.318,1052,2.108,1053,1.318,1054,1.226,1055,2.108,1056,2.108,1057,3.947,1058,2.108,1059,2.108,1060,2.108,1061,3.828,1062,2.108,1063,2.108,1064,2.108,1065,1.318,1066,2.634,1067,1.318,1068,3.291,1069,1.318,1070,2.108,1071,2.634,1072,1.318,1073,2.45,1074,2.45,1075,1.318,1076,3.291,1077,2.108,1078,2.108,1079,1.318,1080,1.318,1081,1.318,1082,1.318,1083,1.318,1084,1.318,1085,1.318,1086,1.318,1087,2.108,1088,1.226,1089,1.318,1090,2.108,1091,1.835,1092,2.634,1093,2.634,1094,2.634,1095,2.634,1096,2.799,1097,1.318,1098,1.318,1099,1.318,1100,1.318,1101,2.45,1102,2.108,1103,1.017,1104,1.318,1105,1.318,1106,1.318,1107,1.318,1108,1.318,1109,1.318,1110,1.318,1111,1.318,1112,3.01,1113,3.291,1114,1.318,1115,2.108,1116,3.291,1117,1.318,1118,2.108,1119,1.318,1120,1.226,1121,1.318,1122,1.318,1123,1.226,1124,1.318,1125,1.226,1126,2.108,1127,1.318,1128,1.318,1129,2.108,1130,1.318,1131,1.318,1132,1.318,1133,2.108,1134,1.318,1135,1.318,1136,1.226,1137,2.634,1138,1.318,1139,1.318,1140,1.318,1141,1.318,1142,1.318,1143,1.318,1144,1.318,1145,1.147,1146,1.318,1147,1.318,1148,1.318,1149,1.318,1150,1.226,1151,1.318,1152,1.226,1153,1.318,1154,1.318,1155,1.147,1156,1.147,1157,1.226,1158,1.318,1159,1.318,1160,1.318,1161,1.318,1162,1.318,1163,2.634,1164,2.108,1165,1.318,1166,1.226,1167,1.318,1168,1.318,1169,2.45,1170,1.318,1171,1.318,1172,1.318,1173,2.108,1174,1.318,1175,3.291,1176,1.318,1177,1.318,1178,1.318,1179,2.108,1180,2.108,1181,1.318,1183,1.318,1184,2.634,1185,2.634,1186,2.634,1187,1.318,1188,1.318,1189,1.318,1190,1.318,1191,1.318,1193,1.226,1194,1.226,1195,1.226,1196,1.226,1197,1.961,1198,2.108,1199,1.961,1200,2.108,1201,3.291,1202,2.634,1203,2.108,1204,2.634,1205,2.108,1206,2.108,1207,2.108,1208,2.108,1209,1.318,1210,1.318,1211,1.318,1215,1.318,1216,1.318,1218,1.318,1219,2.864,1220,1.921,1221,1.318,1222,1.318,1223,2.634,1224,2.108,1225,1.961,1226,2.799,1227,1.961,1228,3.01,1229,1.318,1233,1.568,1249,1.754,1250,1.754,1251,2.804,1252,2.804,1253,2.804,1254,2.804,1255,2.507,1256,2.507,1257,2.507,1258,2.804,1259,2.507,1260,4.003,1261,2.804,1262,2.804,1263,2.804,1264,2.804,1265,2.804,1266,2.804,2461,4.003,2462,2.035,2463,2.035,2464,2.035,2465,2.035,2466,2.035,2467,2.035,2468,2.035,2469,2.035,2470,2.035]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["0",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"interfaces/GrammarModel.html":{},"components/NavigationComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["0,1",{"_index":2284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":2173,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":317,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["0.11.4",{"_index":2121,"title":{},"body":{"dependencies.html":{}}}],["0.156",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.2",{"_index":437,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["0.22",{"_index":1616,"title":{},"body":{"components/GrammarComponent.html":{}}}],["0.2s",{"_index":2335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.3px",{"_index":798,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["0.44",{"_index":1610,"title":{},"body":{"components/GrammarComponent.html":{}}}],["0.5px",{"_index":1881,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["0.6",{"_index":488,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["0.71",{"_index":1605,"title":{},"body":{"components/GrammarComponent.html":{}}}],["0.84",{"_index":768,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["0.844",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.87",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["0.8em",{"_index":1628,"title":{},"body":{"components/GrammarComponent.html":{}}}],["0.9.4",{"_index":2103,"title":{},"body":{"dependencies.html":{}}}],["0.9rem",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2050,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2060,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2058,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":2067,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":2057,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":2052,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2046,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2059,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2047,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2071,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2051,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00796b",{"_index":1589,"title":{},"body":{"components/GrammarComponent.html":{}}}],["0;\\n",{"_index":353,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["0px",{"_index":761,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["0s",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":409,"title":{"interfaces/User-1.html":{}},"body":{"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/TableComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["1.0.0",{"_index":2100,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2105,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":1629,"title":{},"body":{"components/GrammarComponent.html":{}}}],["1.2rem",{"_index":1617,"title":{},"body":{"components/GrammarComponent.html":{}}}],["1.5",{"_index":319,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["1.5rem",{"_index":736,"title":{},"body":{"components/DeaComponent.html":{},"components/NavigationComponent.html":{}}}],["10",{"_index":895,"title":{},"body":{"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"overview.html":{},"components/DialogDataComponent.html":{}}}],["100",{"_index":739,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["100%;\\n",{"_index":349,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["1000",{"_index":380,"title":{},"body":{"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["100px",{"_index":734,"title":{},"body":{"components/DeaComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{}}}],["106px",{"_index":1632,"title":{},"body":{"components/GrammarComponent.html":{}}}],["10pt",{"_index":1072,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["110",{"_index":2300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11px",{"_index":1138,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["12.0.0",{"_index":2112,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":1133,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["1200px",{"_index":1849,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["128",{"_index":1604,"title":{},"body":{"components/GrammarComponent.html":{}}}],["12px",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{}}}],["13.2.5",{"_index":2131,"title":{},"body":{"index.html":{}}}],["13.3.9",{"_index":2089,"title":{},"body":{"dependencies.html":{}}}],["130deg",{"_index":2235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["130px",{"_index":1637,"title":{},"body":{"components/GrammarComponent.html":{}}}],["14.0.2",{"_index":2095,"title":{},"body":{"dependencies.html":{}}}],["14.1.0",{"_index":2087,"title":{},"body":{"dependencies.html":{}}}],["149px",{"_index":1886,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["15",{"_index":412,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["150px",{"_index":751,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["16px",{"_index":797,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["18.0.1",{"_index":2113,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":2172,"title":{},"body":{"overview.html":{}}}],["192",{"_index":1608,"title":{},"body":{"components/GrammarComponent.html":{}}}],["1999",{"_index":1971,"title":{},"body":{"components/TableComponent.html":{}}}],["19px",{"_index":799,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["1].offsettop",{"_index":1513,"title":{},"body":{"components/GrammarComponent.html":{}}}],["1].prevexp",{"_index":1553,"title":{},"body":{"components/GrammarComponent.html":{}}}],["1].rule",{"_index":1550,"title":{},"body":{"components/GrammarComponent.html":{}}}],["1_2",{"_index":2223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1b",{"_index":897,"title":{},"body":{"injectables/DeaService.html":{}}}],["1b2",{"_index":869,"title":{},"body":{"injectables/DeaService.html":{}}}],["1px",{"_index":404,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["1rem",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["2",{"_index":424,"title":{"interfaces/User-2.html":{}},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["2.0.5",{"_index":2108,"title":{},"body":{"dependencies.html":{}}}],["2.2.14",{"_index":2107,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2118,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":2106,"title":{},"body":{"dependencies.html":{}}}],["2.7.1",{"_index":2115,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":740,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["200",{"_index":2209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2000",{"_index":2200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200px",{"_index":993,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["20px",{"_index":1893,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["211",{"_index":1615,"title":{},"body":{"components/GrammarComponent.html":{}}}],["220px",{"_index":1901,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["234px",{"_index":1907,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["240",{"_index":766,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["250px",{"_index":992,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["253",{"_index":767,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["26px",{"_index":1612,"title":{},"body":{"components/GrammarComponent.html":{}}}],["2_3",{"_index":2213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2_4",{"_index":2214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":741,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["2rem",{"_index":1898,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["3",{"_index":420,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["3'].map((v",{"_index":2321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.22.1",{"_index":2104,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1096,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["300",{"_index":2208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3000",{"_index":2201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300px",{"_index":784,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["30px",{"_index":2339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":791,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["33.33",{"_index":1630,"title":{},"body":{"components/GrammarComponent.html":{}}}],["360",{"_index":2419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38px",{"_index":2231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3_6",{"_index":2216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3em",{"_index":1622,"title":{},"body":{"components/GrammarComponent.html":{}}}],["3f51b5",{"_index":418,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["3px",{"_index":410,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["3rem",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":714,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["4.32.1",{"_index":2119,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":2260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4000",{"_index":2202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40px",{"_index":1895,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["45",{"_index":1609,"title":{},"body":{"components/GrammarComponent.html":{}}}],["450px",{"_index":2199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["470",{"_index":2207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["480px",{"_index":1582,"title":{},"body":{"components/GrammarComponent.html":{}}}],["4_5",{"_index":2215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":422,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["5",{"_index":715,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["5.2.0",{"_index":2101,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1088,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["500",{"_index":1401,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["5000",{"_index":2203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500px",{"_index":752,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["50px",{"_index":802,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["5110",{"_index":1969,"title":{},"body":{"components/TableComponent.html":{}}}],["550px",{"_index":732,"title":{},"body":{"components/DeaComponent.html":{}}}],["5_6",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5_7",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5px",{"_index":435,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["5rem",{"_index":770,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["6",{"_index":716,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["6.0.0",{"_index":2109,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":2206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["666",{"_index":1831,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["6_4",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6_7",{"_index":2217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6px",{"_index":1906,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["7",{"_index":717,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["7.5.0",{"_index":2116,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["700",{"_index":2204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["700px",{"_index":783,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"components/StartGameComponent.html":{}}}],["70px",{"_index":1884,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["70px);\\n",{"_index":347,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["7_8",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7px",{"_index":804,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["8",{"_index":425,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["8.5.1",{"_index":2111,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":1134,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["80px",{"_index":1848,"title":{},"body":{"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["8594",{"_index":711,"title":{},"body":{"components/DeaComponent.html":{}}}],["8px",{"_index":1636,"title":{},"body":{"components/GrammarComponent.html":{},"components/TableComponent.html":{}}}],["9",{"_index":857,"title":{},"body":{"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":2094,"title":{},"body":{"dependencies.html":{}}}],["90deg",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90px",{"_index":1887,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["9]/gm",{"_index":1390,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["9]\\s*[0",{"_index":1389,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["9dbaea",{"_index":2340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_expression",{"_index":1276,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_getcorrectexpression",{"_index":1280,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_getwrongexpression",{"_index":1281,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_haselementofkind",{"_index":1282,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["_haselementofkind(exp",{"_index":1308,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_hasnonterminalchar",{"_index":1283,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["_hasnonterminalchar(exp",{"_index":1311,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_hasterminalchar",{"_index":1284,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["_hasterminalchar(exp",{"_index":1313,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_isnegnumber",{"_index":1285,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["_isnegnumber(exp",{"_index":1315,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_resetanimationobject",{"_index":562,"title":{},"body":{"components/DeaComponent.html":{}}}],["_rule",{"_index":1277,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_ruleset",{"_index":1278,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_setruleset",{"_index":1286,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["_setruleset(oldexp",{"_index":1317,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_state",{"_index":2196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_valid",{"_index":1279,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_validatereberstring",{"_index":828,"title":{},"body":{"injectables/DeaService.html":{}}}],["_validatereberstring(str",{"_index":834,"title":{},"body":{"injectables/DeaService.html":{}}}],["a.id",{"_index":896,"title":{},"body":{"injectables/DeaService.html":{}}}],["ab",{"_index":1829,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["ableitung",{"_index":1477,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ableitungen",{"_index":2370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ableitungsbaum",{"_index":1479,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ableitungsliste",{"_index":1619,"title":{},"body":{"components/GrammarComponent.html":{}}}],["absolute",{"_index":777,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["absolute;\\n",{"_index":351,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["abspielen",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acc",{"_index":1206,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["access",{"_index":281,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["accessors",{"_index":1290,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["action",{"_index":786,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarState.html":{},"components/MyCounterComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["action.user",{"_index":2197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activatedroutesnapshot",{"_index":245,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["active",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{}}}],["activelevel",{"_index":968,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["actual_component",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["add",{"_index":1561,"title":{},"body":{"components/GrammarComponent.html":{},"index.html":{}}}],["added",{"_index":1795,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["additional",{"_index":280,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["afterexp",{"_index":1336,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["afterviewinit",{"_index":1438,"title":{},"body":{"components/GrammarComponent.html":{}}}],["agree",{"_index":1921,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ah",{"_index":872,"title":{},"body":{"injectables/DeaService.html":{}}}],["ah.event",{"_index":874,"title":{},"body":{"injectables/DeaService.html":{}}}],["ah.value",{"_index":876,"title":{},"body":{"injectables/DeaService.html":{}}}],["ah.value.tostring",{"_index":884,"title":{},"body":{"injectables/DeaService.html":{}}}],["aktuelles",{"_index":1949,"title":{},"body":{"components/StartGameComponent.html":{}}}],["akzeptiert",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert(\"bitte",{"_index":1193,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"components/DialogDataComponent.html":{}}}],["aliases",{"_index":2175,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":754,"title":{},"body":{"components/DeaComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{}}}],["alignment",{"_index":1066,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["alle",{"_index":489,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"components/DialogDataComponent.html":{}}}],["allow",{"_index":278,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["already",{"_index":1104,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["als",{"_index":2278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amount",{"_index":1820,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["anfangen",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angezeigt",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"dependencies.html":{},"index.html":{},"components/DialogDataComponent.html":{}}}],["angular/animations",{"_index":2086,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2088,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":2090,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"modules/DeaModule.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"components/DialogDataComponent.html":{}}}],["angular/forms",{"_index":825,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2091,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["angular/material/dialog",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["angular/material/form",{"_index":812,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["angular/material/icon",{"_index":821,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["angular/material/input",{"_index":815,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["angular/material/radio",{"_index":1654,"title":{},"body":{"modules/GrammarModule.html":{}}}],["angular/material/slider",{"_index":823,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["angular/material/table",{"_index":817,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["angular/platform",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/DeaModule.html":{},"dependencies.html":{}}}],["anhängen",{"_index":522,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["animate",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animatedrulesstream",{"_index":1656,"title":{},"body":{"injectables/GrammarService.html":{}}}],["animatestep",{"_index":372,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["animatestep(str",{"_index":376,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["animation",{"_index":2369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationobject",{"_index":551,"title":{},"body":{"components/DeaComponent.html":{}}}],["animations",{"_index":1501,"title":{},"body":{"components/GrammarComponent.html":{}}}],["animationsgeschwindigkeit",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationsmodus",{"_index":1543,"title":{},"body":{"components/GrammarComponent.html":{}}}],["animieren",{"_index":1577,"title":{},"body":{"components/GrammarComponent.html":{}}}],["animiert",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["another",{"_index":1797,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["anwendbar",{"_index":1569,"title":{},"body":{"components/GrammarComponent.html":{}}}],["any).compounddraganddrop(options",{"_index":1840,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["any).isfixed",{"_index":960,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["anzahl",{"_index":497,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"index.html":{},"components/DialogDataComponent.html":{}}}],["app.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.config",{"_index":641,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["app_initializer",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomp",{"_index":1017,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["appcomp.observeddiagram.model",{"_index":1115,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["appcomp.selectednodedata",{"_index":1021,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["appcomp.state",{"_index":1023,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{},"components/DialogDataComponent.html":{}}}],["appmodule",{"_index":114,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingmodule",{"_index":121,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstate",{"_index":1705,"title":{},"body":{"interfaces/GrammarState.html":{},"miscellaneous/variables.html":{}}}],["area",{"_index":1819,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["args",{"_index":2318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args.length",{"_index":2319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args[0",{"_index":2320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":323,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["arial",{"_index":1974,"title":{},"body":{"components/TableComponent.html":{}}}],["arr",{"_index":2032,"title":{},"body":{"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["arr.length",{"_index":544,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["arr[arr.length",{"_index":2317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr[math.floor(math.random",{"_index":543,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["array",{"_index":283,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["array.from(this._getcorrectexpression().replace",{"_index":1415,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["arrow",{"_index":1834,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["arrowhead",{"_index":1094,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["artifacts",{"_index":2148,"title":{},"body":{"index.html":{}}}],["artikel",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asw",{"_index":889,"title":{},"body":{"injectables/DeaService.html":{}}}],["async",{"_index":235,"title":{},"body":{"injectables/AuthGuard.html":{},"components/StartGameComponent.html":{}}}],["async)!.username",{"_index":1762,"title":{},"body":{"components/NavigationComponent.html":{},"components/StartGameComponent.html":{}}}],["attr(data",{"_index":796,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["auch",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auf",{"_index":538,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["aufgabe",{"_index":1878,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["ausdruck",{"_index":1531,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["ausdrucks",{"_index":1536,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["ausdrücke",{"_index":1530,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ausfuehren",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ausgabe",{"_index":707,"title":{},"body":{"components/DeaComponent.html":{}}}],["ausgabestring",{"_index":451,"title":{},"body":{"classes/DEAException.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["ausgehenden",{"_index":490,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["auswertung",{"_index":1541,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["auswählen",{"_index":501,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["auth.guard",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["authguard",{"_index":161,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"coverage.html":{}}}],["authmodule",{"_index":288,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{}}}],["auto",{"_index":1054,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["autolock",{"_index":2242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automaten",{"_index":2281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":2139,"title":{},"body":{"index.html":{}}}],["automatisch",{"_index":1559,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["autoungrabify",{"_index":2241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autounselectify",{"_index":2337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1919,"title":{},"body":{"components/RegisterComponent.html":{},"modules.html":{}}}],["await",{"_index":268,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["b",{"_index":718,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["bar",{"_index":737,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["base",{"_index":952,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["basic",{"_index":1590,"title":{},"body":{"components/GrammarComponent.html":{}}}],["bb",{"_index":2224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["becomes",{"_index":1801,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["behavior",{"_index":954,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["behaviorsubject",{"_index":386,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{}}}],["behaviorsubject('stop",{"_index":615,"title":{},"body":{"components/DeaComponent.html":{},"injectables/GrammarService.html":{}}}],["behaviorsubject(2",{"_index":1672,"title":{},"body":{"injectables/GrammarService.html":{}}}],["bei",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beim",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beliebegen",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bereits",{"_index":866,"title":{},"body":{"injectables/DeaService.html":{}}}],["bergangsfunktion",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beta1",{"_index":2102,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":1767,"title":{},"body":{"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/StartGameComponent.html":{}}}],["bewegen",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bezier",{"_index":1836,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["bist",{"_index":1162,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["bit",{"_index":1823,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["bitte",{"_index":1557,"title":{},"body":{"components/GrammarComponent.html":{}}}],["black",{"_index":402,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["bleibt",{"_index":1482,"title":{},"body":{"components/GrammarComponent.html":{}}}],["block",{"_index":1598,"title":{},"body":{"components/GrammarComponent.html":{}}}],["blue",{"_index":738,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["bold",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["boolean",{"_index":1220,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"components/DialogDataComponent.html":{}}}],["bootstrap",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":403,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["both",{"_index":1890,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["bottom",{"_index":733,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["bottonsgroup",{"_index":1954,"title":{},"body":{"components/StartGameComponent.html":{}}}],["boundingboxoptions",{"_index":1804,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["box",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["boxselectionenabled",{"_index":2336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":885,"title":{},"body":{"injectables/DeaService.html":{},"components/GrammarComponent.html":{}}}],["browse",{"_index":2171,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/PuzzleModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/GrammarModule.html":{}}}],["browseranimationsmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/GrammarModule.html":{}}}],["browsermodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/PuzzleModule.html":{}}}],["build",{"_index":2147,"title":{},"body":{"index.html":{}}}],["bulma",{"_index":1244,"title":{},"body":{"components/DialogComponent.html":{},"dependencies.html":{}}}],["button",{"_index":771,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["c",{"_index":391,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"miscellaneous/variables.html":{}}}],["c.animate",{"_index":421,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["c.connectednodes().toarray",{"_index":394,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["c.data('label",{"_index":413,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["c.style",{"_index":406,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["calc(100",{"_index":346,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["calc(100vh",{"_index":1880,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["calc(50",{"_index":1894,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["calculating",{"_index":1807,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["call",{"_index":951,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["canactivate",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{}}}],["cancel",{"_index":1166,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/DialogDataComponent.html":{}}}],["canceled",{"_index":1171,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["canvas",{"_index":1245,"title":{},"body":{"components/DialogComponent.html":{},"miscellaneous/variables.html":{}}}],["capabilities",{"_index":2164,"title":{},"body":{"index.html":{}}}],["capp",{"_index":1882,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["case",{"_index":1800,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["catch",{"_index":909,"title":{},"body":{"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["cc",{"_index":2226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ccc",{"_index":407,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["cdnd",{"_index":1839,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["cdr",{"_index":988,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["center",{"_index":748,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["centered",{"_index":1841,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["change",{"_index":2141,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":927,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["changes",{"_index":334,"title":{},"body":{"components/CytoGraphComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["changes.modifiednodedata",{"_index":1127,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["char",{"_index":879,"title":{},"body":{"injectables/DeaService.html":{}}}],["check",{"_index":995,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"index.html":{},"components/DialogDataComponent.html":{}}}],["checkbeginning",{"_index":1995,"title":{},"body":{"classes/WordChecker.html":{}}}],["checkbeginning(dea",{"_index":1997,"title":{},"body":{"classes/WordChecker.html":{}}}],["checkdea",{"_index":1190,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["checker",{"_index":940,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["checker.ts",{"_index":1994,"title":{},"body":{"classes/WordChecker.html":{},"coverage.html":{}}}],["checker.ts:18",{"_index":2000,"title":{},"body":{"classes/WordChecker.html":{}}}],["checker.ts:5",{"_index":1998,"title":{},"body":{"classes/WordChecker.html":{}}}],["checkloginiframe",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["checkwordrekursive",{"_index":1996,"title":{},"body":{"classes/WordChecker.html":{}}}],["checkwordrekursive(dea",{"_index":1999,"title":{},"body":{"classes/WordChecker.html":{}}}],["chevron_left",{"_index":725,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["chevron_right",{"_index":729,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["child",{"_index":790,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["child(2",{"_index":793,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["child(even",{"_index":764,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["child(even){background",{"_index":1978,"title":{},"body":{"components/TableComponent.html":{}}}],["child.active::after",{"_index":801,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["children",{"_index":1509,"title":{},"body":{"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{}}}],["children[children.length",{"_index":1512,"title":{},"body":{"components/GrammarComponent.html":{}}}],["choice",{"_index":2160,"title":{},"body":{"index.html":{}}}],["chose",{"_index":1799,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["circle",{"_index":1058,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["class",{"_index":33,"title":{"classes/DEAException.html":{},"classes/DemoForceDirectedLayout.html":{},"classes/ExpressionGrammarModel.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"components/DialogDataComponent.html":{}}}],["class=\"ableitungsbaum",{"_index":1581,"title":{},"body":{"components/GrammarComponent.html":{}}}],["class=\"ableitungsliste",{"_index":1565,"title":{},"body":{"components/GrammarComponent.html":{}}}],["class=\"column",{"_index":1540,"title":{},"body":{"components/GrammarComponent.html":{}}}],["class=\"columns",{"_index":1545,"title":{},"body":{"components/GrammarComponent.html":{}}}],["classes",{"_index":449,"title":{},"body":{"classes/DEAException.html":{},"classes/DemoForceDirectedLayout.html":{},"classes/ExpressionGrammarModel.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["clear",{"_index":1889,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["cli",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["clientid",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["clockwise",{"_index":2415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closed",{"_index":999,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["cluster_appmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_deamodule",{"_index":805,"title":{},"body":{"modules/DeaModule.html":{},"overview.html":{}}}],["cluster_deamodule_declarations",{"_index":807,"title":{},"body":{"modules/DeaModule.html":{},"overview.html":{}}}],["cluster_deamodule_providers",{"_index":806,"title":{},"body":{"modules/DeaModule.html":{},"overview.html":{}}}],["cluster_grammarmodule",{"_index":1648,"title":{},"body":{"modules/GrammarModule.html":{},"overview.html":{}}}],["cluster_grammarmodule_declarations",{"_index":1650,"title":{},"body":{"modules/GrammarModule.html":{},"overview.html":{}}}],["cluster_grammarmodule_providers",{"_index":1649,"title":{},"body":{"modules/GrammarModule.html":{},"overview.html":{}}}],["cluster_puzzlemodule",{"_index":1910,"title":{},"body":{"modules/PuzzleModule.html":{},"overview.html":{}}}],["cluster_puzzlemodule_declarations",{"_index":1911,"title":{},"body":{"modules/PuzzleModule.html":{},"overview.html":{}}}],["cluster_startgamemodule",{"_index":1957,"title":{},"body":{"modules/StartGameModule.html":{},"overview.html":{}}}],["cluster_startgamemodule_declarations",{"_index":1959,"title":{},"body":{"modules/StartGameModule.html":{},"overview.html":{}}}],["cluster_startgamemodule_providers",{"_index":1958,"title":{},"body":{"modules/StartGameModule.html":{},"overview.html":{}}}],["code",{"_index":1441,"title":{},"body":{"components/GrammarComponent.html":{},"index.html":{}}}],["code.code",{"_index":1600,"title":{},"body":{"components/GrammarComponent.html":{}}}],["codes",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codesttring",{"_index":1472,"title":{},"body":{"components/GrammarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["col",{"_index":1625,"title":{},"body":{"components/GrammarComponent.html":{}}}],["coll",{"_index":926,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{}}}],["collapse",{"_index":1976,"title":{},"body":{"components/TableComponent.html":{}}}],["color",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["column",{"_index":779,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["columns",{"_index":1847,"title":{},"body":{"components/PuzzleComponent.html":{},"components/StartGameComponent.html":{}}}],["columnspan",{"_index":1069,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["command",{"_index":2161,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["component/footer/footer.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["component/login/login.component",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["component/main",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["component/navigation/navigation.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["component/register/register.component",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["component/table/table.component",{"_index":1961,"title":{},"body":{"modules/StartGameModule.html":{}}}],["component_template",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"overview.html":{},"components/DialogDataComponent.html":{}}}],["compound",{"_index":1781,"title":{},"body":{"components/PuzzleComponent.html":{},"dependencies.html":{}}}],["compounddraganddrop",{"_index":1780,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["conditions",{"_index":1923,"title":{},"body":{"components/RegisterComponent.html":{}}}],["config",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["configured",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm('bist",{"_index":1210,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["confirm(text",{"_index":1167,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["connect",{"_index":1745,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["console.error(msg",{"_index":461,"title":{},"body":{"classes/DEAException.html":{}}}],["console.log(\"beginn:\",word",{"_index":2003,"title":{},"body":{"classes/WordChecker.html":{}}}],["console.log(\"foundlink\",foundlink",{"_index":2021,"title":{},"body":{"classes/WordChecker.html":{}}}],["console.log(\"foundlinkslänge\",foundlinks.length",{"_index":2011,"title":{},"body":{"classes/WordChecker.html":{}}}],["console.log(\"outlinks\",outgoinglinks",{"_index":2020,"title":{},"body":{"classes/WordChecker.html":{}}}],["console.log(\"validate",{"_index":1189,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["console.log('the",{"_index":998,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["console.log(currentnode",{"_index":2006,"title":{},"body":{"classes/WordChecker.html":{}}}],["console.log(data",{"_index":1945,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["console.log(lastfedges",{"_index":433,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["console.log(this.mydiagramcomponent.diagram",{"_index":1008,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["console.log(word",{"_index":2005,"title":{},"body":{"classes/WordChecker.html":{}}}],["console.log(wordgenerator.generaterandomwords([\"1",{"_index":1188,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["console.log(wordgenerator.generatewords(deaobject",{"_index":1187,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["const",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["constructor",{"_index":237,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User-1.html":{},"injectables/UsersService.html":{},"components/DialogDataComponent.html":{}}}],["constructor(cdr",{"_index":1853,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["constructor(dialog",{"_index":577,"title":{},"body":{"components/DeaComponent.html":{}}}],["constructor(dialogref",{"_index":1233,"title":{},"body":{"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["constructor(exp",{"_index":1295,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["constructor(grammargraphservice",{"_index":1450,"title":{},"body":{"components/GrammarComponent.html":{}}}],["constructor(http",{"_index":1986,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":357,"title":{},"body":{"components/CytoGraphComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"components/DialogDataComponent.html":{}}}],["constructor(props",{"_index":1337,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["constructor(public",{"_index":2470,"title":{},"body":{"components/DialogDataComponent.html":{}}}],["constructor(reberstring",{"_index":453,"title":{},"body":{"classes/DEAException.html":{}}}],["constructor(renderer",{"_index":306,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["constructor(router",{"_index":238,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(store",{"_index":1753,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{}}}],["constructor(usersservice",{"_index":1933,"title":{},"body":{"components/StartGameComponent.html":{}}}],["container",{"_index":364,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleComponent.html":{}}}],["containter",{"_index":1602,"title":{},"body":{"components/GrammarComponent.html":{}}}],["content",{"_index":731,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["contents",{"_index":1151,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["context",{"_index":2075,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":1584,"title":{},"body":{"components/GrammarComponent.html":{}}}],["corner",{"_index":1147,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["correct",{"_index":1618,"title":{},"body":{"components/GrammarComponent.html":{}}}],["correctexp",{"_index":1414,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["correctexp.join",{"_index":1424,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["correctexp.length",{"_index":1417,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["correctexp[indexofexp",{"_index":1419,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["corresponding",{"_index":949,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["count",{"_index":1738,"title":{},"body":{"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/User-2.html":{}}}],["counter",{"_index":1736,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["counter'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["counter.actions",{"_index":256,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["counter.component.html",{"_index":1737,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["counter.component.ts",{"_index":1735,"title":{},"body":{"components/MyCounterComponent.html":{},"coverage.html":{}}}],["counter.component.ts:15",{"_index":1742,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["counter.component.ts:19",{"_index":1741,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["counter.component.ts:23",{"_index":1743,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["counter.component.ts:9",{"_index":1740,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["counter.reducer",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["counter/my",{"_index":1734,"title":{},"body":{"components/MyCounterComponent.html":{},"coverage.html":{}}}],["counterreducer",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":2037,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createaction('[counter",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[general",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[grammar",{"_index":2316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdefaultreberfsm",{"_index":829,"title":{},"body":{"injectables/DeaService.html":{}}}],["createfeatureselector",{"_index":1700,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["createfeatureselector('grammar",{"_index":1713,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["createmachine",{"_index":847,"title":{},"body":{"injectables/DeaService.html":{}}}],["createrebermachine",{"_index":830,"title":{},"body":{"injectables/DeaService.html":{}}}],["createreducer",{"_index":1701,"title":{},"body":{"interfaces/GrammarState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1702,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["createselector(grammarselector",{"_index":1715,"title":{},"body":{"interfaces/GrammarState.html":{},"miscellaneous/variables.html":{}}}],["cspeed",{"_index":623,"title":{},"body":{"components/DeaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":604,"title":{},"body":{"components/DeaComponent.html":{},"components/MyCounterComponent.html":{}}}],["currentindex",{"_index":1657,"title":{},"body":{"injectables/GrammarService.html":{}}}],["currently",{"_index":265,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["currentnode",{"_index":479,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["currentnode!.figure",{"_index":2007,"title":{},"body":{"classes/WordChecker.html":{}}}],["currentnode!.id",{"_index":496,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["currentnode.figure",{"_index":485,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["currentstartlink",{"_index":533,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["currentstartlink!.to",{"_index":540,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["currentuser",{"_index":1930,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["cursor",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["curve",{"_index":1145,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["customers",{"_index":2099,"title":{},"body":{"dependencies.html":{}}}],["cy",{"_index":296,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleComponent.html":{}}}],["cyconfig",{"_index":302,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["cycontianer",{"_index":359,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["cyto",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"modules/DeaModule.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"modules/GrammarModule.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["cytographcomponent",{"_index":69,"title":{"components/CytoGraphComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"modules/DeaModule.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cytographservice",{"_index":311,"title":{"injectables/CytoGraphService.html":{}},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"coverage.html":{}}}],["cytoscape",{"_index":340,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleComponent.html":{},"dependencies.html":{}}}],["cytoscape.use",{"_index":1782,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["cytoscape.use(dagre",{"_index":1646,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["cytoscapeconfig",{"_index":606,"title":{},"body":{"components/DeaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cytoservice",{"_index":310,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["d",{"_index":2301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dagre",{"_index":1645,"title":{},"body":{"components/GrammarGraphComponent.html":{},"components/PuzzleComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["daniel",{"_index":1970,"title":{},"body":{"components/TableComponent.html":{}}}],["dar",{"_index":2282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["darkcyan",{"_index":1909,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["das",{"_index":520,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["dashed",{"_index":788,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["dass",{"_index":2467,"title":{},"body":{"components/DialogDataComponent.html":{}}}],["data",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User-1.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["data(id",{"_index":1832,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["data(label",{"_index":2233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.winstate",{"_index":1252,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["data.word.index",{"_index":1264,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["data.word.vergleich.referenzgraph",{"_index":1262,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["data.word.vergleich.yourgraph",{"_index":1261,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["data.word.word",{"_index":1254,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["datasource",{"_index":552,"title":{},"body":{"components/DeaComponent.html":{}}}],["datasyncservice",{"_index":932,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["datasyncservice.synclinkdata(changes",{"_index":1117,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["datasyncservice.syncmodeldata(changes",{"_index":1119,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["datasyncservice.syncnodedata(changes",{"_index":1114,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["db",{"_index":2098,"title":{},"body":{"dependencies.html":{}}}],["ddd",{"_index":1977,"title":{},"body":{"components/TableComponent.html":{}}}],["dea",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/FooterComponent.html":{},"components/StartGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dea'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["dea.component",{"_index":810,"title":{},"body":{"modules/DeaModule.html":{}}}],["dea.component.html",{"_index":550,"title":{},"body":{"components/DeaComponent.html":{}}}],["dea.component.scss",{"_index":549,"title":{},"body":{"components/DeaComponent.html":{}}}],["dea.links.filter(link",{"_index":494,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["dea.links.find(link",{"_index":534,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["dea.nodes.find(node",{"_index":508,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["dea.service",{"_index":642,"title":{},"body":{"components/DeaComponent.html":{},"modules/DeaModule.html":{}}}],["dea/dea.component",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["dea/dea.module",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["deaarray",{"_index":463,"title":{"interfaces/DeaArray.html":{}},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"components/DialogDataComponent.html":{}}}],["deacomponent",{"_index":72,"title":{"components/DeaComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"modules/DeaModule.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["deaexception",{"_index":448,"title":{"classes/DEAException.html":{}},"body":{"classes/DEAException.html":{},"injectables/DeaService.html":{},"coverage.html":{}}}],["deaexception(str",{"_index":901,"title":{},"body":{"injectables/DeaService.html":{}}}],["dealink",{"_index":470,"title":{"interfaces/DeaLink.html":{}},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{},"coverage.html":{}}}],["deamodule",{"_index":152,"title":{"modules/DeaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeaModule.html":{},"modules.html":{},"overview.html":{}}}],["deanode",{"_index":471,"title":{"interfaces/DeaNode.html":{}},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{}}}],["deaobject",{"_index":1184,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["deaobject.links.find(link",{"_index":2466,"title":{},"body":{"components/DialogDataComponent.html":{}}}],["deaservice",{"_index":579,"title":{"injectables/DeaService.html":{}},"body":{"components/DeaComponent.html":{},"modules/DeaModule.html":{},"injectables/DeaService.html":{},"coverage.html":{},"overview.html":{}}}],["deaservice.send('b",{"_index":873,"title":{},"body":{"injectables/DeaService.html":{}}}],["deaservice.send(char",{"_index":882,"title":{},"body":{"injectables/DeaService.html":{}}}],["declarations",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{}}}],["decorators",{"_index":327,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["decrement",{"_index":1739,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["deepskyblue",{"_index":1142,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1052,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"components/DialogDataComponent.html":{}}}],["definiert",{"_index":447,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/GrammarGraphService.html":{},"classes/WordChecker.html":{}}}],["dein",{"_index":1259,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/StartGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["deine",{"_index":1213,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["deinen",{"_index":2468,"title":{},"body":{"components/DialogDataComponent.html":{}}}],["dem",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demoforcedirectedlayout",{"_index":921,"title":{"classes/DemoForceDirectedLayout.html":{}},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"coverage.html":{},"components/DialogDataComponent.html":{}}}],["den",{"_index":531,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":116,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":498,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"components/DialogDataExampleDialog.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["des",{"_index":519,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"components/GrammarComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["desktop",{"_index":2249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deterministische",{"_index":2279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deterministischen",{"_index":2310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev",{"_index":1015,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"index.html":{},"components/DialogDataComponent.html":{}}}],["development",{"_index":2132,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["diagram",{"_index":1036,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["diagram's",{"_index":1109,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["diagram.grid.visible",{"_index":1004,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["diagram.linktemplate",{"_index":1086,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["diagram.nodetemplate",{"_index":1053,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["diagramcomponent",{"_index":933,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["diagramdivclassname",{"_index":965,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["diagramlinkdata",{"_index":979,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["diagrammodelchange",{"_index":1099,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["diagrammodeldata",{"_index":981,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["diagramnodedata",{"_index":977,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["dialog",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["dialog'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["dialog.component.html",{"_index":1232,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialog.component.scss",{"_index":1231,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialog.html",{"_index":1224,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["dialogcomponent",{"_index":74,"title":{"components/DialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogconfig",{"_index":640,"title":{},"body":{"components/DeaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dialogdata",{"_index":1219,"title":{"interfaces/DialogData.html":{}},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"coverage.html":{},"components/DialogDataComponent.html":{}}}],["dialogdatacomponent",{"_index":2461,"title":{"components/DialogDataComponent.html":{}},"body":{"components/DialogDataComponent.html":{}}}],["dialogdataexampledialog",{"_index":76,"title":{"components/DialogDataExampleDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogref",{"_index":990,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":997,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["die",{"_index":440,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"miscellaneous/variables.html":{}}}],["diese",{"_index":1238,"title":{},"body":{"components/DialogComponent.html":{},"miscellaneous/variables.html":{}}}],["dieses",{"_index":491,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["dir",{"_index":1164,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["direction",{"_index":778,"title":{},"body":{"components/DeaComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"miscellaneous/variables.html":{}}}],["directive",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["directives",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2146,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2151,"title":{},"body":{"index.html":{}}}],["disablescroll",{"_index":341,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["disconnected",{"_index":1154,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["dispatch",{"_index":1748,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["display",{"_index":744,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["displayedcolumns",{"_index":553,"title":{},"body":{"components/DeaComponent.html":{}}}],["dist",{"_index":2150,"title":{},"body":{"index.html":{}}}],["div:nth",{"_index":1623,"title":{},"body":{"components/GrammarComponent.html":{}}}],["divider",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["docu",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["document.createelement('div",{"_index":2265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.getelementbyid('cy",{"_index":1825,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["documentation",{"_index":1761,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["dokumentation",{"_index":1534,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["don't",{"_index":1106,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["donelabel",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["double",{"_index":2211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["draft",{"_index":1025,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["draft.diagramlinkdata",{"_index":1116,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["draft.diagrammodeldata",{"_index":1118,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["draft.diagramnodedata",{"_index":1113,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["draft.diagramnodedata.findindex(nd",{"_index":1028,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["draft.diagramnodedata[idx",{"_index":1032,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["draft.selectednodedata",{"_index":1033,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["draft.skipsdiagramupdate",{"_index":1112,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["drag",{"_index":1155,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"dependencies.html":{},"components/DialogDataComponent.html":{}}}],["dragged",{"_index":1808,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["dragging",{"_index":1814,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["draggingtool.dragslink",{"_index":1039,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["draggingtool.isgridsnapenabled",{"_index":1040,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["drop",{"_index":1156,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"dependencies.html":{},"components/DialogDataComponent.html":{}}}],["dropping",{"_index":1796,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["dropsibling",{"_index":1789,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["droptarget",{"_index":1786,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["droptarget.id",{"_index":1787,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["du",{"_index":1163,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["durch",{"_index":537,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":2092,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":612,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["e').length",{"_index":904,"title":{},"body":{"injectables/DeaService.html":{}}}],["e.ausgabestring",{"_index":914,"title":{},"body":{"injectables/DeaService.html":{}}}],["e.diagram.selection.count",{"_index":1020,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["e.diagram.selection.first",{"_index":1022,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["e.preventdefault",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.reberstring",{"_index":913,"title":{},"body":{"injectables/DeaService.html":{}}}],["e1",{"_index":1601,"title":{},"body":{"components/GrammarComponent.html":{}}}],["e2e",{"_index":2158,"title":{},"body":{"index.html":{}}}],["ease",{"_index":2327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["easier",{"_index":1816,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["edge",{"_index":1828,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["edges",{"_index":2212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":1764,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{}}}],["editable",{"_index":1070,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["ein",{"_index":500,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["eindeutig",{"_index":2016,"title":{},"body":{"classes/WordChecker.html":{}}}],["eine",{"_index":1563,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["einen",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eingabe",{"_index":706,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["eingabealphabet",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eins",{"_index":1843,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["einstellung",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["el",{"_index":308,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["element",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["element.children",{"_index":1510,"title":{},"body":{"components/GrammarComponent.html":{}}}],["element.e",{"_index":712,"title":{},"body":{"components/DeaComponent.html":{}}}],["element.parentnode",{"_index":1508,"title":{},"body":{"components/GrammarComponent.html":{}}}],["element.q0",{"_index":710,"title":{},"body":{"components/DeaComponent.html":{}}}],["element.q1",{"_index":713,"title":{},"body":{"components/DeaComponent.html":{}}}],["element_data",{"_index":608,"title":{},"body":{"components/DeaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementref",{"_index":309,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["elements",{"_index":1826,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["ellipsis",{"_index":1591,"title":{},"body":{"components/GrammarComponent.html":{}}}],["email",{"_index":1723,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["enablescroll",{"_index":342,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enabletracing",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["encapsulation",{"_index":963,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["end",{"_index":774,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"index.html":{},"components/DialogDataComponent.html":{}}}],["ende",{"_index":1152,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["endliche",{"_index":2280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endlichen",{"_index":2311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoint",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endstate",{"_index":554,"title":{},"body":{"components/DeaComponent.html":{}}}],["endzustand",{"_index":905,"title":{},"body":{"injectables/DeaService.html":{}}}],["enpunkt",{"_index":483,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["entha",{"_index":2297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["ergebnis",{"_index":1251,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["erkannt",{"_index":1258,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["erkennt",{"_index":2313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erlaubt",{"_index":863,"title":{},"body":{"injectables/DeaService.html":{}}}],["erreicht",{"_index":906,"title":{},"body":{"injectables/DeaService.html":{}}}],["error",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["error(\"ausgehende",{"_index":2013,"title":{},"body":{"classes/WordChecker.html":{}}}],["error('ist",{"_index":865,"title":{},"body":{"injectables/DeaService.html":{}}}],["error('transition",{"_index":862,"title":{},"body":{"injectables/DeaService.html":{}}}],["errorsate",{"_index":369,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["errorstate",{"_index":555,"title":{},"body":{"components/DeaComponent.html":{}}}],["erscheint",{"_index":2361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erst",{"_index":2362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erstellt",{"_index":1241,"title":{},"body":{"components/DialogComponent.html":{}}}],["erzeuge",{"_index":2270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erzeugen",{"_index":1532,"title":{},"body":{"components/GrammarComponent.html":{}}}],["erzeugt",{"_index":1556,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["eval(exp",{"_index":1392,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["evaluatestring",{"_index":563,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["evaluatestring(str",{"_index":585,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["event",{"_index":324,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":321,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["example",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["example'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["example.component.css",{"_index":1268,"title":{},"body":{"components/ExampleComponent.html":{}}}],["example.component.html",{"_index":1269,"title":{},"body":{"components/ExampleComponent.html":{}}}],["example/example.component",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["examplecomponent",{"_index":80,"title":{"components/ExampleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["execute",{"_index":2155,"title":{},"body":{"index.html":{}}}],["exitonoverlayclick",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exp",{"_index":1297,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.afterexp",{"_index":1578,"title":{},"body":{"components/GrammarComponent.html":{}}}],["exp.includes('a",{"_index":1400,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.includes('o",{"_index":1406,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.includes('z",{"_index":1410,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.indexof",{"_index":1371,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.indexof('a",{"_index":1362,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.length",{"_index":1360,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.match(/[0",{"_index":1388,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.match(/\\(\\s",{"_index":1385,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.prevexp",{"_index":1580,"title":{},"body":{"components/GrammarComponent.html":{}}}],["exp.replace('a",{"_index":1405,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.replace('o",{"_index":1409,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.replace('z",{"_index":1413,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.rule",{"_index":1579,"title":{},"body":{"components/GrammarComponent.html":{}}}],["exp.substring(0",{"_index":1366,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.substring(m",{"_index":1367,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp1",{"_index":1350,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp1.replace",{"_index":1353,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp2",{"_index":1352,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp2.split('').join",{"_index":1355,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp].some((r",{"_index":1394,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["expanding",{"_index":1817,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["expindex",{"_index":1334,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"components/DialogDataComponent.html":{}}}],["exports",{"_index":227,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["expression",{"_index":1291,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["expression(exp",{"_index":1381,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["expressionchangedafterithasbeencheckederror",{"_index":1014,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["expressiongrammar",{"_index":1442,"title":{},"body":{"components/GrammarComponent.html":{}}}],["expressiongrammar.expression",{"_index":1552,"title":{},"body":{"components/GrammarComponent.html":{}}}],["expressiongrammar.ruleset.length",{"_index":1568,"title":{},"body":{"components/GrammarComponent.html":{}}}],["expressiongrammar.valid",{"_index":1551,"title":{},"body":{"components/GrammarComponent.html":{}}}],["expressiongrammar.value",{"_index":1538,"title":{},"body":{"components/GrammarComponent.html":{}}}],["expressiongrammarmodel",{"_index":1273,"title":{"classes/ExpressionGrammarModel.html":{}},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"classes/RuleSetInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expressiongrammarmodel._isnegnumber(exp",{"_index":1391,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["extends",{"_index":231,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/DEAException.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["externer",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":723,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["f2f2f2",{"_index":1979,"title":{},"body":{"components/TableComponent.html":{}}}],["fake",{"_index":1885,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["falls",{"_index":1480,"title":{},"body":{"components/GrammarComponent.html":{}}}],["falsch",{"_index":670,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/DialogDataComponent.html":{}}}],["falschen",{"_index":2358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["falscher",{"_index":1574,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["falsches",{"_index":700,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["family",{"_index":1973,"title":{},"body":{"components/TableComponent.html":{}}}],["fehler",{"_index":1263,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["fertig",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff",{"_index":2246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff4081",{"_index":428,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["fff",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":813,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["fig",{"_index":2413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fig.add(new",{"_index":2417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["figure",{"_index":475,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"components/DialogDataComponent.html":{}}}],["files",{"_index":2142,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1059,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["filter",{"_index":1785,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["filterone",{"_index":919,"title":{},"body":{"injectables/DeaService.html":{}}}],["final",{"_index":858,"title":{},"body":{"injectables/DeaService.html":{}}}],["finalzustaende",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":1953,"title":{},"body":{"components/StartGameComponent.html":{},"index.html":{}}}],["first_page",{"_index":724,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["firstname",{"_index":1981,"title":{},"body":{"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["firstname:string",{"_index":1758,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["flex",{"_index":745,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["fliplabel",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["float",{"_index":1888,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["folgenden",{"_index":1239,"title":{},"body":{"components/DialogComponent.html":{}}}],["font",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["footer",{"_index":1428,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["footer.component.css",{"_index":1429,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1430,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":82,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{},"components/DialogDataComponent.html":{}}}],["force",{"_index":262,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["forcedirectedvertex.isfixed",{"_index":948,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["foreground",{"_index":1089,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["form",{"_index":750,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["formsmodule",{"_index":824,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["foundlink",{"_index":2018,"title":{},"body":{"classes/WordChecker.html":{}}}],["foundlink!.text?.length",{"_index":2022,"title":{},"body":{"classes/WordChecker.html":{}}}],["foundlink!.to",{"_index":2024,"title":{},"body":{"classes/WordChecker.html":{}}}],["foundlinks",{"_index":2008,"title":{},"body":{"classes/WordChecker.html":{}}}],["foundlinks[0",{"_index":2019,"title":{},"body":{"classes/WordChecker.html":{}}}],["fourtuple",{"_index":1299,"title":{"interfaces/FourTuple.html":{}},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"coverage.html":{}}}],["fromlinkable",{"_index":1081,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["fromlinkableduplicates",{"_index":1082,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["fromlinkableselfnode",{"_index":1084,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["fromport",{"_index":1047,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["frontend",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":753,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["function",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"interfaces/GrammarState.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["function(shape",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functions",{"_index":2123,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2165,"title":{},"body":{"index.html":{}}}],["füge",{"_index":1194,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"components/DialogDataComponent.html":{}}}],["g",{"_index":1354,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["game",{"_index":936,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["game'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["game.component",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/StartGameModule.html":{}}}],["game.component.css",{"_index":962,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User-1.html":{},"components/DialogDataComponent.html":{}}}],["game.component.html",{"_index":961,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User-1.html":{},"components/DialogDataComponent.html":{}}}],["game.component.ts",{"_index":922,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{},"components/DialogDataComponent.html":{}}}],["game.component.ts:111",{"_index":1856,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:17",{"_index":925,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{}}}],["game.component.ts:171",{"_index":1869,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:20",{"_index":1938,"title":{},"body":{"components/StartGameComponent.html":{}}}],["game.component.ts:21",{"_index":1935,"title":{},"body":{"components/StartGameComponent.html":{}}}],["game.component.ts:218",{"_index":1857,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:260",{"_index":1864,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:274",{"_index":1860,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:288",{"_index":1858,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:305",{"_index":1866,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:31",{"_index":1937,"title":{},"body":{"components/StartGameComponent.html":{}}}],["game.component.ts:317",{"_index":1855,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:36",{"_index":1868,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:365",{"_index":1859,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:37",{"_index":1874,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:38",{"_index":1871,"title":{},"body":{"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["game.component.ts:39",{"_index":1867,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:40",{"_index":1872,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:41",{"_index":1875,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:412",{"_index":1865,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:43",{"_index":1877,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:44",{"_index":1873,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:449",{"_index":1246,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["game.component.ts:45",{"_index":1936,"title":{},"body":{"components/StartGameComponent.html":{}}}],["game.component.ts:450",{"_index":1250,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["game.component.ts:451",{"_index":1249,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["game.component.ts:452",{"_index":2464,"title":{},"body":{"components/DialogDataComponent.html":{}}}],["game.component.ts:453",{"_index":1247,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["game.component.ts:454",{"_index":2462,"title":{},"body":{"components/DialogDataComponent.html":{}}}],["game.component.ts:457",{"_index":1248,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["game.component.ts:458",{"_index":2463,"title":{},"body":{"components/DialogDataComponent.html":{}}}],["game.component.ts:47",{"_index":1876,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:55",{"_index":1854,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:57",{"_index":1870,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:60",{"_index":1863,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:79",{"_index":1862,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:87",{"_index":1861,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.levels.filter(a",{"_index":1205,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["game.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["game.module.ts",{"_index":1960,"title":{},"body":{"modules/StartGameModule.html":{}}}],["game/level.ts",{"_index":2066,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["game/puzzle",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"coverage.html":{},"components/DialogDataComponent.html":{}}}],["game/shapes/shape.ts",{"_index":2068,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["game/start",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"interfaces/User-1.html":{},"coverage.html":{}}}],["game/word",{"_index":466,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{}}}],["game[0].links",{"_index":980,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["game[0].nodes",{"_index":978,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["game[next].points",{"_index":1207,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["game[this.activelevel].randomwords",{"_index":1198,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["game[this.activelevel].solution",{"_index":1200,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["game[this.activelevel].task",{"_index":975,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["game[value].links",{"_index":1180,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["game[value].nodes",{"_index":1179,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["game[value].task",{"_index":1177,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["geben",{"_index":2309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gedrueckt",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gegeben",{"_index":2305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gehe",{"_index":536,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["generate",{"_index":2144,"title":{},"body":{"index.html":{}}}],["generatecorrectexpression",{"_index":1287,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["generated",{"_index":2129,"title":{},"body":{"index.html":{}}}],["generateexpression",{"_index":1445,"title":{},"body":{"components/GrammarComponent.html":{}}}],["generateexpression(iscorrect",{"_index":1455,"title":{},"body":{"components/GrammarComponent.html":{}}}],["generatenonreber",{"_index":831,"title":{},"body":{"injectables/DeaService.html":{}}}],["generatenonreberstring",{"_index":564,"title":{},"body":{"components/DeaComponent.html":{}}}],["generaterandomword",{"_index":2025,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generaterandomword(arr",{"_index":2030,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generaterandomwords",{"_index":2026,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generaterandomwords(arr",{"_index":546,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["generatereberconstruct",{"_index":832,"title":{},"body":{"injectables/DeaService.html":{}}}],["generatereberconstruct(reberstringparam",{"_index":840,"title":{},"body":{"injectables/DeaService.html":{}}}],["generatereberstring",{"_index":565,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["generateword",{"_index":2027,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generateword(dea",{"_index":529,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["generatewordrekursive",{"_index":2028,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generatewordrekursive(dea",{"_index":477,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["generatewords",{"_index":2029,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generatewords(dea",{"_index":541,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["generatewrongexpression",{"_index":1288,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["generator",{"_index":938,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"components/DialogDataComponent.html":{}}}],["generator.ts",{"_index":467,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{},"coverage.html":{}}}],["generator.ts:17",{"_index":2035,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generator.ts:50",{"_index":2034,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generator.ts:59",{"_index":2036,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generator.ts:70",{"_index":2031,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generator.ts:79",{"_index":2033,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generatorellipsespot1",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generatorellipsespot2",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generiere",{"_index":698,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["generieren",{"_index":1560,"title":{},"body":{"components/GrammarComponent.html":{}}}],["genfsm",{"_index":833,"title":{},"body":{"injectables/DeaService.html":{}}}],["genfsm(xstate",{"_index":844,"title":{},"body":{"injectables/DeaService.html":{}}}],["geo",{"_index":2411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geo.add(fig",{"_index":2416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geo.defaultstretch",{"_index":2427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geo.spot1",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geo.spot2",{"_index":2426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getexpression",{"_index":1324,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["getgrammar",{"_index":2062,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getlastitemofarray",{"_index":2070,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getoneuser",{"_index":1984,"title":{},"body":{"injectables/UsersService.html":{}}}],["getrule",{"_index":1328,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["getruleset",{"_index":1332,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["getting",{"_index":2126,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1985,"title":{},"body":{"injectables/UsersService.html":{}}}],["getvalid",{"_index":1330,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["go",{"_index":929,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"index.html":{},"components/DialogDataComponent.html":{}}}],["go.adornment",{"_index":1141,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.binding(\"figure",{"_index":1063,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.binding(\"fill",{"_index":1062,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.binding(\"layername",{"_index":1056,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.binding(\"points",{"_index":1090,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.binding(\"stroke",{"_index":1060,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.binding(\"text",{"_index":1076,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.diagram",{"_index":1007,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.forcedirectedlayout",{"_index":944,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.geometry",{"_index":2412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.graphlinksmodel",{"_index":1045,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.graphobject.make",{"_index":1035,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.graphobject.uniform",{"_index":2428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.incrementaldata",{"_index":1100,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.link",{"_index":1087,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.link.avoidsnodes",{"_index":1144,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.link.jumpover",{"_index":1146,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.list().addall([new",{"_index":1158,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.margin(100",{"_index":1131,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.margin(4",{"_index":1075,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.node",{"_index":1026,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.palette",{"_index":1129,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.panel",{"_index":1064,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.pathfigure(w",{"_index":2414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.pathsegment(go.pathsegment.arc",{"_index":2418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.pathsegment(go.pathsegment.move",{"_index":2423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.point(10",{"_index":1159,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.point(70",{"_index":1160,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.rowcolumndefinition",{"_index":1065,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.shape",{"_index":1057,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.shape.definefiguregenerator(\"ring",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.spot(0.156",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.spot(0.844",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.spot.center",{"_index":1071,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.spot.left",{"_index":1067,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["go.textblock",{"_index":1068,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["gojs",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"dependencies.html":{},"components/DialogDataComponent.html":{}}}],["gojsangularmodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["grab",{"_index":1136,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["grabbednode",{"_index":1784,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["grammar",{"_index":697,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"interfaces/GrammarState.html":{},"miscellaneous/variables.html":{}}}],["grammar'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["grammar.action",{"_index":1704,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["grammar.animation",{"_index":1498,"title":{},"body":{"components/GrammarComponent.html":{}}}],["grammar.component",{"_index":1652,"title":{},"body":{"modules/GrammarModule.html":{}}}],["grammar.component.html",{"_index":1440,"title":{},"body":{"components/GrammarComponent.html":{}}}],["grammar.component.scss",{"_index":1439,"title":{},"body":{"components/GrammarComponent.html":{}}}],["grammar.model",{"_index":1492,"title":{},"body":{"components/GrammarComponent.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{}}}],["grammar.service",{"_index":1496,"title":{},"body":{"components/GrammarComponent.html":{},"modules/GrammarModule.html":{}}}],["grammaractions",{"_index":1703,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["grammaranimation",{"_index":1497,"title":{},"body":{"components/GrammarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grammarcomponent",{"_index":84,"title":{"components/GrammarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"modules/GrammarModule.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["grammargraphcomponent",{"_index":86,"title":{"components/GrammarGraphComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"modules/GrammarModule.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["grammargraphconfig",{"_index":1493,"title":{},"body":{"components/GrammarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grammargraphservice",{"_index":1451,"title":{"injectables/GrammarGraphService.html":{}},"body":{"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"modules/GrammarModule.html":{},"coverage.html":{},"overview.html":{}}}],["grammarintroconfig",{"_index":1499,"title":{},"body":{"components/GrammarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grammarmodel",{"_index":1275,"title":{"interfaces/GrammarModel.html":{}},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"classes/RuleSetInterface.html":{},"coverage.html":{}}}],["grammarmodule",{"_index":1647,"title":{"modules/GrammarModule.html":{}},"body":{"modules/GrammarModule.html":{},"modules.html":{},"overview.html":{}}}],["grammarreducer",{"_index":1708,"title":{},"body":{"interfaces/GrammarState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grammarreducer(state",{"_index":1717,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["grammarselector",{"_index":1711,"title":{},"body":{"interfaces/GrammarState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grammarservice",{"_index":1453,"title":{"injectables/GrammarService.html":{}},"body":{"components/GrammarComponent.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"coverage.html":{},"overview.html":{}}}],["grammarstate",{"_index":1698,"title":{"interfaces/GrammarState.html":{}},"body":{"interfaces/GrammarState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grammatik",{"_index":1528,"title":{},"body":{"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["grammerservice",{"_index":1452,"title":{},"body":{"components/GrammarComponent.html":{}}}],["graph",{"_index":295,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleComponent.html":{},"modules.html":{},"components/DialogDataComponent.html":{}}}],["graph'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["graph.component",{"_index":826,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["graph.component.ts",{"_index":292,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"coverage.html":{}}}],["graph.component.ts:28",{"_index":336,"title":{},"body":{"components/CytoGraphComponent.html":{}}}],["graph.component.ts:29",{"_index":314,"title":{},"body":{"components/CytoGraphComponent.html":{}}}],["graph.component.ts:30",{"_index":320,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:31",{"_index":1640,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:32",{"_index":322,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:34",{"_index":1641,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:35",{"_index":325,"title":{},"body":{"components/CytoGraphComponent.html":{}}}],["graph.component.ts:37",{"_index":1642,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:40",{"_index":326,"title":{},"body":{"components/CytoGraphComponent.html":{}}}],["graph.component.ts:42",{"_index":312,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:44",{"_index":1639,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:46",{"_index":333,"title":{},"body":{"components/CytoGraphComponent.html":{}}}],["graph.component.ts:48",{"_index":1643,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:50",{"_index":335,"title":{},"body":{"components/CytoGraphComponent.html":{}}}],["graph.component.ts:52",{"_index":1644,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["graph.service",{"_index":344,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"modules/GrammarModule.html":{}}}],["graph.service.ts",{"_index":368,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"coverage.html":{}}}],["graph.service.ts:10",{"_index":389,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph.service.ts:11",{"_index":375,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph.service.ts:15",{"_index":383,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph.service.ts:19",{"_index":381,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph.service.ts:51",{"_index":378,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph.service.ts:8",{"_index":385,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph.service.ts:9",{"_index":390,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph/config",{"_index":1494,"title":{},"body":{"components/GrammarComponent.html":{}}}],["graph/config.ts",{"_index":2055,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["graph/cyto",{"_index":291,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"modules/DeaModule.html":{},"coverage.html":{}}}],["graph/grammar",{"_index":1495,"title":{},"body":{"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"modules/GrammarModule.html":{},"coverage.html":{}}}],["graphdarstellung",{"_index":2312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphen",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["green",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["grid",{"_index":1837,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["group",{"_index":772,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["grow",{"_index":1627,"title":{},"body":{"components/GrammarComponent.html":{}}}],["gueltigen",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h3",{"_index":1611,"title":{},"body":{"components/GrammarComponent.html":{}}}],["halign",{"_index":2232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hallo",{"_index":1948,"title":{},"body":{"components/StartGameComponent.html":{}}}],["halten",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["harder",{"_index":1824,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["haschanged",{"_index":1357,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["haserror",{"_index":890,"title":{},"body":{"injectables/DeaService.html":{}}}],["hat",{"_index":2302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haupt",{"_index":1892,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["headline",{"_index":769,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["height",{"_index":345,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["height:40px",{"_index":1900,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["hello",{"_index":1490,"title":{},"body":{"components/GrammarComponent.html":{}}}],["help",{"_index":1633,"title":{},"body":{"components/GrammarComponent.html":{},"index.html":{}}}],["helvetica",{"_index":1975,"title":{},"body":{"components/TableComponent.html":{}}}],["herleitung",{"_index":1576,"title":{},"body":{"components/GrammarComponent.html":{}}}],["hidden",{"_index":1595,"title":{},"body":{"components/GrammarComponent.html":{}}}],["hideator",{"_index":1883,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["hier",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["highestlevel",{"_index":970,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["highscore",{"_index":1967,"title":{},"body":{"components/TableComponent.html":{}}}],["hint",{"_index":1842,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["hinzu",{"_index":1196,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"components/DialogDataComponent.html":{}}}],["history",{"_index":1111,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["hit",{"_index":1818,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["hm",{"_index":650,"title":{},"body":{"components/DeaComponent.html":{}}}],["home",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/NavigationComponent.html":{}}}],["horizontal",{"_index":1078,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["hostlistener",{"_index":337,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["hostlistener('mouseenter",{"_index":328,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["hostlistener('mouseleave",{"_index":330,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["hostlisteners",{"_index":305,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["html",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["http",{"_index":1989,"title":{},"body":{"injectables/UsersService.html":{}}}],["http://localhost:4200",{"_index":2138,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/your_url",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:8080/auth",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":1987,"title":{},"body":{"injectables/UsersService.html":{}}}],["httpclientmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["https://js.cytoscape.org/#eles.boundingbox",{"_index":1806,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["icon",{"_index":1585,"title":{},"body":{"components/GrammarComponent.html":{}}}],["id",{"_index":474,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["id:string",{"_index":1756,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["identifier",{"_index":2038,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":1027,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["if(!deaobject.links.find(link",{"_index":1192,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["if(dea.links.filter(link",{"_index":2001,"title":{},"body":{"classes/WordChecker.html":{}}}],["if(foundlinks.length",{"_index":2012,"title":{},"body":{"classes/WordChecker.html":{}}}],["if(value",{"_index":1182,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["ignore",{"_index":362,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"miscellaneous/variables.html":{}}}],["im",{"_index":1265,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["img",{"_index":1955,"title":{},"body":{"components/StartGameComponent.html":{}}}],["immer",{"_index":935,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["implementiert",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":293,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"interfaces/GrammarModel.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"index.html":{},"components/DialogDataComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"modules/DeaModule.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"components/DialogDataComponent.html":{}}}],["important",{"_index":762,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["imports",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{}}}],["includelabels",{"_index":1811,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["includeoverlays",{"_index":1810,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["includes(correctexp[indexofexp",{"_index":1423,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["increment",{"_index":255,"title":{},"body":{"injectables/AuthGuard.html":{},"components/MyCounterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["index:3",{"_index":1899,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["indexofexp",{"_index":1416,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["infinity",{"_index":1539,"title":{},"body":{"components/GrammarComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"components/DialogDataComponent.html":{}}}],["init",{"_index":1658,"title":{},"body":{"injectables/GrammarService.html":{}}}],["init(rules",{"_index":1660,"title":{},"body":{"injectables/GrammarService.html":{}}}],["initdiagram",{"_index":1034,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["initial",{"_index":855,"title":{},"body":{"injectables/DeaService.html":{}}}],["initialausgabestring",{"_index":586,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["initialize",{"_index":947,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["initializekeycloak",{"_index":2044,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initializekeycloak(keycloak",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["initialstate",{"_index":1707,"title":{},"body":{"interfaces/GrammarState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initoptions",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["initpalette",{"_index":1128,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["initring",{"_index":930,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["inject",{"_index":941,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["inject(mat_dialog_data",{"_index":1225,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["injectable",{"_index":228,"title":{"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":229,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inline",{"_index":1583,"title":{},"body":{"components/GrammarComponent.html":{}}}],["innen",{"_index":1896,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["input",{"_index":338,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["inputs",{"_index":301,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["inspector",{"_index":1018,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["instance",{"_index":384,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["instanceof",{"_index":282,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["int",{"_index":1613,"title":{},"body":{"components/GrammarComponent.html":{}}}],["interface",{"_index":462,"title":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"interfaces/DialogData.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"components/DialogDataComponent.html":{}}}],["interfaces",{"_index":464,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"interfaces/DialogData.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"overview.html":{}}}],["internal",{"_index":1137,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["interpret",{"_index":848,"title":{},"body":{"injectables/DeaService.html":{}}}],["interpret(xstate).ontransition(listener).start",{"_index":854,"title":{},"body":{"injectables/DeaService.html":{}}}],["interval",{"_index":637,"title":{},"body":{"components/DeaComponent.html":{},"injectables/GrammarService.html":{}}}],["interval(5000",{"_index":688,"title":{},"body":{"components/DeaComponent.html":{}}}],["interval(speed[v",{"_index":1681,"title":{},"body":{"injectables/GrammarService.html":{}}}],["interval(speed[val",{"_index":1684,"title":{},"body":{"injectables/GrammarService.html":{}}}],["intro",{"_index":662,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["intro.config",{"_index":635,"title":{},"body":{"components/DeaComponent.html":{}}}],["intro.js",{"_index":633,"title":{},"body":{"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/GrammarComponent.html":{},"dependencies.html":{}}}],["intro.setoptions(grammarintroconfig).start",{"_index":1519,"title":{},"body":{"components/GrammarComponent.html":{}}}],["intro.setoptions(introjsconfig).start",{"_index":663,"title":{},"body":{"components/DeaComponent.html":{}}}],["introjs",{"_index":632,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["introjsconfig",{"_index":634,"title":{},"body":{"components/DeaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["intuitiv",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inv",{"_index":2205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isaccessallowed",{"_index":236,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["isaccessallowed(route",{"_index":244,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["iscorrect",{"_index":917,"title":{},"body":{"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["isexpressionvalid",{"_index":1289,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["isexpressionvalid(exp",{"_index":1322,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["ispanelmain",{"_index":1092,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["ist",{"_index":484,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/StartGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["items",{"_index":780,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["j",{"_index":1359,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["jaadari",{"_index":1434,"title":{},"body":{"components/FooterComponent.html":{},"components/TableComponent.html":{}}}],["jeder",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":545,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["js",{"_index":2096,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1794,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["jsonwebtoken",{"_index":2110,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":747,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["kann",{"_index":1570,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["kanten",{"_index":2014,"title":{},"body":{"classes/WordChecker.html":{}}}],["karma",{"_index":2157,"title":{},"body":{"index.html":{}}}],["kein",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keine",{"_index":1555,"title":{},"body":{"components/GrammarComponent.html":{}}}],["key",{"_index":472,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["keyboardnavigation",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycloak",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["keycloak.init",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["keycloakangularmodule",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["keycloakauthguard",{"_index":232,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["keycloakservice",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["keyframes",{"_index":2328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyframes([style",{"_index":2332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":2078,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["keys[e.keycode",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":1309,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["kind.indexof(r",{"_index":1397,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["knoten",{"_index":1153,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["kopiert",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["korrekt",{"_index":666,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/GrammarComponent.html":{}}}],["korrekten",{"_index":2355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["korrektes",{"_index":699,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["l",{"_index":2283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l1",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":443,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":789,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["last_page",{"_index":730,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["lastfedges",{"_index":430,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["lastfedges[0].data",{"_index":442,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["lastfedges[0].style",{"_index":436,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["lastfedges[1].data('label",{"_index":445,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["lastfedges[1].style",{"_index":438,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["lastname",{"_index":1982,"title":{},"body":{"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["lastname:string",{"_index":1759,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["lastnode",{"_index":370,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["layout",{"_index":1043,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["left",{"_index":352,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["level",{"_index":937,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["leveln",{"_index":1212,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["levelreducer",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["levels",{"_index":2315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["li",{"_index":1903,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["li.active",{"_index":1908,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["liefert",{"_index":1260,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["lightblue",{"_index":1897,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["lightgoldenrodyellow",{"_index":803,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["lightgray",{"_index":743,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["lightgrey",{"_index":1956,"title":{},"body":{"components/StartGameComponent.html":{}}}],["lightpink",{"_index":1844,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["lightseagreen",{"_index":1902,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["lightslategrey",{"_index":1846,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["line",{"_index":1833,"title":{},"body":{"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["linecolor",{"_index":401,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["link",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["link.from",{"_index":495,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["link.key",{"_index":535,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"components/DialogDataComponent.html":{}}}],["link.to",{"_index":2002,"title":{},"body":{"classes/WordChecker.html":{}}}],["link?.text?.includes(word[0",{"_index":2010,"title":{},"body":{"classes/WordChecker.html":{}}}],["linkfromportidproperty",{"_index":1046,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["linkingtool.isunconnectedlinkvalid",{"_index":1038,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["linkkeyproperty",{"_index":1051,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["links",{"_index":468,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["linktext",{"_index":511,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["linktext.length",{"_index":517,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["linktext[0",{"_index":524,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["linktext[randomlinktext",{"_index":523,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["linktoportidproperty",{"_index":1048,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["list",{"_index":1827,"title":{},"body":{"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["listelement",{"_index":1443,"title":{},"body":{"components/GrammarComponent.html":{}}}],["listener",{"_index":845,"title":{},"body":{"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["literal",{"_index":315,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"interfaces/DialogData.html":{},"interfaces/FourTuple.html":{},"components/GrammarGraphComponent.html":{},"classes/WordChecker.html":{},"miscellaneous/variables.html":{}}}],["loaddiagram",{"_index":1850,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["loaddiagram(value",{"_index":1181,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["loadnextlevel",{"_index":1851,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["localstorage.getitem(\"highestlevel",{"_index":2198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.setitem('activelevel",{"_index":1173,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["localstorage.setitem('highestlevel",{"_index":1202,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["localstorage.setitem('highestlevel',\"0",{"_index":1217,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["localstorage.setitem('score",{"_index":1218,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["log",{"_index":264,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/NavigationComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["login",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["login.component.css",{"_index":1719,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1720,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":87,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{},"components/DialogDataComponent.html":{}}}],["logout",{"_index":1765,"title":{},"body":{"components/NavigationComponent.html":{}}}],["loop",{"_index":2225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lt",{"_index":2298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["länge",{"_index":2303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m",{"_index":1361,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["main",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["mainpagecomponent",{"_index":89,"title":{"components/MainPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1813,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["makenetwork",{"_index":923,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["makenetwork(coll",{"_index":924,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["man",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manuelle",{"_index":1535,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["markiert",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maryam",{"_index":1972,"title":{},"body":{"components/TableComponent.html":{}}}],["master",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["mat",{"_index":1596,"title":{},"body":{"components/GrammarComponent.html":{}}}],["mat_dialog_data",{"_index":943,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["matbuttonmodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["matbuttontogglemodule",{"_index":818,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["match",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["matchdoubled",{"_index":1387,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["matching",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["matdialog",{"_index":578,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["matdialogmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":942,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["material",{"_index":1243,"title":{},"body":{"components/DialogComponent.html":{}}}],["matformfieldmodule",{"_index":811,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["math.floor(math.random",{"_index":503,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/WordGenerator.html":{}}}],["math.max(rad",{"_index":2422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.random",{"_index":487,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":1402,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["mathematische",{"_index":1529,"title":{},"body":{"components/GrammarComponent.html":{}}}],["maticonmodule",{"_index":820,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["matinputmodule",{"_index":814,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["matradiomodule",{"_index":1653,"title":{},"body":{"modules/GrammarModule.html":{}}}],["matrows",{"_index":556,"title":{},"body":{"components/DeaComponent.html":{}}}],["matslidermodule",{"_index":822,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["mattablemodule",{"_index":816,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["max",{"_index":318,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["maximal",{"_index":2304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mehre",{"_index":514,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["menu",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["method",{"_index":946,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["methods",{"_index":233,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"components/DialogDataComponent.html":{}}}],["middle",{"_index":758,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["min",{"_index":316,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["miscellaneous",{"_index":2122,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":532,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"components/DialogComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":2251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":1016,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["model",{"_index":1044,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["modern",{"_index":2248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modes",{"_index":1444,"title":{},"body":{"components/GrammarComponent.html":{}}}],["modified",{"_index":1121,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["modifiednodedatas",{"_index":1126,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["module",{"_index":113,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{}},"body":{}}],["modules",{"_index":115,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{},"modules.html":{},"overview.html":{}}}],["modus",{"_index":1547,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["mongo",{"_index":2097,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":2166,"title":{},"body":{"index.html":{}}}],["mouseenter",{"_index":297,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["mouseleave",{"_index":298,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["mousewheel",{"_index":2267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg",{"_index":387,"title":{},"body":{"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"injectables/GrammarGraphService.html":{}}}],["mycountercomponent",{"_index":92,"title":{"components/MyCounterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["mydiagramcomponent",{"_index":987,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["möchtest",{"_index":1216,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["müssen",{"_index":2015,"title":{},"body":{"classes/WordChecker.html":{}}}],["n",{"_index":887,"title":{},"body":{"injectables/DeaService.html":{},"miscellaneous/variables.html":{}}}],["n+3",{"_index":1624,"title":{},"body":{"components/GrammarComponent.html":{}}}],["n.s",{"_index":888,"title":{},"body":{"injectables/DeaService.html":{}}}],["n0",{"_index":2342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n1",{"_index":2343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n2",{"_index":2344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n3",{"_index":2345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n4",{"_index":2346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n5",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nach",{"_index":2363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nachfolgenden",{"_index":2277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["najima",{"_index":1433,"title":{},"body":{"components/FooterComponent.html":{},"components/TableComponent.html":{}}}],["name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["nasty",{"_index":1952,"title":{},"body":{"components/StartGameComponent.html":{}}}],["navbar",{"_index":1768,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navbarsupportedcontent",{"_index":1766,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigate",{"_index":2137,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1750,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/User-2.html":{}}}],["navigation'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["navigation.component.css",{"_index":1751,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/User-2.html":{}}}],["navigation.component.html",{"_index":1752,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/User-2.html":{}}}],["navigationcomponent",{"_index":94,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User-2.html":{},"coverage.html":{},"overview.html":{},"components/DialogDataComponent.html":{}}}],["nd",{"_index":1031,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["nd.id",{"_index":1029,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["need",{"_index":2162,"title":{},"body":{"index.html":{}}}],["nestjs/cli",{"_index":2093,"title":{},"body":{"dependencies.html":{}}}],["net",{"_index":955,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["net.vertexes.each(vertex",{"_index":957,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["new",{"_index":356,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["newparentnode",{"_index":1792,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["newstring",{"_index":868,"title":{},"body":{"injectables/DeaService.html":{}}}],["newstring.filter((a",{"_index":920,"title":{},"body":{"injectables/DeaService.html":{}}}],["newstring.push",{"_index":883,"title":{},"body":{"injectables/DeaService.html":{}}}],["newstring.reduce((a",{"_index":886,"title":{},"body":{"injectables/DeaService.html":{}}}],["nextdiagram",{"_index":1852,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["nextdiagram(value",{"_index":1172,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["nextlabel",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nextlevel",{"_index":1266,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["nextlinkelement",{"_index":505,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["nextlinkelement!.to",{"_index":510,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["nextnode",{"_index":877,"title":{},"body":{"injectables/DeaService.html":{}}}],["nextnodeelement",{"_index":507,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["ng",{"_index":2135,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1009,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["ngclass]=\"{correct",{"_index":1537,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ngmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{}}}],["ngonchanges",{"_index":299,"title":{},"body":{"components/CytoGraphComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["ngonchanges(changes",{"_index":331,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["ngoninit",{"_index":566,"title":{},"body":{"components/DeaComponent.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["ngonspeedchange",{"_index":1446,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ngonspeedchange(v",{"_index":1459,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ngrx/store",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"interfaces/GrammarState.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"dependencies.html":{}}}],["nicht",{"_index":657,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["noch",{"_index":1554,"title":{},"body":{"components/GrammarComponent.html":{}}}],["node",{"_index":482,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["node.data.id",{"_index":1030,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["node.id",{"_index":509,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["node.isselected",{"_index":950,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["node1",{"_index":395,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node1.animate",{"_index":416,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node1.id",{"_index":399,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node1.style",{"_index":400,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node2",{"_index":397,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node2.animate",{"_index":426,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node2.id",{"_index":414,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node2.style",{"_index":405,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["nodedimensionsincludelabels",{"_index":2338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodekeyproperty",{"_index":1050,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["nodes",{"_index":469,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["none",{"_index":781,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["normal",{"_index":2333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notes",{"_index":492,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["nowrap",{"_index":1593,"title":{},"body":{"components/GrammarComponent.html":{}}}],["null",{"_index":388,"title":{},"body":{"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["number",{"_index":355,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["number.parsefloat(result",{"_index":1393,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["nur",{"_index":439,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":2341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["o",{"_index":1301,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["ob",{"_index":481,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["object",{"_index":1125,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["observable",{"_index":253,"title":{},"body":{"injectables/AuthGuard.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["observeddiagram",{"_index":976,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["oder",{"_index":1562,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["ok",{"_index":1169,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["older",{"_index":2245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oldexp",{"_index":1319,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["oldexp.slice",{"_index":1351,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["on(grammaractions.getgrammar",{"_index":1709,"title":{},"body":{"interfaces/GrammarState.html":{},"miscellaneous/variables.html":{}}}],["on(increment",{"_index":2195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onbegin",{"_index":1447,"title":{},"body":{"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["onchanges",{"_index":294,"title":{},"body":{"components/CytoGraphComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["one",{"_index":1120,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["onend",{"_index":567,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["oninit",{"_index":548,"title":{},"body":{"components/DeaComponent.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["onmanualexpressionchange",{"_index":1448,"title":{},"body":{"components/GrammarComponent.html":{}}}],["onmanualexpressionchange(exp",{"_index":1463,"title":{},"body":{"components/GrammarComponent.html":{}}}],["onnext",{"_index":568,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["onnext(shouldnotstop",{"_index":593,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["onnoclick",{"_index":1226,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["onnwxtlevelchanged",{"_index":1228,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["onpause",{"_index":569,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["onplay",{"_index":570,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["onprevious",{"_index":571,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["onreset",{"_index":1449,"title":{},"body":{"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["onstart",{"_index":572,"title":{},"body":{"components/DeaComponent.html":{}}}],["onstop",{"_index":573,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["onwheel",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opacity",{"_index":408,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"miscellaneous/variables.html":{}}}],["opendialog",{"_index":574,"title":{},"body":{"components/DeaComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["opendialog(check",{"_index":989,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["optional",{"_index":243,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"components/DeaComponent.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/functions.html":{},"components/DialogDataComponent.html":{}}}],["options",{"_index":1783,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["orphan",{"_index":1790,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["out",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"components/PuzzleComponent.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outgoinglinks",{"_index":493,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["outgoinglinks.filter(link",{"_index":2009,"title":{},"body":{"classes/WordChecker.html":{}}}],["outgoinglinks.length",{"_index":504,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["outgoinglinks[randomlinknumber",{"_index":506,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["outgoinglinks[randomlinknumber].text.split",{"_index":512,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["outline",{"_index":1891,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["output",{"_index":339,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["outputs",{"_index":303,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["outside",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["outthreshold",{"_index":1822,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["over",{"_index":1809,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["overflow",{"_index":1594,"title":{},"body":{"components/GrammarComponent.html":{}}}],["overlay",{"_index":785,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["override",{"_index":945,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["overthreshold",{"_index":1812,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["overview",{"_index":2167,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":721,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":2085,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":735,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["padding:12px",{"_index":1435,"title":{},"body":{"components/FooterComponent.html":{}}}],["page",{"_index":1728,"title":{},"body":{"components/MainPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["page.component",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.css",{"_index":1729,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.html",{"_index":1730,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts",{"_index":1727,"title":{},"body":{"components/MainPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":1732,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:8",{"_index":1731,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page/main",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["palette",{"_index":967,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["palette.linktemplate",{"_index":1139,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["palette.model",{"_index":1149,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["palette.nodetemplate",{"_index":1132,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["palette.padding",{"_index":1130,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["palettedivclassname",{"_index":966,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["palettenodedata",{"_index":984,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["parameters",{"_index":242,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/functions.html":{},"components/DialogDataComponent.html":{}}}],["parent",{"_index":1507,"title":{},"body":{"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{}}}],["parent.scrolltop",{"_index":1511,"title":{},"body":{"components/GrammarComponent.html":{}}}],["parseint(localstorage.getitem('activelevel",{"_index":969,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["parseint(localstorage.getitem('highestlevel",{"_index":971,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["parseint(localstorage.getitem('score",{"_index":973,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["passive",{"_index":2268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":1724,"title":{},"body":{"components/LoginComponent.html":{}}}],["path",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["pause",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause_circle_filled",{"_index":728,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["pipe",{"_index":1682,"title":{},"body":{"injectables/GrammarService.html":{}}}],["pkcemethod",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["platform",{"_index":2159,"title":{},"body":{"index.html":{}}}],["play_circle_filled",{"_index":726,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["pointer",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["points",{"_index":1157,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["portid",{"_index":1079,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["position",{"_index":350,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["pre",{"_index":1599,"title":{},"body":{"components/GrammarComponent.html":{}}}],["present",{"_index":285,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["preserved",{"_index":1802,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["preset",{"_index":2240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pressed",{"_index":1168,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["prettier",{"_index":2114,"title":{},"body":{"dependencies.html":{}}}],["preventdefault",{"_index":2079,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["preventdefault(e",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preventdefaultforscrollkeys",{"_index":2080,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prevevent",{"_index":875,"title":{},"body":{"injectables/DeaService.html":{}}}],["prevexp",{"_index":1335,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["previouselements",{"_index":371,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["prevlabel",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":258,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["proceed",{"_index":279,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["produce",{"_index":934,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["produce(appcomp.state",{"_index":1024,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["produce(this.state",{"_index":1102,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["production",{"_index":2269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{}}}],["profile'},{'name",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["profile.component.css",{"_index":1770,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/User.html":{}}}],["profile.component.html",{"_index":1771,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/User.html":{}}}],["profile/profile.component",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecomponent",{"_index":96,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{},"components/DialogDataComponent.html":{}}}],["project",{"_index":2128,"title":{},"body":{"index.html":{}}}],["prop",{"_index":982,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"properties.html":{},"components/DialogDataComponent.html":{}}}],["props",{"_index":1925,"title":{},"body":{"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["props?.afterexp",{"_index":1345,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["props?.expindex",{"_index":1339,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["props?.prevexp",{"_index":1343,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["props?.rule",{"_index":1341,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["protected",{"_index":259,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["providedin",{"_index":257,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":809,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/StartGameModule.html":{}}}],["prüfe",{"_index":513,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["public",{"_index":234,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/DialogDataComponent.html":{}}}],["punkte",{"_index":1879,"title":{},"body":{"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{}}}],["punktestand",{"_index":2469,"title":{},"body":{"components/DialogDataComponent.html":{}}}],["puzzle",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["puzzle'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["puzzle.component",{"_index":1913,"title":{},"body":{"modules/PuzzleModule.html":{}}}],["puzzle.component.css",{"_index":1777,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["puzzle.component.html",{"_index":1778,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["puzzle/puzzle.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["puzzle/puzzle.module",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["puzzlecomponent",{"_index":98,"title":{"components/PuzzleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["puzzlegamecomponent",{"_index":100,"title":{"components/PuzzleGameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{},"components/DialogDataComponent.html":{}}}],["puzzlemodule",{"_index":122,"title":{"modules/PuzzleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PuzzleModule.html":{},"modules.html":{},"overview.html":{}}}],["q",{"_index":709,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["q0",{"_index":611,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["q1",{"_index":613,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["querylist",{"_index":618,"title":{},"body":{"components/DeaComponent.html":{}}}],["r",{"_index":911,"title":{},"body":{"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["r.nativeelement.id",{"_index":680,"title":{},"body":{"components/DeaComponent.html":{}}}],["rad",{"_index":2410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rad).close",{"_index":2420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rad2",{"_index":2421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rad2).close",{"_index":2424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radio",{"_index":1597,"title":{},"body":{"components/GrammarComponent.html":{}}}],["random",{"_index":499,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["randomgenchar",{"_index":851,"title":{},"body":{"injectables/DeaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["randomgenchar(...object.keys(nextnode).filter((a",{"_index":880,"title":{},"body":{"injectables/DeaService.html":{}}}],["randomgeneratedarray",{"_index":1197,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["randomlinknumber",{"_index":502,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["randomlinktext",{"_index":518,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["randomwords",{"_index":2291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rang",{"_index":1968,"title":{},"body":{"components/TableComponent.html":{}}}],["rdm",{"_index":894,"title":{},"body":{"injectables/DeaService.html":{}}}],["read",{"_index":620,"title":{},"body":{"components/DeaComponent.html":{}}}],["readme",{"_index":1436,"title":{},"body":{"components/GrammarComponent.html":{}}}],["readonly",{"_index":260,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["realm",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["reber",{"_index":696,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"miscellaneous/variables.html":{}}}],["reberconstruct",{"_index":557,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["reberconstruct.map((a",{"_index":893,"title":{},"body":{"injectables/DeaService.html":{}}}],["reberstring",{"_index":452,"title":{},"body":{"classes/DEAException.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["reberstringparam",{"_index":842,"title":{},"body":{"injectables/DeaService.html":{}}}],["reberstringparam.substring(1",{"_index":915,"title":{},"body":{"injectables/DeaService.html":{}}}],["reberstringparam[0",{"_index":916,"title":{},"body":{"injectables/DeaService.html":{}}}],["reberwort",{"_index":651,"title":{},"body":{"components/DeaComponent.html":{}}}],["rectangle",{"_index":2234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["red",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["redirectto",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["redirecturi",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{}}}],["reducer",{"_index":2063,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":1716,"title":{},"body":{"interfaces/GrammarState.html":{},"miscellaneous/functions.html":{}}}],["reduziert",{"_index":1572,"title":{},"body":{"components/GrammarComponent.html":{}}}],["reference",{"_index":2168,"title":{},"body":{"index.html":{}}}],["referenzautomat",{"_index":1199,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["referenzgraph",{"_index":1223,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["regel",{"_index":1566,"title":{},"body":{"components/GrammarComponent.html":{}}}],["regeln",{"_index":2367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["register.component.css",{"_index":1915,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1916,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":103,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reinitmodel",{"_index":1161,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["relative",{"_index":749,"title":{},"body":{"components/DeaComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["relinkingtool.isunconnectedlinkvalid",{"_index":1041,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["relinkingtool.portgravity",{"_index":1042,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["reload",{"_index":2140,"title":{},"body":{"index.html":{}}}],["remember",{"_index":1725,"title":{},"body":{"components/LoginComponent.html":{}}}],["removed",{"_index":1803,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["render",{"_index":300,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleComponent.html":{}}}],["renderer",{"_index":313,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["renderer2",{"_index":307,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["rendertablerows",{"_index":575,"title":{},"body":{"components/DeaComponent.html":{}}}],["repeat",{"_index":1533,"title":{},"body":{"components/GrammarComponent.html":{}}}],["require",{"_index":2076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":275,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiredroles",{"_index":276,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiredroles.every((role",{"_index":286,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiredroles.length",{"_index":284,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["reset",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"components/MyCounterComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{},"overview.html":{}}}],["resetanimation",{"_index":373,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["resetgame",{"_index":1209,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["result",{"_index":542,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordGenerator.html":{},"components/DialogDataComponent.html":{}}}],["resultat",{"_index":1567,"title":{},"body":{"components/GrammarComponent.html":{}}}],["results",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["return",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["returns",{"_index":250,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"components/DialogDataComponent.html":{}}}],["reverse",{"_index":1575,"title":{},"body":{"components/GrammarComponent.html":{},"components/StartGameComponent.html":{},"miscellaneous/variables.html":{}}}],["reverser",{"_index":1546,"title":{},"body":{"components/GrammarComponent.html":{}}}],["rgba(0",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(128",{"_index":1603,"title":{},"body":{"components/GrammarComponent.html":{}}}],["rgba(211",{"_index":1614,"title":{},"body":{"components/GrammarComponent.html":{}}}],["rgba(238",{"_index":765,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["rgba(251",{"_index":1607,"title":{},"body":{"components/GrammarComponent.html":{}}}],["richtig",{"_index":1253,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["richtigen",{"_index":2357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["right",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["rightwords",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ring",{"_index":486,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["roles",{"_index":274,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["route",{"_index":249,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["route.data['roles",{"_index":277,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["router",{"_index":239,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["routermodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DeaModule.html":{}}}],["routermodule.forroot",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":226,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":247,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["routes",{"_index":143,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing",{"_index":1143,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["routing.module",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":225,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":760,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["rows",{"_index":1838,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["rule",{"_index":1292,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule.afterexp",{"_index":1377,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule.expindex",{"_index":1379,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule.prevexp",{"_index":1378,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule.rule.split('').reverse().join('').replace",{"_index":1380,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule1",{"_index":1363,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule1.afterexp",{"_index":1368,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule1.expindex",{"_index":1364,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule1.prevexp",{"_index":1365,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule1.rule",{"_index":1369,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rules",{"_index":1356,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"classes/RuleSetInterface.html":{}}}],["rules.length",{"_index":1548,"title":{},"body":{"components/GrammarComponent.html":{}}}],["rules.map((rule",{"_index":1376,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rules.push(rule1",{"_index":1370,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rules.reverse",{"_index":1375,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rules[rules.length",{"_index":1549,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ruleset",{"_index":1294,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rulesetinterface",{"_index":1303,"title":{"classes/RuleSetInterface.html":{}},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"classes/RuleSetInterface.html":{},"coverage.html":{}}}],["run",{"_index":2134,"title":{},"body":{"index.html":{}}}],["running",{"_index":2152,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":254,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":639,"title":{},"body":{"components/DeaComponent.html":{},"injectables/GrammarService.html":{}}}],["s",{"_index":643,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"miscellaneous/variables.html":{}}}],["s*/gm",{"_index":1386,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["s256",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["same",{"_index":1805,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["sans",{"_index":1073,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["scaffolding",{"_index":2143,"title":{},"body":{"index.html":{}}}],["scale(0.8",{"_index":1587,"title":{},"body":{"components/GrammarComponent.html":{}}}],["scale(7",{"_index":1606,"title":{},"body":{"components/GrammarComponent.html":{}}}],["schaue",{"_index":525,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["schritt",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["score",{"_index":972,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["scroll",{"_index":1621,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["se",{"_index":393,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["se[0",{"_index":396,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["se[1",{"_index":398,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["sei",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sein",{"_index":2017,"title":{},"body":{"classes/WordChecker.html":{}}}],["seite",{"_index":2433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selected",{"_index":1122,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["selectednodedata",{"_index":1124,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["selectfetauregrammar",{"_index":1712,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["selectgrammarselector",{"_index":1714,"title":{},"body":{"interfaces/GrammarState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectionadorned",{"_index":1135,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["selectionadornmenttemplate",{"_index":1140,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["selectnode",{"_index":304,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["self",{"_index":773,"title":{},"body":{"components/DeaComponent.html":{}}}],["serif",{"_index":1074,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["serve",{"_index":2136,"title":{},"body":{"index.html":{}}}],["server",{"_index":2133,"title":{},"body":{"index.html":{}}}],["service",{"_index":899,"title":{},"body":{"injectables/DeaService.html":{},"dependencies.html":{}}}],["service.send('b",{"_index":918,"title":{},"body":{"injectables/DeaService.html":{}}}],["service.send(char",{"_index":908,"title":{},"body":{"injectables/DeaService.html":{}}}],["service.stop",{"_index":910,"title":{},"body":{"injectables/DeaService.html":{}}}],["set",{"_index":1103,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/DialogDataComponent.html":{}}}],["setexpression(exp",{"_index":1326,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["setinstance",{"_index":374,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["setinstance(instance",{"_index":382,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["settimeout",{"_index":415,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{}}}],["shape",{"_index":1091,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["shapes/shape",{"_index":931,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["shared/dialog/dialog.component",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/DeaComponent.html":{}}}],["shared/exceptions/deaexception",{"_index":853,"title":{},"body":{"injectables/DeaService.html":{}}}],["shared/helpers/helpers",{"_index":852,"title":{},"body":{"injectables/DeaService.html":{}}}],["shouldnotstop",{"_index":595,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["showbullets",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showbuttons",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showgrid",{"_index":1002,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["showoneuser",{"_index":1931,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["showuser",{"_index":1932,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["sibling",{"_index":1798,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["siblings",{"_index":1791,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["sicher",{"_index":1211,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["sicher?!\\nok",{"_index":1165,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["sides",{"_index":1821,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["sie",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["siehe",{"_index":722,"title":{},"body":{"components/DeaComponent.html":{}}}],["sig",{"_index":1300,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["simplechanges",{"_index":332,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["sind",{"_index":446,"title":{},"body":{"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/GrammarGraphService.html":{},"classes/WordGenerator.html":{}}}],["size",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["sizing",{"_index":1626,"title":{},"body":{"components/GrammarComponent.html":{}}}],["skipsdiagramupdate",{"_index":983,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["slider",{"_index":776,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["smode",{"_index":1544,"title":{},"body":{"components/GrammarComponent.html":{}}}],["solid",{"_index":742,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["solution",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solved",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"index.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["source.pipe(takewhile",{"_index":692,"title":{},"body":{"components/DeaComponent.html":{}}}],["sowohl",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":1592,"title":{},"body":{"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/StartGameComponent.html":{}}}],["spec\\.ts",{"_index":2194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specifies",{"_index":1793,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["specify",{"_index":1150,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["speed",{"_index":377,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speed1}}s",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed2}}s",{"_index":2331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed[this.speed",{"_index":672,"title":{},"body":{"components/DeaComponent.html":{}}}],["sprache",{"_index":1257,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["src/.../app.config.ts",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../config.ts",{"_index":2188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../counter.actions.ts",{"_index":2190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../counter.reducer.ts",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../grammar.action.ts",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../grammar.animation.ts",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../grammar.reducer.ts",{"_index":2125,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../grammar.service.ts",{"_index":2176,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../helpers.ts",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../intro.config.ts",{"_index":2192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../introjs.ts",{"_index":2189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../level.ts",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shape.ts",{"_index":2191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../table.config.ts",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":224,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth.guard.ts",{"_index":230,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:11",{"_index":241,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/auth.guard.ts:20",{"_index":248,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/auth/auth.module.ts",{"_index":289,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/component/footer/footer.component.ts",{"_index":1427,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/component/footer/footer.component.ts:12",{"_index":1432,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/component/footer/footer.component.ts:8",{"_index":1431,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/component/login/login.component.ts",{"_index":1718,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/component/login/login.component.ts:12",{"_index":1722,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/component/login/login.component.ts:8",{"_index":1721,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/component/main",{"_index":1726,"title":{},"body":{"components/MainPageComponent.html":{},"coverage.html":{}}}],["src/app/component/navigation/navigation.component.ts",{"_index":1749,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/User-2.html":{},"coverage.html":{}}}],["src/app/component/navigation/navigation.component.ts:19",{"_index":1754,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/component/navigation/navigation.component.ts:25",{"_index":1755,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/component/register/register.component.ts",{"_index":1914,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/component/register/register.component.ts:12",{"_index":1918,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/component/register/register.component.ts:8",{"_index":1917,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/component/table/table.component.ts",{"_index":1962,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/component/table/table.component.ts:12",{"_index":1966,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/component/table/table.component.ts:8",{"_index":1965,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/counter.actions.ts",{"_index":2048,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/counter.reducer.ts",{"_index":2049,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/dea/cyto",{"_index":290,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"coverage.html":{}}}],["src/app/dea/dea.component.ts",{"_index":547,"title":{},"body":{"components/DeaComponent.html":{},"coverage.html":{}}}],["src/app/dea/dea.component.ts:101",{"_index":587,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:111",{"_index":594,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:126",{"_index":602,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:142",{"_index":598,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:162",{"_index":599,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:166",{"_index":592,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:181",{"_index":600,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:191",{"_index":597,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:20",{"_index":614,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:209",{"_index":596,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:21",{"_index":609,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:213",{"_index":583,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:22",{"_index":607,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:23",{"_index":624,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:24",{"_index":629,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:25",{"_index":627,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:26",{"_index":622,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:27",{"_index":605,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:28",{"_index":626,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:29",{"_index":616,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:30",{"_index":617,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:32",{"_index":582,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:33",{"_index":581,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:36",{"_index":621,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:37",{"_index":580,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:40",{"_index":610,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:66",{"_index":591,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:70",{"_index":601,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:74",{"_index":603,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:79",{"_index":590,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:88",{"_index":589,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:97",{"_index":584,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.module.ts",{"_index":808,"title":{},"body":{"modules/DeaModule.html":{}}}],["src/app/dea/dea.service.ts",{"_index":827,"title":{},"body":{"injectables/DeaService.html":{},"coverage.html":{}}}],["src/app/dea/dea.service.ts:106",{"_index":835,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:11",{"_index":846,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:136",{"_index":838,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:15",{"_index":837,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:151",{"_index":841,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:33",{"_index":836,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:44",{"_index":843,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:78",{"_index":839,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/intro.config.ts",{"_index":2053,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/dea/table.config.ts",{"_index":2054,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/example/example.component.ts",{"_index":1267,"title":{},"body":{"components/ExampleComponent.html":{},"coverage.html":{}}}],["src/app/example/example.component.ts:12",{"_index":1271,"title":{},"body":{"components/ExampleComponent.html":{}}}],["src/app/example/example.component.ts:8",{"_index":1270,"title":{},"body":{"components/ExampleComponent.html":{}}}],["src/app/grammar/cyto",{"_index":1638,"title":{},"body":{"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/grammar/grammar.animation.ts",{"_index":2056,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/grammar/grammar.component.ts",{"_index":1437,"title":{},"body":{"components/GrammarComponent.html":{},"coverage.html":{}}}],["src/app/grammar/grammar.component.ts:104",{"_index":1469,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:108",{"_index":1466,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:112",{"_index":1464,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:20",{"_index":1483,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:21",{"_index":1478,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:22",{"_index":1473,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:23",{"_index":1475,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:24",{"_index":1474,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:25",{"_index":1488,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:26",{"_index":1486,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:27",{"_index":1485,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:28",{"_index":1489,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:29",{"_index":1484,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:31",{"_index":1454,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:35",{"_index":1458,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:41",{"_index":1457,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:54",{"_index":1460,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:59",{"_index":1456,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:72",{"_index":1471,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:77",{"_index":1465,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:81",{"_index":1468,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:85",{"_index":1461,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:89",{"_index":1462,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:93",{"_index":1470,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:97",{"_index":1467,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.model.ts",{"_index":1274,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"coverage.html":{}}}],["src/app/grammar/grammar.model.ts:13",{"_index":1926,"title":{},"body":{"classes/RuleSetInterface.html":{}}}],["src/app/grammar/grammar.model.ts:14",{"_index":1928,"title":{},"body":{"classes/RuleSetInterface.html":{}}}],["src/app/grammar/grammar.model.ts:15",{"_index":1927,"title":{},"body":{"classes/RuleSetInterface.html":{}}}],["src/app/grammar/grammar.model.ts:16",{"_index":1924,"title":{},"body":{"classes/RuleSetInterface.html":{}}}],["src/app/grammar/grammar.model.ts:164",{"_index":1333,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:168",{"_index":1327,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:181",{"_index":1316,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:188",{"_index":1323,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:208",{"_index":1312,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:212",{"_index":1314,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:216",{"_index":1310,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:220",{"_index":1306,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:249",{"_index":1307,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:276",{"_index":1320,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:281",{"_index":1321,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:34",{"_index":1298,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:35",{"_index":1305,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:36",{"_index":1302,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:46",{"_index":1304,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:47",{"_index":1296,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:63",{"_index":1325,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:67",{"_index":1329,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:71",{"_index":1331,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:75",{"_index":1318,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.module.ts",{"_index":1651,"title":{},"body":{"modules/GrammarModule.html":{}}}],["src/app/grammar/grammar.service.ts",{"_index":1655,"title":{},"body":{"injectables/GrammarService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/grammar/grammar.service.ts:14",{"_index":1671,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:15",{"_index":1670,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:16",{"_index":1675,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:17",{"_index":1673,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:18",{"_index":1674,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:19",{"_index":1659,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:27",{"_index":1661,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:31",{"_index":1666,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:50",{"_index":1665,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:54",{"_index":1668,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:60",{"_index":1664,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:72",{"_index":1667,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:80",{"_index":1662,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:84",{"_index":1663,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/slice/grammar.action.ts",{"_index":2061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/grammar/slice/grammar.reducer.ts",{"_index":1699,"title":{},"body":{"interfaces/GrammarState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/grammar/utils/helpers.ts",{"_index":2064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/grammar/utils/introjs.ts",{"_index":2065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/my",{"_index":1733,"title":{},"body":{"components/MyCounterComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts",{"_index":1769,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts:19",{"_index":1772,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:25",{"_index":1773,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/puzzle",{"_index":465,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["src/app/puzzle/puzzle.component.ts",{"_index":1776,"title":{},"body":{"components/PuzzleComponent.html":{},"coverage.html":{}}}],["src/app/puzzle/puzzle.component.ts:12",{"_index":1779,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["src/app/puzzle/puzzle.module.ts",{"_index":1912,"title":{},"body":{"modules/PuzzleModule.html":{}}}],["src/app/shared/dialog/dialog.component.ts",{"_index":1230,"title":{},"body":{"components/DialogComponent.html":{},"coverage.html":{}}}],["src/app/shared/dialog/dialog.component.ts:11",{"_index":1237,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/dialog/dialog.component.ts:12",{"_index":1236,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/dialog/dialog.component.ts:15",{"_index":1235,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/dialog/dialog.component.ts:9",{"_index":1234,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/exceptions/deaexception.ts",{"_index":450,"title":{},"body":{"classes/DEAException.html":{},"coverage.html":{}}}],["src/app/shared/exceptions/deaexception.ts:2",{"_index":456,"title":{},"body":{"classes/DEAException.html":{}}}],["src/app/shared/exceptions/deaexception.ts:3",{"_index":455,"title":{},"body":{"classes/DEAException.html":{}}}],["src/app/shared/exceptions/deaexception.ts:4",{"_index":454,"title":{},"body":{"classes/DEAException.html":{}}}],["src/app/shared/helpers/helpers.ts",{"_index":2069,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/start",{"_index":1929,"title":{},"body":{"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"interfaces/User-1.html":{},"coverage.html":{}}}],["src/app/users.service.ts",{"_index":1983,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/users.service.ts:11",{"_index":1991,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:15",{"_index":1990,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:7",{"_index":1988,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/environments/environment.prod.ts",{"_index":2072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/helpers.ts",{"_index":2077,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":702,"title":{},"body":{"components/DeaComponent.html":{},"components/DialogComponent.html":{},"miscellaneous/variables.html":{}}}],["stand",{"_index":1214,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["standard",{"_index":953,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["start",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User-1.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["start_1",{"_index":2222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["starte",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":2127,"title":{"index.html":{}},"body":{}}],["starten",{"_index":705,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["startet",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startexp",{"_index":1372,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["startgame",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["startgamecomponent",{"_index":105,"title":{"components/StartGameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{},"overview.html":{},"components/DialogDataComponent.html":{}}}],["startgamemodule",{"_index":176,"title":{"modules/StartGameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StartGameModule.html":{},"modules.html":{},"overview.html":{}}}],["startlink",{"_index":1195,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"components/DialogDataComponent.html":{}}}],["starttour",{"_index":576,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["startwith",{"_index":1676,"title":{},"body":{"injectables/GrammarService.html":{}}}],["state",{"_index":246,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/MyCounterComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["state.changed",{"_index":864,"title":{},"body":{"injectables/DeaService.html":{}}}],["state.grammar",{"_index":1710,"title":{},"body":{"interfaces/GrammarState.html":{},"miscellaneous/variables.html":{}}}],["state.url",{"_index":271,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["state.value",{"_index":860,"title":{},"body":{"injectables/DeaService.html":{}}}],["statelistener",{"_index":849,"title":{},"body":{"injectables/DeaService.html":{}}}],["statemachine",{"_index":628,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["statements",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":856,"title":{},"body":{"injectables/DeaService.html":{}}}],["statetype",{"_index":1679,"title":{},"body":{"injectables/GrammarService.html":{},"miscellaneous/typealiases.html":{}}}],["static",{"_index":986,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/DialogDataComponent.html":{}}}],["steht",{"_index":2296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stelle",{"_index":655,"title":{},"body":{"components/DeaComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/DialogDataComponent.html":{}}}],["stellen",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["steps",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["steuerung",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stop",{"_index":1487,"title":{},"body":{"components/GrammarComponent.html":{},"injectables/GrammarService.html":{},"miscellaneous/typealiases.html":{}}}],["stop')).subscribe",{"_index":694,"title":{},"body":{"components/DeaComponent.html":{}}}],["stop_circle_filled",{"_index":727,"title":{},"body":{"components/DeaComponent.html":{}}}],["store",{"_index":240,"title":{},"body":{"injectables/AuthGuard.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["store/rootreducer",{"_index":1706,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["stored",{"_index":2149,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["str",{"_index":379,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"injectables/GrammarGraphService.html":{}}}],["str.slice",{"_index":898,"title":{},"body":{"injectables/DeaService.html":{}}}],["str].filter((s",{"_index":903,"title":{},"body":{"injectables/DeaService.html":{}}}],["stream",{"_index":1747,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["stringsausgabe",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringsauswertung",{"_index":2360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stroke",{"_index":1061,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["strokewidth",{"_index":1093,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["style",{"_index":417,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["stylesheet",{"_index":1830,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"components/DialogDataComponent.html":{}}}],["subject",{"_index":1669,"title":{},"body":{"injectables/GrammarService.html":{}}}],["subscribe",{"_index":1687,"title":{},"body":{"injectables/GrammarService.html":{}}}],["subscribe((data",{"_index":1944,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["success",{"_index":1588,"title":{},"body":{"components/GrammarComponent.html":{}}}],["suche",{"_index":530,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["super(msg",{"_index":457,"title":{},"body":{"classes/DEAException.html":{}}}],["super(router",{"_index":261,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["super.makenetwork(coll",{"_index":956,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["support",{"_index":2169,"title":{},"body":{"modules.html":{}}}],["supportspassive",{"_index":2081,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":2170,"title":{},"body":{"modules.html":{}}}],["sweep",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switchmap",{"_index":1677,"title":{},"body":{"injectables/GrammarService.html":{}}}],["switchmap((val",{"_index":1683,"title":{},"body":{"injectables/GrammarService.html":{}}}],["t",{"_index":719,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["tabelle",{"_index":708,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"components/DialogDataComponent.html":{}}}],["table.component.css",{"_index":1963,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.html",{"_index":1964,"title":{},"body":{"components/TableComponent.html":{}}}],["table.config",{"_index":636,"title":{},"body":{"components/DeaComponent.html":{}}}],["tablecomponent",{"_index":107,"title":{"components/TableComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{},"components/DialogDataComponent.html":{}}}],["tablemain",{"_index":558,"title":{},"body":{"components/DeaComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2084,"title":{},"body":{"coverage.html":{}}}],["takewhile",{"_index":638,"title":{},"body":{"components/DeaComponent.html":{},"injectables/GrammarService.html":{}}}],["tap",{"_index":1678,"title":{},"body":{"injectables/GrammarService.html":{}}}],["tap((n",{"_index":1686,"title":{},"body":{"injectables/GrammarService.html":{}}}],["target",{"_index":1815,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["targets",{"_index":1788,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["task",{"_index":974,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["td",{"_index":755,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/TableComponent.html":{}}}],["td:nth",{"_index":794,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["tech",{"_index":701,"title":{},"body":{"components/DeaComponent.html":{},"components/DialogComponent.html":{},"miscellaneous/variables.html":{}}}],["teilbar",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teilwort",{"_index":2299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"components/DialogDataComponent.html":{}}}],["terminalzeichen",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terms",{"_index":1922,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["teste",{"_index":480,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["testing",{"_index":2163,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2154,"title":{},"body":{"index.html":{}}}],["testy",{"_index":1951,"title":{},"body":{"components/StartGameComponent.html":{}}}],["text",{"_index":473,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["text\").maketwoway",{"_index":1077,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["textalign",{"_index":1098,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["th",{"_index":756,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/TableComponent.html":{}}}],["th:nth",{"_index":792,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["thema",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["theorie",{"_index":703,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["this._expression",{"_index":1348,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._getcorrectexpression",{"_index":1425,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._getwrongexpression",{"_index":1426,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._hasnonterminalchar(exp",{"_index":1399,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._resetanimationobject",{"_index":674,"title":{},"body":{"components/DeaComponent.html":{}}}],["this._rule",{"_index":1347,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r",{"_index":1358,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.a.length",{"_index":1403,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.a[r",{"_index":1404,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.o.includes(correctexp[indexofexp",{"_index":1421,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.o.length",{"_index":1407,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.o[math.round(math.random",{"_index":1420,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.o[r",{"_index":1408,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.z.includes(correctexp[indexofexp",{"_index":1418,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.z.length",{"_index":1411,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.z[math.round(math.random",{"_index":1422,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.z[r",{"_index":1412,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.sig.indexof(r",{"_index":1396,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.start",{"_index":1398,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.v.indexof(r",{"_index":1395,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._ruleset",{"_index":1374,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._setruleset(exp",{"_index":1384,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._valid",{"_index":1349,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._validatereberstring(str",{"_index":912,"title":{},"body":{"injectables/DeaService.html":{}}}],["this.activelevel",{"_index":1175,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.activelevel.tostring",{"_index":1203,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.afterexp",{"_index":1344,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.animal",{"_index":1000,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.animatedrulesstream.next",{"_index":1694,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.animatedrulesstream.next(this.rules",{"_index":1697,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.animatedrulesstream.next(this.rules.slice(0",{"_index":1695,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.animatestep",{"_index":683,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.animationobject.current",{"_index":678,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.ausgabestring",{"_index":459,"title":{},"body":{"classes/DEAException.html":{},"components/DeaComponent.html":{}}}],["this.authenticated",{"_index":267,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.cdr.detectchanges",{"_index":1012,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.checkwordrekursive(dea",{"_index":2004,"title":{},"body":{"classes/WordChecker.html":{}}}],["this.count",{"_index":1746,"title":{},"body":{"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/User-2.html":{}}}],["this.createdefaultreberfsm",{"_index":870,"title":{},"body":{"injectables/DeaService.html":{}}}],["this.createrebermachine",{"_index":871,"title":{},"body":{"injectables/DeaService.html":{}}}],["this.currentindex",{"_index":1688,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.currentuser",{"_index":1940,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["this.cy",{"_index":363,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["this.cy.edges().toarray",{"_index":392,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.cy.userzoomingenabled(false",{"_index":366,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["this.cyconfig",{"_index":365,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["this.cytoservice.animatestep(this.reberconstruct[this.animationobject.current].trans",{"_index":671,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.cytoservice.errorsate.subscribe((v",{"_index":647,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.cytoservice.resetanimation",{"_index":685,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.cytoservice.setinstance(this.cy",{"_index":367,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["this.data.onnext",{"_index":1229,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.deaservice.createdefaultreberfsm",{"_index":660,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.deaservice.createrebermachine",{"_index":646,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.deaservice.evaluatestring(str",{"_index":673,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.deaservice.generatenonreber",{"_index":669,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.deaservice.generatereberconstruct(reberstring",{"_index":676,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.deaservice.generatereberstring",{"_index":664,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.dialog.open(dialogcomponent",{"_index":661,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.dialog.open(dialogdatacomponent",{"_index":2465,"title":{},"body":{"components/DialogDataComponent.html":{}}}],["this.dialog.open(dialogdataexampledialog",{"_index":991,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.dialogref.close",{"_index":1227,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.endstate.next('start",{"_index":691,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.endstate.next('stop",{"_index":684,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.endstate.value",{"_index":693,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.errorsate.next",{"_index":411,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.errorstate",{"_index":648,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.evaluatestring(reberstring",{"_index":665,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.expindex",{"_index":1338,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.expression",{"_index":1346,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.expressiongrammar.expression",{"_index":1527,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.expressiongrammar.generatecorrectexpression",{"_index":1515,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.expressiongrammar.generatewrongexpression",{"_index":1516,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.generatereberstring",{"_index":891,"title":{},"body":{"injectables/DeaService.html":{}}}],["this.generatewordrekursive(dea",{"_index":528,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["this.genfsm(this.createrebermachine",{"_index":859,"title":{},"body":{"injectables/DeaService.html":{}}}],["this.genfsm(xstate",{"_index":900,"title":{},"body":{"injectables/DeaService.html":{}}}],["this.grammerservice.animatedrulesstream.subscribe((v",{"_index":1503,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.init(this.expressiongrammar.ruleset",{"_index":1517,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onbegin",{"_index":1522,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onend",{"_index":1523,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onnext",{"_index":1520,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onpause",{"_index":1526,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onplay",{"_index":1525,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onprevious",{"_index":1521,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onreset",{"_index":1524,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.speed.next(v",{"_index":1514,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.state.subscribe((v",{"_index":1502,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.highestlevel",{"_index":1201,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.http.get(\"http://localhost:3000/user",{"_index":1992,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.get(\"http://localhost:3000/user/current",{"_index":1993,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.isexpressionvalid(exp",{"_index":1383,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.isexpressionvalid(oldexp",{"_index":1373,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.keycloak.loaduserprofile",{"_index":273,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.keycloak.login",{"_index":269,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.lastnode",{"_index":427,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.lastnode.animate",{"_index":434,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.lastnode.connectededges(`edge[source",{"_index":431,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.lastnode.id()}\"]`).toarray",{"_index":432,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.level",{"_index":1941,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["this.listelement",{"_index":1505,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.listelement.nativeelement",{"_index":1506,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.loaddiagram(this.activelevel",{"_index":1170,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.loadnextlevel.bind(this",{"_index":996,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.matrows.foreach((r",{"_index":686,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.msg",{"_index":460,"title":{},"body":{"classes/DEAException.html":{}}}],["this.mydiagramcomponent",{"_index":1005,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.mydiagramcomponent.clear",{"_index":1178,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.mydiagramcomponent.diagram",{"_index":1006,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.mydiagramcomponent?.diagram",{"_index":1011,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.mydiagramcomponent?.diagram.adddiagramlistener('changedselection",{"_index":1019,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.nextdiagram(this.activelevel",{"_index":1208,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.observeddiagram",{"_index":1010,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.onbegin",{"_index":1518,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.onend",{"_index":1690,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.onnext",{"_index":1691,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.onnext(true",{"_index":695,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.onreset",{"_index":1696,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.onstart",{"_index":668,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.onstop",{"_index":690,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.opendialog(true",{"_index":1191,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.prevexp",{"_index":1342,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.previouselements.push(c",{"_index":423,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.previouselements.push(node1",{"_index":419,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.previouselements.push(node2",{"_index":429,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.reberconstruct",{"_index":667,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.reberconstruct.length",{"_index":653,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.reberconstruct[this.animationobject.current].trans",{"_index":679,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.reberstring",{"_index":458,"title":{},"body":{"classes/DEAException.html":{},"components/DeaComponent.html":{}}}],["this.reberstring.length",{"_index":654,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.reberstring.slice",{"_index":656,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.reberstring.substring",{"_index":652,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.render",{"_index":358,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["this.renderer.addclass(r.nativeelement",{"_index":681,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.renderer.addclass(this.tablemain.nativeelement",{"_index":675,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.renderer.removeclass(r.nativeelement",{"_index":682,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.renderer.removeclass(this.tablemain.nativeelement",{"_index":677,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.renderer.selectrootelement('#cy",{"_index":360,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["this.roles.includes(role",{"_index":287,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.rule",{"_index":1340,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.rules",{"_index":1504,"title":{},"body":{"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["this.rules.length",{"_index":1689,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.score",{"_index":1204,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.showoneuser",{"_index":1947,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["this.speed",{"_index":689,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["this.speed.subscribe((v",{"_index":1680,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.state",{"_index":1101,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.state.diagramlinkdata",{"_index":1186,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.state.diagramnodedata",{"_index":1185,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.state.next('start",{"_index":1692,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.state.next('stop",{"_index":1693,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.state.value",{"_index":1685,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.store.dispatch(increment",{"_index":272,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.store.select('count",{"_index":1760,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["this.store.select('level",{"_index":1942,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["this.task",{"_index":1176,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["this.timer",{"_index":687,"title":{},"body":{"components/DeaComponent.html":{},"injectables/GrammarService.html":{}}}],["this.toggleservice",{"_index":659,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.usersservice.getoneuser",{"_index":1946,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["this.usersservice.getuser",{"_index":1943,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["this.value",{"_index":1382,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.xstate",{"_index":645,"title":{},"body":{"components/DeaComponent.html":{}}}],["throw",{"_index":861,"title":{},"body":{"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"components/DialogDataComponent.html":{}}}],["timer",{"_index":559,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["toarrow",{"_index":1095,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["todo",{"_index":1744,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["toggle",{"_index":819,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["toggleservice",{"_index":560,"title":{},"body":{"components/DeaComponent.html":{}}}],["tolinkable",{"_index":1080,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["tolinkableduplicates",{"_index":1083,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["tolinkableselfnode",{"_index":1085,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["tool0",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool1",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool2",{"_index":2359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool3",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool4",{"_index":2368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool5",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool6",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tools",{"_index":1240,"title":{},"body":{"components/DialogComponent.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":354,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{}}}],["toport",{"_index":1049,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["toshortlength",{"_index":1148,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["tour",{"_index":704,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["tr.active",{"_index":787,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["tr.active::after",{"_index":795,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["tr.mat",{"_index":759,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["tr:hover",{"_index":1980,"title":{},"body":{"components/TableComponent.html":{}}}],["tr:last",{"_index":800,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["tr:nth",{"_index":763,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/TableComponent.html":{}}}],["trans",{"_index":644,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["transaction",{"_index":1108,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["transform",{"_index":1586,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["transition",{"_index":902,"title":{},"body":{"injectables/DeaService.html":{}}}],["transition(':enter",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':leave",{"_index":2334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translate(11px",{"_index":1634,"title":{},"body":{"components/GrammarComponent.html":{}}}],["translatey",{"_index":2329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(0",{"_index":2330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["triangle",{"_index":1835,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["trigger(`onvisible${v",{"_index":2322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["try",{"_index":907,"title":{},"body":{"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["ts",{"_index":361,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2117,"title":{},"body":{"dependencies.html":{}}}],["tuple",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tutorial",{"_index":1950,"title":{},"body":{"components/StartGameComponent.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["typealiases",{"_index":2174,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["tätigen",{"_index":1564,"title":{},"body":{"components/GrammarComponent.html":{}}}],["uebergaenge",{"_index":441,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["unauthenticated",{"_index":266,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["und",{"_index":444,"title":{},"body":{"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["undefined",{"_index":881,"title":{},"body":{"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"interfaces/GrammarState.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"components/DialogDataComponent.html":{}}}],["undomanager",{"_index":1110,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["undomanager.isenabled",{"_index":1037,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["ungerade",{"_index":2295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":2153,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":251,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["unneeded",{"_index":1107,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["unten",{"_index":1904,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["update",{"_index":1003,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["url",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["urltree",{"_index":252,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["use",{"_index":2145,"title":{},"body":{"index.html":{}}}],["used",{"_index":1123,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["user",{"_index":263,"title":{"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}},"body":{"injectables/AuthGuard.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"coverage.html":{},"components/DialogDataComponent.html":{}}}],["userlevel",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["username",{"_index":1774,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["username:string",{"_index":1757,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["userpanningenabled",{"_index":2243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users.service",{"_index":1939,"title":{},"body":{"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"interfaces/User-1.html":{}}}],["usersservice",{"_index":1934,"title":{"injectables/UsersService.html":{}},"body":{"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"interfaces/User-1.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["utils/helpers",{"_index":343,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["utils/introjs",{"_index":1500,"title":{},"body":{"components/GrammarComponent.html":{}}}],["v",{"_index":649,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["v.msg",{"_index":658,"title":{},"body":{"components/DeaComponent.html":{}}}],["valid",{"_index":1293,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleComponent.html":{},"classes/RuleSetInterface.html":{}}}],["validatediagram",{"_index":1183,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["valign",{"_index":2230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["value.tostring",{"_index":1174,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["var",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"components/DialogDataComponent.html":{}}}],["variable",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2177,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vergleich",{"_index":1221,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["version",{"_index":2130,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertex",{"_index":959,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["vertex.node",{"_index":958,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["vertical",{"_index":757,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["verticalalignment",{"_index":1097,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["via",{"_index":2156,"title":{},"body":{"index.html":{}}}],["view",{"_index":1763,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewchild",{"_index":630,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["viewchild('listelement",{"_index":1476,"title":{},"body":{"components/GrammarComponent.html":{}}}],["viewchild('mydiagram",{"_index":985,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["viewchild('tablemain",{"_index":625,"title":{},"body":{"components/DeaComponent.html":{}}}],["viewchildren",{"_index":631,"title":{},"body":{"components/DeaComponent.html":{}}}],["viewchildren('matrows",{"_index":619,"title":{},"body":{"components/DeaComponent.html":{}}}],["viewencapsulation",{"_index":928,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["viewencapsulation.none",{"_index":964,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["void",{"_index":329,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"components/DialogDataComponent.html":{}}}],["von",{"_index":1256,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["vor",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vorhanden",{"_index":516,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["vorname",{"_index":1775,"title":{},"body":{"components/ProfileComponent.html":{}}}],["w",{"_index":1631,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["warning",{"_index":1542,"title":{},"body":{"components/GrammarComponent.html":{}}}],["way",{"_index":1105,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["weight",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["weiter",{"_index":1571,"title":{},"body":{"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["welches",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["werden",{"_index":1573,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["wheat",{"_index":1635,"title":{},"body":{"components/GrammarComponent.html":{}}}],["wheel",{"_index":2266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wheelevent",{"_index":2082,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wheelopt",{"_index":2083,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["whenever",{"_index":1001,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["white",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["whitesmoke",{"_index":782,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["width",{"_index":348,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["wiederholen",{"_index":1920,"title":{},"body":{"components/RegisterComponent.html":{}}}],["wiki",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.addeventlistener('dommousescroll",{"_index":2244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.addeventlistener('keydown",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.addeventlistener('touchmove",{"_index":2250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.addeventlistener(wheelevent",{"_index":2247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.location.origin",{"_index":270,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["window.removeeventlistener('dommousescroll",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.removeeventlistener('keydown",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.removeeventlistener('touchmove",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.removeeventlistener(wheelevent",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstate",{"_index":994,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["wird",{"_index":1255,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["without",{"_index":1013,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["womit",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["worauf",{"_index":526,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["word",{"_index":478,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"components/DialogDataComponent.html":{}}}],["word.substring(1",{"_index":2023,"title":{},"body":{"classes/WordChecker.html":{}}}],["wordchecker",{"_index":939,"title":{"classes/WordChecker.html":{}},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"coverage.html":{},"components/DialogDataComponent.html":{}}}],["worden",{"_index":1242,"title":{},"body":{"components/DialogComponent.html":{}}}],["wordgenerator",{"_index":476,"title":{"classes/WordGenerator.html":{}},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["wordgenerator.generaterandomwords([\"0",{"_index":2314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wordgenerator.generaterandomwords([\"1",{"_index":2292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wordgenerator.generatewords",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["words",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":1272,"title":{},"body":{"components/ExampleComponent.html":{},"components/MainPageComponent.html":{}}}],["world",{"_index":1491,"title":{},"body":{"components/GrammarComponent.html":{}}}],["wort",{"_index":521,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"components/DialogDataExampleDialog.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{},"components/DialogDataComponent.html":{}}}],["wortes",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrap",{"_index":746,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["wrapper",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["wrongreberstring",{"_index":892,"title":{},"body":{"injectables/DeaService.html":{}}}],["wurde",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wörter",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":720,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"miscellaneous/variables.html":{}}}],["xstate",{"_index":561,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/DialogComponent.html":{},"dependencies.html":{}}}],["xstate.states[ah.value.tostring()].config.on",{"_index":878,"title":{},"body":{"injectables/DeaService.html":{}}}],["xstate/lib/interpreter",{"_index":850,"title":{},"body":{"injectables/DeaService.html":{}}}],["y",{"_index":1620,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":588,"title":{},"body":{"components/DeaComponent.html":{},"classes/RuleSetInterface.html":{}}}],["yourgraph",{"_index":1222,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["z",{"_index":775,"title":{},"body":{"components/DeaComponent.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["zeichen",{"_index":515,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["zeigt",{"_index":539,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["zeigt(to",{"_index":527,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["zeilen",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zeit",{"_index":1481,"title":{},"body":{"components/GrammarComponent.html":{}}}],["zone.js",{"_index":2120,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"modules/DeaModule.html":{},"components/GrammarGraphComponent.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{},"overview.html":{}}}],["zoomen",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zorder",{"_index":1055,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["zu",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zudem",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zuende",{"_index":867,"title":{},"body":{"injectables/DeaService.html":{}}}],["zuerst",{"_index":1558,"title":{},"body":{"components/GrammarComponent.html":{}}}],["zuf&auml;lligen",{"_index":2356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zufaelliges",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zum",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zur",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zur&uuml;ck",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zurueck",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zurück",{"_index":1905,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["zurücksetzen",{"_index":1215,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/DialogDataComponent.html":{}}}],["zusammenhang",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zustaende",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zustandsmenge",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zwei",{"_index":1845,"title":{},"body":{"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DEA'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DEA';\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .divider {\n    margin: 0 12px;\n  }\n  \n  .menu-link {\n    cursor: pointer;\n    font-size: 0.9rem;\n    margin-right: 12px;\n  }\n  \n  .active {\n    color: rgba(0, 0, 0, 0.87);\n    background-color: white;\n  }\n  \n  .error-box .red {\n    color: red;\n    font-weight: bold;\n  }\n  \n  .error-box .green {\n    color: green;\n    font-weight: bold;\n  }\n\n  .wrapper-dea {\n    margin: 1rem 3rem;\n  }\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nAppModule -->\n\nDialogComponent->AppModule\n\n\n\n\n\nDialogDataExampleDialog\n\nDialogDataExampleDialog\n\nAppModule -->\n\nDialogDataExampleDialog->AppModule\n\n\n\n\n\nExampleComponent\n\nExampleComponent\n\nAppModule -->\n\nExampleComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainPageComponent\n\nMainPageComponent\n\nAppModule -->\n\nMainPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nPuzzleGameComponent\n\nPuzzleGameComponent\n\nAppModule -->\n\nPuzzleGameComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nPuzzleModule\n\nPuzzleModule\n\nAppModule -->\n\nPuzzleModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DialogComponent\n                        \n                        \n                            DialogDataExampleDialog\n                        \n                        \n                            ExampleComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MainPageComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            PuzzleGameComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            PuzzleModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './component/footer/footer.component';\nimport { NavigationComponent } from './component/navigation/navigation.component';\nimport { MainPageComponent } from './component/main-page/main-page.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './component/login/login.component';\nimport { RegisterComponent } from './component/register/register.component';\nimport { DeaComponent } from './dea/dea.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DeaModule } from './dea/dea.module';\nimport { DialogComponent } from './shared/dialog/dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { KeycloakAngularModule, KeycloakService } from 'keycloak-angular';\nimport { AuthGuard } from './auth.guard';\nimport { StoreModule } from '@ngrx/store';\nimport { counterReducer, levelReducer } from './counter.reducer';\nimport { GojsAngularModule } from \"gojs-angular\";\n\n\n\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { ProfileComponent } from './profile/profile.component'; // Angular CLI environment\nimport { StartGameModule } from './start-game/start-game.module';\nimport { StartGameComponent } from './start-game/start-game.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PuzzleComponent } from './puzzle/puzzle.component';\nimport { PuzzleModule } from './puzzle/puzzle.module';\nimport { DialogDataExampleDialog, PuzzleGameComponent } from './puzzle-game/puzzle-game.component';\nimport { ExampleComponent } from './example/example.component';\nimport { CommonModule } from '@angular/common';\n\nfunction initializeKeycloak(keycloak: KeycloakService) {\n  return () =>\n    keycloak.init({\n      config: {\n        url: 'http://localhost:8080/auth',\n        realm: 'master',\n        clientId: 'puzzle-frontend',\n      },\n      initOptions: {\n\n        pkceMethod: 'S256',\n        // must match to the configured value in keycloak\n        redirectUri: 'http://localhost:4200/your_url',\n        // this will solved the error\n        checkLoginIframe: false\n      }\n    });\n}\n\n\nconst appRoutes: Routes = [\n  { path: '', component: StartGameComponent },\n  { path: 'login', redirectTo: '/startgame' },\n  { path: 'register', component: RegisterComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'docu', component: MainPageComponent },\n\n  {\n    path: 'home',\n    component: StartGameComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'startgame',\n    component: PuzzleGameComponent,\n    canActivate: [AuthGuard]\n  },\n\n  {\n    path: 'test',\n    component: DeaComponent,\n    canActivate: [AuthGuard]\n  },\n\n  { path: '**', component: StartGameComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    DialogDataExampleDialog,\n    FooterComponent,\n    MainPageComponent,\n    LoginComponent,\n    RegisterComponent,\n    DialogComponent,\n    ProfileComponent,\n    PuzzleGameComponent,\n    ExampleComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatButtonModule,\n    CommonModule,\n    //DeaModule,\n    PuzzleModule,\n    MatDialogModule,\n    HttpClientModule,\n    KeycloakAngularModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true } // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        KeycloakAuthGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                isAccessAllowed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store, keycloak: KeycloakService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycloak\n                                                  \n                                                        \n                                                                    KeycloakService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        isAccessAllowed\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAccessAllowed(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\nimport { Store } from '@ngrx/store';\nimport { increment } from './counter.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard extends KeycloakAuthGuard {\n  constructor(\n    router: Router,\n    private store: Store,\n    protected readonly keycloak: KeycloakService\n  ) {\n    super(router, keycloak);\n  }\n\n  public async isAccessAllowed(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n\n    // Force the user to log in if currently unauthenticated.\n    if (!this.authenticated) {\n      await this.keycloak.login({\n        redirectUri: window.location.origin + state.url\n      });\n    }else{\n      this.store.dispatch(increment({ user: await this.keycloak.loadUserProfile() }));\n\n\n    }\n\n    // Get the roles required from the route.\n    const requiredRoles = route.data['roles'];\n\n    // Allow the user to proceed if no additional roles are required to access the route.\n    if (!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\n      return true;\n    }\n\n    // Allow the user to proceed if all the required roles are present.\n    return requiredRoles.every((role) => this.roles.includes(role));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CytoGraphComponent.html":{"url":"components/CytoGraphComponent.html","title":"component - CytoGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CytoGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dea/cyto-graph/cyto-graph.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cyto-graph\n            \n\n\n            \n                styles\n                 +  +  +  + \n            \n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseEnter\n                            \n                            \n                                mouseLeave\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                render\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cyConfig\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectNode\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, el: ElementRef, cytoService: CytoGraphService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cytoService\n                                                  \n                                                        \n                                                                        CytoGraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cyConfig\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { min: 0.1, max: 1.5 }\n                    \n                \n                        \n                            \n                                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectNode\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:32\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        mouseenter\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseenter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:35\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseleave\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseleave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:40\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mouseEnter\n                        \n                    \n                \n            \n            \n                \nmouseEnter()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseenter', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseLeave\n                        \n                    \n                \n            \n            \n                \nmouseLeave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        render\n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport * as cytoscape from 'cytoscape';\nimport { disableScroll, enableScroll } from '../../../utils/helpers';\nimport { CytoGraphService } from './cyto-graph.service';\n\n@Component({\n  selector: 'app-cyto-graph',\n  template: '',\n  styles: [\n    '#cy { height: calc(100% - 70px);\\n' +\n      '        width: 100%;\\n' +\n      '        position: absolute;\\n' +\n      '        left: 0;\\n' +\n      '        top: 0; }',\n  ],\n})\nexport class CytoGraphComponent implements OnChanges {\n  cy!: any;\n  @Input() public cyConfig: any;\n  @Input() public zoom: { min: number; max: number } = { min: 0.1, max: 1.5 };\n\n  @Output() selectNode: EventEmitter = new EventEmitter();\n\n  @HostListener('mouseenter', ['$event'])\n  mouseEnter(): void {\n    disableScroll();\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  mouseLeave(): void {\n    enableScroll();\n  }\n\n  constructor(private renderer: Renderer2, private el: ElementRef, private cytoService: CytoGraphService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.render();\n  }\n\n  public render(): void {\n    const cyContianer = this.renderer.selectRootElement('#cy');\n\n    // @ts-ignore\n    this.cy = cytoscape({\n      container: cyContianer,\n      ...this.cyConfig,\n    });\n\n    this.cy.userZoomingEnabled(false);\n    this.cytoService.setInstance(this.cy);\n  }\n}\n\n    \n\n\n    \n             +  +  +  + \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CytoGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CytoGraphService.html":{"url":"injectables/CytoGraphService.html","title":"injectable - CytoGraphService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CytoGraphService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dea/cyto-graph/cyto-graph.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cy\n                            \n                            \n                                errorSate\n                            \n                            \n                                lastNode\n                            \n                            \n                                previousElements\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animateStep\n                            \n                            \n                                    Public\n                                resetAnimation\n                            \n                            \n                                    Public\n                                setInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        animateStep\n                        \n                    \n                \n            \n            \n                \n                    \n                    animateStep(str: string, speed: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    speed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1000\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetAnimation\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAnimation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    setInstance(instance: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorSate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({ state: false, msg: '' })\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastNode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CytoGraphService {\n  cy: any;\n  previousElements: any = [];\n  lastNode: any = null;\n  errorSate = new BehaviorSubject({ state: false, msg: '' });\n\n  constructor() {}\n\n  public setInstance(instance: any): void {\n    this.cy = instance;\n  }\n\n  public resetAnimation() {\n    for (const c of this.cy.edges().toArray()) {\n      const se = c.connectedNodes().toArray();\n      const node1 = se[0] && se[0];\n      const node2 = se[1] ? se[1] : se[0];\n\n      if (node1.id() !== 'start') {\n        node1.style({\n          lineColor: 'black',\n          color: 'black',\n          'border-width': '1px',\n          'border-color': 'black',\n        });\n      }\n      node2.style({\n        lineColor: 'black',\n        'border-width': '1px',\n        color: 'black',\n        'border-color': 'black',\n      });\n      c.style({\n        lineColor: '#ccc',\n        opacity: 1,\n        width: '3px',\n        color: 'black',\n        'border-color': 'black',\n      });\n    }\n\n    this.errorSate.next({ state: false, msg: '' });\n  }\n\n  public animateStep(str: string, speed = 1000): void {\n    speed = speed / 15;\n\n    if (str !== 'error') {\n      this.errorSate.next({ state: false, msg: '' });\n      for (const c of this.cy.edges().toArray()) {\n        const se = c.connectedNodes().toArray();\n        const node1 = se[0] && se[0];\n        const node2 = se[1] ? se[1] : se[0];\n\n        if (node1.id() + c.data('label') + node2.id() !== str) {\n          setTimeout(() => {\n            if (node1.id() !== 'start') {\n              node1.style({\n                lineColor: 'black',\n                color: 'black',\n                'border-width': '1px',\n                'border-color': 'black',\n              });\n            }\n            node2.style({\n              lineColor: 'black',\n              'border-width': '1px',\n              color: 'black',\n              'border-color': 'black',\n            });\n            c.style({\n              lineColor: '#ccc',\n              opacity: 1,\n              width: '3px',\n              color: 'black',\n              'border-color': 'black',\n            });\n          }, speed / 1.5);\n        }\n\n        setTimeout(() => {\n          if (node1.id() + c.data('label') + node2.id() === str) {\n            node1.animate({\n              style: {\n                lineColor: '#3f51b5',\n                color: '#3f51b5',\n                'border-color': '#3f51b5',\n              },\n            });\n            this.previousElements.push(node1);\n          }\n        }, speed / 3);\n\n        setTimeout(() => {\n          if (node1.id() + c.data('label') + node2.id() === str) {\n            c.animate({\n              style: {\n                lineColor: '#3f51b5',\n                width: '4px',\n                color: '#3f51b5',\n                'border-color': '#3f51b5',\n              },\n            });\n            this.previousElements.push(c);\n          }\n        }, (speed * 2) / 3);\n\n        setTimeout(() => {\n          if (node1.id() + c.data('label') + node2.id() === str) {\n            if (node2.id() === '8') {\n              node2.animate({\n                style: {\n                  lineColor: 'green',\n                  'border-width': '4px',\n                  color: 'green',\n                  'border-color': 'green',\n                },\n              });\n            } else {\n              this.lastNode = node2;\n              node2.animate({\n                style: {\n                  lineColor: '#ff4081',\n                  'border-width': '4px',\n                  color: '#ff4081',\n                  'border-color': '#ff4081',\n                },\n              });\n            }\n            this.previousElements.push(node2);\n          }\n        }, +speed);\n      }\n    } else {\n      const lastFEdges = this.lastNode.connectedEdges(`edge[source = \"${this.lastNode.id()}\"]`).toArray();\n      console.log(lastFEdges);\n\n      this.lastNode.animate({\n        style: {\n          lineColor: 'red',\n          'border-width': '5px',\n          color: 'red',\n          'border-color': 'red',\n        },\n      });\n\n      lastFEdges[0].style({\n        lineColor: 'green',\n        opacity: 0.2,\n        width: '3px',\n        color: 'black',\n        'border-color': 'black',\n      });\n\n      lastFEdges[1].style({\n        lineColor: 'green',\n        width: '3px',\n        opacity: 0.2,\n        color: 'black',\n        'border-color': 'black',\n      });\n\n      this.errorSate.next({\n        state: true,\n        msg: `Nur die Uebergaenge ${lastFEdges[0].data(\n          'label'\n        )} und ${lastFEdges[1].data('label')} sind definiert.`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DEAException.html":{"url":"classes/DEAException.html","title":"class - DEAException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DEAException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/Exceptions/DEAException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ausgabeString\n                            \n                            \n                                msg\n                            \n                            \n                                reberString\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reberString: string, ausgabeString: string, msg: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/Exceptions/DEAException.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reberString\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ausgabeString\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ausgabeString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/Exceptions/DEAException.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        msg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/Exceptions/DEAException.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reberString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/Exceptions/DEAException.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DEAException extends Error {\n  reberString: string;\n  ausgabeString: string;\n  msg: string;\n\n  constructor(reberString: string, ausgabeString: string, msg: string) {\n    super(msg);\n    this.reberString = reberString;\n    this.ausgabeString = ausgabeString;\n    this.msg = msg;\n\n    console.error(msg);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeaArray.html":{"url":"interfaces/DeaArray.html","title":"interface - DeaArray","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeaArray\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/word-generator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:         DeaLink[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DeaLink[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:         DeaNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DeaNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeaLink {\n    key: number | \"Start\", from: number, to: number, text: string\n}\n\nexport interface DeaNode {\n    id: number, text: string, figure?: string\n}\n\nexport interface DeaArray {\n    nodes: DeaNode[],\n    links: DeaLink[]\n}\n\nexport class WordGenerator {\n\n    generateWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number): string | null {\n        if (index > 1000) {\n            return null;\n        }\n        // If (Teste ob Node Enpunkt ist)\n        if (currentNode.figure === \"Ring\" && Math.random() > 0.6) {\n            return word;\n        }\n        //Alle ausgehenden Links dieses Notes\n        const outgoingLinks = dea.links.filter(link => link.from === currentNode!.id);\n        //Anzahl der Links\n        //Random ein Link auswählen\n        const randomLinkNumber = Math.floor(Math.random() * outgoingLinks.length);\n        const nextlinkElement = outgoingLinks[randomLinkNumber];\n        const nextNodeElement = dea.nodes.find(node => node.id === nextlinkElement!.to);\n\n        const LinkText = outgoingLinks[randomLinkNumber].text.split(\",\");\n\n        //Prüfe ob mehre Zeichen vorhanden sind(,)\n        if (LinkText.length > 1) {\n            const randomLinkText = Math.floor(Math.random() * LinkText.length);\n            //Text des Links in das Wort anhängen\n            word += LinkText[randomLinkText];\n        } else {\n            //Text des Links in das Wort anhängen\n            word += LinkText[0];\n        }\n\n        //Schaue worauf der Link zeigt(to)\n        return this.generateWordRekursive(dea, word, nextNodeElement!, index + 1)\n    }\n\n\n    generateWord(dea: DeaArray): string | null {\n        //Suche den Link mit \"Start\"\n        const word = \"\";\n        const currentStartLink = dea.links.find(link => link.key === \"Start\");\n        //Gehe durch den Array und suche den Node auf den der Start Link zeigt \n        const currentNode = dea.nodes.find(node => node.id === currentStartLink!.to);\n        return this.generateWordRekursive(dea, word, currentNode!, 0)\n    };\n\n    generateWords(dea: DeaArray): string[] {\n        const result: string[] = [];\n        for (let i = 0; i  arr[Math.floor(Math.random() * arr.length)])\n         .join(\"\");\n}             \n    \n\n      generateRandomWords(arr): string[] {\n        const result: string[] = [];\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeaComponent.html":{"url":"components/DeaComponent.html","title":"component - DeaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dea/dea.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dea\n            \n\n            \n                styleUrls\n                ./dea.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dea.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationObject\n                            \n                            \n                                cyConfig\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                endState\n                            \n                            \n                                errorState\n                            \n                            \n                                matRows\n                            \n                            \n                                reberConstruct\n                            \n                            \n                                speed\n                            \n                            \n                                tableMain\n                            \n                            \n                                timer\n                            \n                            \n                                toggleService\n                            \n                            \n                                xState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _resetAnimationObject\n                            \n                            \n                                animateStep\n                            \n                            \n                                evaluateString\n                            \n                            \n                                generateNonReberString\n                            \n                            \n                                generateReberString\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onEnd\n                            \n                            \n                                onNext\n                            \n                            \n                                onPause\n                            \n                            \n                                onPlay\n                            \n                            \n                                onPrevious\n                            \n                            \n                                onStart\n                            \n                            \n                                onStop\n                            \n                            \n                                openDialog\n                            \n                            \n                                renderTableRows\n                            \n                            \n                                startTour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ausgabeString\n                            \n                            \n                                reberString\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, renderer: Renderer2, deaService: DeaService, cytoService: CytoGraphService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dea/dea.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deaService\n                                                  \n                                                        \n                                                                        DeaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cytoService\n                                                  \n                                                        \n                                                                        CytoGraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ausgabeString\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/dea/dea.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reberString\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/dea/dea.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _resetAnimationObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    _resetAnimationObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animateStep\n                        \n                    \n                \n            \n            \n                \nanimateStep()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        evaluateString\n                        \n                    \n                \n            \n            \n                \nevaluateString(str: any, initialAusgabeString?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    initialAusgabeString\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateNonReberString\n                        \n                    \n                \n            \n            \n                \ngenerateNonReberString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateReberString\n                        \n                    \n                \n            \n            \n                \ngenerateReberString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEnd\n                        \n                    \n                \n            \n            \n                \nonEnd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNext\n                        \n                    \n                \n            \n            \n                \nonNext(shouldNotStop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    shouldNotStop\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPause\n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPlay\n                        \n                    \n                \n            \n            \n                \nonPlay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPrevious\n                        \n                    \n                \n            \n            \n                \nonPrevious()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStart\n                        \n                    \n                \n            \n            \n                \nonStart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStop\n                        \n                    \n                \n            \n            \n                \nonStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTableRows\n                        \n                    \n                \n            \n            \n                \nrenderTableRows()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTour\n                        \n                    \n                \n            \n            \n                \nstartTour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : { current: -1 }\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cyConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : cytoscapeConfig\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ELEMENT_DATA\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['q0', 'e', 'q1']\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('stop')\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matRows\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren('matRows', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reberConstruct\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CSPEED\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableMain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('tableMain', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StateMachine\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, OnInit, QueryList, Renderer2, ViewChild, ViewChildren } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../shared/dialog/dialog.component';\nimport * as introJS from 'intro.js';\nimport { introJsConfig } from './intro.config';\nimport { cytoscapeConfig, ELEMENT_DATA } from './table.config';\nimport { StateMachine } from 'xstate';\nimport { BehaviorSubject, interval, Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\nimport { CytoGraphService } from './cyto-graph/cyto-graph.service';\nimport { dialogConfig, CSPEED, SPEED } from '../app.config';\nimport { DeaService } from './dea.service';\n\n@Component({\n  selector: 'app-dea',\n  templateUrl: './dea.component.html',\n  styleUrls: ['./dea.component.scss'],\n})\nexport class DeaComponent implements OnInit {\n  displayedColumns: string[] = ['q0', 'e', 'q1'];\n  dataSource = ELEMENT_DATA;\n  cyConfig = cytoscapeConfig;\n  speed = CSPEED;\n  xState: StateMachine;\n  toggleService!: any;\n  reberConstruct: { id: string; s: string; trans: string }[] = [];\n  animationObject: any = { current: -1 };\n  timer!: Observable;\n  endState = new BehaviorSubject('stop');\n  errorState: any;\n\n  @Input() reberString = '';\n  @Input() ausgabeString = '';\n\n  @ViewChildren('matRows', { read: ElementRef })\n  matRows!: QueryList;\n  @ViewChild('tableMain', { read: ElementRef }) tableMain!: ElementRef;\n\n  constructor(\n    public dialog: MatDialog,\n    private renderer: Renderer2,\n    private deaService: DeaService,\n    private cytoService: CytoGraphService\n  ) {\n    this.xState = this.deaService.createReberMachine();\n    this.cytoService.errorSate.subscribe((v) => {\n      this.errorState = {\n        ...v,\n        hm: `Das Reberwort ${this.reberString.substring(\n          0,\n          this.reberConstruct.length - 1\n        )}${this.reberString.substring(\n          this.reberConstruct.length - 1,\n          this.reberConstruct.length\n        )}${this.reberString.substring(\n          this.reberConstruct.length,\n          this.reberString.length\n        )} ist an der Stelle ${this.reberString.slice(\n          this.reberConstruct.length - 1,\n          this.reberConstruct.length\n        )} nicht definiert. ${v.msg}`,\n      };\n    });\n  }\n\n  ngOnInit(): void {\n    this.toggleService = this.deaService.createDefaultReberFSM();\n  }\n\n  openDialog(): void {\n    this.dialog.open(DialogComponent, dialogConfig);\n  }\n\n  startTour(): void {\n    const intro = introJS();\n    intro.setOptions(introJsConfig).start();\n  }\n\n  generateReberString(): void {\n    const { reberConstruct, reberString } = this.deaService.generateReberString();\n    this.evaluateString(reberString, 'Korrekt');\n    this.reberString = reberString;\n    this.reberConstruct = reberConstruct;\n\n    this.onStart();\n  }\n\n  generateNonReberString(): void {\n    const { reberConstruct, reberString } = this.deaService.generateNonReber();\n\n    this.reberConstruct = reberConstruct;\n    this.evaluateString(reberString, 'Falsch');\n    this.reberString = reberString;\n    this.onStart();\n  }\n\n  animateStep() {\n    this.cytoService.animateStep(this.reberConstruct[this.animationObject.current].trans, SPEED[this.speed]);\n  }\n\n  evaluateString(str: any, initialAusgabeString?: string): void {\n    const { reberString, ausgabeString } = this.deaService.evaluateString(str, initialAusgabeString);\n\n    this._resetAnimationObject();\n    this.reberString = reberString;\n    this.ausgabeString = ausgabeString;\n    this.renderer.addClass(this.tableMain.nativeElement, 'active');\n    this.reberConstruct = this.deaService.generateReberConstruct(reberString);\n  }\n\n  onNext(shouldNotStop = false): void {\n    this.renderer.removeClass(this.tableMain.nativeElement, 'active');\n\n    if (this.animationObject.current  {\n      const id = this.reberConstruct[this.animationObject.current].trans;\n\n      if (id === 'error') {\n        return;\n      }\n\n      if (id === r.nativeElement.id) {\n        this.renderer.addClass(r.nativeElement, 'active');\n      } else {\n        this.renderer.removeClass(r.nativeElement, 'active');\n      }\n    });\n  }\n\n  onPrevious(): void {\n    if (this.animationObject.current  {\n      this.renderer.removeClass(r.nativeElement, 'active');\n      if (this.reberConstruct[this.animationObject.current].trans === r.nativeElement.id) {\n        this.renderer.addClass(r.nativeElement, 'active');\n      } else {\n        this.renderer.removeClass(r.nativeElement, 'active');\n      }\n    });\n    this.animateStep();\n    this.endState.next('stop');\n  }\n\n  onStop(): void {\n    this._resetAnimationObject();\n    this.cytoService.resetAnimation();\n    this.renderer.addClass(this.tableMain.nativeElement, 'active');\n    this.matRows.forEach((r) => {\n      this.renderer.removeClass(r.nativeElement, 'active');\n    });\n    this.endState.next('stop');\n  }\n\n  onPlay(): void {\n    this.timer = interval(5000 / this.speed);\n    const source = this.timer;\n\n    if (this.animationObject.current === this.reberConstruct.length - 1) {\n      this.onStop();\n    }\n\n    this.endState.next('start');\n\n    source.pipe(takeWhile(() => this.endState.value !== 'stop')).subscribe(() => {\n      this.onNext(true);\n      if (this.animationObject.current === this.reberConstruct.length - 1) {\n        this.endState.next('stop');\n      }\n    });\n  }\n\n  onPause(): void {\n    this.endState.next('stop');\n  }\n\n  private _resetAnimationObject() {\n    this.animationObject.current = -1;\n  }\n}\n\n    \n\n    \n        DEA (Reber Grammar)\n\n  \n    \n      Generiere korrektes Reber-Wort\n    \n    \n      Generiere falsches Reber-Wort\n    \n  \n  \n    \n      Tech-Stack\n    \n    Theorie\n    \n      Tour starten!\n    \n  \n\n\n  \n    Eingabe\n    \n      \n        Eingabe der Zeichen\n        \n      \n\n      \n        Ausgabe\n        \n      \n    \n    \n    \n      \n        \n          Tabelle ()\n        \n      \n      \n        Q\n        \n          {{ element.q0 === \"1\" ? \"&#8594; 1\" : element.q0 }}\n        \n      \n      \n        ∑\n        {{ element.e }}\n      \n      \n        Q\n        \n          {{ element.q1 === \"8\" ? \"* 8\" : element.q1 }}\n        \n      \n\n      \n      \n    \n  \n\n  \n    \n      Q = {{ \"{ 1, 2, 3, 4, 5, 6, 7, 8 }\" }}\n      ∑ = {{ \"{ B, T, S, V, X, P, E }\" }}\n      δ = siehe Tabelle\n      q0 = {{ \"{ 1 }\" }}\n      F = {{ \"{ 8 }\" }}\n    \n    \n      \n        first_page\n        chevron_left\n        play_circle_filled\n        stop_circle_filled\n        pause_circle_filled\n        chevron_right\n        last_page\n      \n    \n    \n    \n      \n      \n      speed\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./dea.component.scss\n                \n                .main-content {\n  height: 550px;\n  margin-bottom: 100px;\n  padding: 0 1.5rem;\n}\n\n.left-bar {\n  background-color: blue;\n  height: 100%;\n  width: 20%;\n}\n\n.container {\n  border: 2px solid lightgray;\n  display: flex;\n  flex: 1;\n  flex-wrap: wrap;\n  justify-content: center;\n  position: relative;\n}\n\n.example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.example-full-width {\n  width: 100%;\n}\n\ntable {\n  width: 100%;\n  text-align: center;\n}\n\ntd,\nth {\n  vertical-align: middle;\n}\n\ntr.mat-row {\n  height: 0px !important;\n}\n\ntr:nth-child(even) {\n  background-color: rgba(238, 240, 253, 0.84);\n}\n\n.headline {\n  margin-bottom: 5rem;\n}\n\n.button-group {\n  align-self: flex-end;\n  z-index: 100;\n}\n\n.slider-wrapper {\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.cy-wrapper {\n  display: none;\n  background: whitesmoke;\n  width: 700px;\n  height: 300px;\n  border: 1px solid black;\n}\n\n.overlay {\n  border: 1px solid #3f51b5;\n  position: absolute;\n  left: 2px;\n  top: 2px;\n  padding: 5px;\n}\n\n.action-button {\n  margin-left: 12px;\n}\n\n.green {\n  color: green;\n}\n\n.red {\n  color: red;\n}\n\ntr.active {\n  border: 2px dashed #ff4081;\n\n  &:last-child {\n    border: 3px dashed green;\n  }\n}\nth,\ntd {\n  padding: 0 !important;\n  width: 33%;\n}\n\nth:nth-child(2),\ntd:nth-child(2) {\n  border-right: 1px solid lightgray;\n}\n\ntr.active::after {\n  content: attr(data-after-content);\n  background-color: #ff4081;\n  margin-left: -16px;\n  margin-top: 0.3px;\n  width: 19px;\n  height: 19px;\n  position: absolute;\n  font-size: 12px;\n  color: white;\n}\n\ntr:last-child.active::after {\n  content: attr(data-after-content);\n  background-color: green;\n  margin-left: -16px;\n  margin-top: 0.3px;\n  width: 19px;\n  height: 19px;\n  position: absolute;\n  font-size: 12px;\n  color: white;\n}\n\n.error-box {\n  position: absolute;\n  bottom: -50px;\n  left: 0;\n  border: 1px solid red;\n  background-color: lightgoldenrodyellow;\n  padding: 7px;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'DEA (Reber Grammar)            Generiere korrektes Reber-Wort              Generiere falsches Reber-Wort                  Tech-Stack        Theorie          Tour starten!            Eingabe                  Eingabe der Zeichen                            Ausgabe                                                  Tabelle ()                            Q                  {{ element.q0 === \"1\" ? \"→ 1\" : element.q0 }}                            ∑        {{ element.e }}                    Q                  {{ element.q1 === \"8\" ? \"* 8\" : element.q1 }}                                            Q = {{ \"{ 1, 2, 3, 4, 5, 6, 7, 8 }\" }}      ∑ = {{ \"{ B, T, S, V, X, P, E }\" }}      δ = siehe Tabelle      q0 = {{ \"{ 1 }\" }}      F = {{ \"{ 8 }\" }}                      first_page        chevron_left        play_circle_filled        stop_circle_filled        pause_circle_filled        chevron_right        last_page                                    speed          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeaLink.html":{"url":"interfaces/DeaLink.html","title":"interface - DeaLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeaLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/word-generator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     number | \"Start\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | \"Start\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeaLink {\n    key: number | \"Start\", from: number, to: number, text: string\n}\n\nexport interface DeaNode {\n    id: number, text: string, figure?: string\n}\n\nexport interface DeaArray {\n    nodes: DeaNode[],\n    links: DeaLink[]\n}\n\nexport class WordGenerator {\n\n    generateWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number): string | null {\n        if (index > 1000) {\n            return null;\n        }\n        // If (Teste ob Node Enpunkt ist)\n        if (currentNode.figure === \"Ring\" && Math.random() > 0.6) {\n            return word;\n        }\n        //Alle ausgehenden Links dieses Notes\n        const outgoingLinks = dea.links.filter(link => link.from === currentNode!.id);\n        //Anzahl der Links\n        //Random ein Link auswählen\n        const randomLinkNumber = Math.floor(Math.random() * outgoingLinks.length);\n        const nextlinkElement = outgoingLinks[randomLinkNumber];\n        const nextNodeElement = dea.nodes.find(node => node.id === nextlinkElement!.to);\n\n        const LinkText = outgoingLinks[randomLinkNumber].text.split(\",\");\n\n        //Prüfe ob mehre Zeichen vorhanden sind(,)\n        if (LinkText.length > 1) {\n            const randomLinkText = Math.floor(Math.random() * LinkText.length);\n            //Text des Links in das Wort anhängen\n            word += LinkText[randomLinkText];\n        } else {\n            //Text des Links in das Wort anhängen\n            word += LinkText[0];\n        }\n\n        //Schaue worauf der Link zeigt(to)\n        return this.generateWordRekursive(dea, word, nextNodeElement!, index + 1)\n    }\n\n\n    generateWord(dea: DeaArray): string | null {\n        //Suche den Link mit \"Start\"\n        const word = \"\";\n        const currentStartLink = dea.links.find(link => link.key === \"Start\");\n        //Gehe durch den Array und suche den Node auf den der Start Link zeigt \n        const currentNode = dea.nodes.find(node => node.id === currentStartLink!.to);\n        return this.generateWordRekursive(dea, word, currentNode!, 0)\n    };\n\n    generateWords(dea: DeaArray): string[] {\n        const result: string[] = [];\n        for (let i = 0; i  arr[Math.floor(Math.random() * arr.length)])\n         .join(\"\");\n}             \n    \n\n      generateRandomWords(arr): string[] {\n        const result: string[] = [];\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeaModule.html":{"url":"modules/DeaModule.html","title":"module - DeaModule","body":"\n                   \n\n\n\n\n    Modules\n    DeaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DeaModule\n\n\n\ncluster_DeaModule_providers\n\n\n\ncluster_DeaModule_declarations\n\n\n\n\nCytoGraphComponent\n\nCytoGraphComponent\n\n\n\nDeaModule\n\nDeaModule\n\nDeaModule -->\n\nCytoGraphComponent->DeaModule\n\n\n\n\n\nDeaComponent\n\nDeaComponent\n\nDeaModule -->\n\nDeaComponent->DeaModule\n\n\n\n\n\nDeaService\n\nDeaService\n\nDeaModule -->\n\nDeaService->DeaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dea/dea.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CytoGraphComponent\n                        \n                        \n                            DeaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DeaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DeaComponent } from './dea.component';\nimport { RouterModule } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FormsModule } from '@angular/forms';\nimport { CytoGraphComponent } from './cyto-graph/cyto-graph.component';\nimport { DeaService } from './dea.service';\n\n@NgModule({\n  declarations: [DeaComponent, CytoGraphComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatSliderModule,\n  ],\n  providers: [DeaService],\n})\nexport class DeaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeaNode.html":{"url":"interfaces/DeaNode.html","title":"interface - DeaNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeaNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/word-generator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            figure\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        figure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        figure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeaLink {\n    key: number | \"Start\", from: number, to: number, text: string\n}\n\nexport interface DeaNode {\n    id: number, text: string, figure?: string\n}\n\nexport interface DeaArray {\n    nodes: DeaNode[],\n    links: DeaLink[]\n}\n\nexport class WordGenerator {\n\n    generateWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number): string | null {\n        if (index > 1000) {\n            return null;\n        }\n        // If (Teste ob Node Enpunkt ist)\n        if (currentNode.figure === \"Ring\" && Math.random() > 0.6) {\n            return word;\n        }\n        //Alle ausgehenden Links dieses Notes\n        const outgoingLinks = dea.links.filter(link => link.from === currentNode!.id);\n        //Anzahl der Links\n        //Random ein Link auswählen\n        const randomLinkNumber = Math.floor(Math.random() * outgoingLinks.length);\n        const nextlinkElement = outgoingLinks[randomLinkNumber];\n        const nextNodeElement = dea.nodes.find(node => node.id === nextlinkElement!.to);\n\n        const LinkText = outgoingLinks[randomLinkNumber].text.split(\",\");\n\n        //Prüfe ob mehre Zeichen vorhanden sind(,)\n        if (LinkText.length > 1) {\n            const randomLinkText = Math.floor(Math.random() * LinkText.length);\n            //Text des Links in das Wort anhängen\n            word += LinkText[randomLinkText];\n        } else {\n            //Text des Links in das Wort anhängen\n            word += LinkText[0];\n        }\n\n        //Schaue worauf der Link zeigt(to)\n        return this.generateWordRekursive(dea, word, nextNodeElement!, index + 1)\n    }\n\n\n    generateWord(dea: DeaArray): string | null {\n        //Suche den Link mit \"Start\"\n        const word = \"\";\n        const currentStartLink = dea.links.find(link => link.key === \"Start\");\n        //Gehe durch den Array und suche den Node auf den der Start Link zeigt \n        const currentNode = dea.nodes.find(node => node.id === currentStartLink!.to);\n        return this.generateWordRekursive(dea, word, currentNode!, 0)\n    };\n\n    generateWords(dea: DeaArray): string[] {\n        const result: string[] = [];\n        for (let i = 0; i  arr[Math.floor(Math.random() * arr.length)])\n         .join(\"\");\n}             \n    \n\n      generateRandomWords(arr): string[] {\n        const result: string[] = [];\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeaService.html":{"url":"injectables/DeaService.html","title":"injectable - DeaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dea/dea.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _validateReberString\n                            \n                            \n                                createDefaultReberFSM\n                            \n                            \n                                createReberMachine\n                            \n                            \n                                evaluateString\n                            \n                            \n                                generateNonReber\n                            \n                            \n                                generateReberConstruct\n                            \n                            \n                                generateReberString\n                            \n                            \n                                genFSM\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _validateReberString\n                        \n                    \n                \n            \n            \n                \n                    \n                    _validateReberString(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { ausgabeString: any; reberString: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createDefaultReberFSM\n                        \n                    \n                \n            \n            \n                \ncreateDefaultReberFSM()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createReberMachine\n                        \n                    \n                \n            \n            \n                \ncreateReberMachine()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        evaluateString\n                        \n                    \n                \n            \n            \n                \nevaluateString(str: any, initialAusgabeString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    initialAusgabeString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateNonReber\n                        \n                    \n                \n            \n            \n                \ngenerateNonReber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { reberString: any; reberConstruct: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateReberConstruct\n                        \n                    \n                \n            \n            \n                \ngenerateReberConstruct(reberStringParam: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reberStringParam\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateReberString\n                        \n                    \n                \n            \n            \n                \ngenerateReberString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genFSM\n                        \n                    \n                \n            \n            \n                \ngenFSM(xState: StateMachine, listener: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xState\n                                    \n                                            StateMachine\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createMachine, interpret, StateMachine } from 'xstate';\nimport { StateListener } from 'xstate/lib/interpreter';\nimport { randomGenChar } from '../shared/helpers/helpers';\nimport { DEAException } from '../shared/Exceptions/DEAException';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeaService {\n  genFSM(xState: StateMachine, listener: any) {\n    return interpret(xState).onTransition(listener).start();\n  }\n\n  createReberMachine() {\n    return createMachine({\n      id: 'reber-dea',\n      initial: '1',\n      states: {\n        1: { on: { B: '2', '*': '9' } },\n        2: { on: { T: '3', P: '4', '*': '9' } },\n        3: { on: { S: '3', X: '6', '*': '9' } },\n        4: { on: { T: '4', V: '5', '*': '9' } },\n        5: { on: { P: '6', V: '7', '*': '9' } },\n        6: { on: { X: '4', S: '7', '*': '9' } },\n        7: { on: { E: '8', '*': '9' } },\n        8: { type: 'final' },\n        9: { type: 'final' },\n      },\n    });\n  }\n\n  createDefaultReberFSM() {\n    return this.genFSM(this.createReberMachine(), (state) => {\n      if (state.value === '9') {\n        throw new Error('Transition nicht erlaubt');\n      }\n      if (state.value === '8' && !state.changed) {\n        throw new Error('Ist bereits zuende');\n      }\n    });\n  }\n\n  generateReberString(): { reberString: any; reberConstruct: any } {\n    const newString = [{ id: '2', s: 'B', trans: '1B2' }];\n    const deaService = this.createDefaultReberFSM();\n    const xState = this.createReberMachine();\n    let ah = deaService.send('B');\n\n    while (ah.event !== 8) {\n      const prevEvent = ah.value;\n      const nextNode: any = xState.states[ah.value.toString()].config.on;\n\n      if (nextNode) {\n        const char = randomGenChar(...Object.keys(nextNode).filter((a) => a !== '*'));\n\n        if (char !== undefined) {\n          ah = deaService.send(char);\n          newString.push({\n            id: ah.value.toString(),\n            s: char,\n            trans: prevEvent + char + ah.value.toString(),\n          });\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    return {\n      reberString: newString.reduce((a, n) => a + n.s, ''),\n      reberConstruct: newString,\n    };\n  }\n\n  generateNonReber() {\n    const asw = ['B', 'T', 'P', 'S', 'X', 'V', 'B', 'T', 'P', 'S', 'X', 'E'];\n    let hasError = false;\n    const { reberConstruct } = this.generateReberString();\n\n    const wrongReberString = reberConstruct.map((a: any) => {\n      const rdm = Math.floor(Math.random() * 10);\n      if (a.id === '2') {\n        return a;\n      }\n\n      if (rdm > 3) {\n        hasError = true;\n      }\n\n      if (!hasError && a.id === '8') {\n        return { id: a.id, s: 'P', trans: '1B' };\n      }\n\n      return { id: a.id, s: rdm  a + n.s, ''),\n      reberConstruct,\n    };\n  }\n\n  private _validateReberString(str: string) {\n    const xState = this.createReberMachine();\n    let ausgabeString;\n\n    if (str.slice(-1) === 'E') {\n      ausgabeString = 'Korrekt';\n    }\n\n    const service = this.genFSM(xState, (state) => {\n      if (state.value === '9') {\n        throw new DEAException(str, 'Falsch', 'Transition nicht erlaubt');\n      }\n\n      if ([...str].filter((s) => s === 'E').length > 1) {\n        throw new DEAException(str, 'Falsch', 'Endzustand erreicht');\n      }\n    });\n\n    for (const char of str) {\n      try {\n        service.send(char);\n      } catch (e) {\n        ausgabeString = 'Falsch';\n      }\n    }\n\n    service.stop();\n    return { ausgabeString, reberString: str };\n  }\n\n  evaluateString(str: any, initialAusgabeString: string = ''): { ausgabeString: any; reberString: any } {\n    let ausgabeString;\n    let reberString;\n\n    try {\n      const { reberString: r, ausgabeString: a } = this._validateReberString(str);\n      ausgabeString = a || initialAusgabeString;\n      reberString = r || str;\n    } catch (e: any) {\n      reberString = e.reberString;\n      ausgabeString = e.ausgabeString;\n    }\n    return { ausgabeString, reberString };\n  }\n\n  generateReberConstruct(reberStringParam: string): { id: string; s: string; trans: string; error?: string }[] {\n    const xState = this.createReberMachine();\n    let reberString = reberStringParam.substring(1);\n    let newString: { id: string; s: string; trans: string; error?: string }[];\n\n    if (reberStringParam[0] === 'B') {\n      newString = [{ id: '2', s: 'B', trans: '1B2' }];\n      let isCorrect = true;\n\n      const service = this.genFSM(xState, (state) => {\n        if (state.value === '9') {\n          isCorrect = false;\n          // throw new Error('Transition nicht erlaubt');\n        }\n\n        if (state.value === '8' && !state.changed) {\n          isCorrect = false;\n          // throw new Error('Ist bereits zuende');\n        }\n      });\n\n      let ah = service.send('B');\n\n      for (let char of reberString) {\n        const prevEvent = ah.value;\n        ah = service.send(char);\n\n        if (isCorrect) {\n          newString.push({\n            id: ah.value.toString(),\n            s: char,\n            trans: prevEvent + char + ah.value.toString(),\n          });\n        } else {\n          newString.push({ id: 'error', s: char, trans: 'error', error: 'error' });\n        }\n      }\n      let filterOne = true;\n      return newString.filter((a) => {\n        if (a.id === 'error' && filterOne) {\n          filterOne = false;\n          return true;\n        }\n\n        if (a.id !== 'error') {\n          return true;\n        }\n\n        return false;\n      });\n    }\n    return [{ error: 'B', id: '', s: '', trans: 'error' }];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DemoForceDirectedLayout.html":{"url":"classes/DemoForceDirectedLayout.html","title":"class - DemoForceDirectedLayout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DemoForceDirectedLayout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/puzzle-game.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                makeNetwork\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        makeNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeNetwork(coll)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    coll\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, Component, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport * as go from 'gojs';\nimport { initRing } from \"./shapes/shape\";\nimport { DataSyncService, DiagramComponent } from \"gojs-angular\";\nimport produce from \"immer\";\nimport { game } from \"./level\";\nimport { DeaArray, WordGenerator } from './word-generator';\nimport { WordChecker } from './word-checker';\nimport { Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n\nclass DemoForceDirectedLayout extends go.ForceDirectedLayout {\n  // Override the makeNetwork method to also initialize\n  // ForceDirectedVertex.isFixed from the corresponding Node.isSelected.\n  override makeNetwork(coll) {\n    // call base method for standard behavior\n    const net = super.makeNetwork(coll);\n    net.vertexes.each(vertex => {\n      const node = vertex.node;\n      if (node !== null) (vertex as any).isFixed = node.isSelected;\n    });\n    return net;\n  }\n}\n\n\n@Component({\n  selector: 'app-puzzle-game',\n  templateUrl: './puzzle-game.component.html',\n  styleUrls: ['./puzzle-game.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PuzzleGameComponent implements OnChanges {\n  public diagramDivClassName: string = 'gojs-wrapper';\n  public paletteDivClassName = 'gojs-palette';\n  public game = game;\n  public activeLevel = parseInt(localStorage.getItem('activeLevel')!)  || 0; \n  public highestLevel = parseInt(localStorage.getItem('highestLevel')!) || 0;\n  public score = parseInt(localStorage.getItem('score')!) || 0;\n\n  public task = game[this.activeLevel].task;\n  public observedDiagram: any = null;\n\n\n  public state: any = {\n    diagramNodeData: game[0].nodes,\n    diagramLinkData: game[0].links,\n    diagramModelData: { prop: 'value' },\n    skipsDiagramUpdate: false,\n    paletteNodeData: []\n  };\n\n  @ViewChild('myDiagram', { static: true }) public myDiagramComponent: DiagramComponent | undefined;\n\n  constructor(private cdr: ChangeDetectorRef, public dialog: MatDialog) { }\n\n  \n  openDialog(check, word) {\n    const dialogRef = this.dialog.open(DialogDataExampleDialog, {\n      width: '250px',\n      position:  {\n        bottom: \"200px\",\n        right: \"100\"\n       },\n      data: {\n        winState: check,\n        onNext : this.loadNextLevel.bind(this),\n        word,\n      },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      //this.animal = result;\n    });\n  }\n\n  public ngOnChanges() {\n    // whenever showGrid changes, update the diagram.grid.visible in the child DiagramComponent\n    if (this.myDiagramComponent && this.myDiagramComponent.diagram instanceof go.Diagram) {\n      //console.log(this.myDiagramComponent.diagram)\n    }\n  }\n\n  \n  public ngAfterViewInit() {\n    if (this.observedDiagram) return;\n    this.observedDiagram = this.myDiagramComponent?.diagram;\n    this.cdr.detectChanges(); // IMPORTANT: without this, Angular will throw ExpressionChangedAfterItHasBeenCheckedError (dev mode only)\n\n    const appComp: any = this;\n    // listener for inspector\n    this.myDiagramComponent?.diagram.addDiagramListener('ChangedSelection', function (e) {\n      if (e.diagram.selection.count === 0) {\n        appComp.selectedNodeData = null;\n      }\n      const node = e.diagram.selection.first();\n      appComp.state = produce(appComp.state, draft => {\n        if (node instanceof go.Node) {\n          var idx = draft.diagramNodeData.findIndex(nd => nd.id == node.data.id);\n          var nd = draft.diagramNodeData[idx];\n          draft.selectedNodeData = nd;\n        } else {\n          draft.selectedNodeData = null;\n        }\n      });\n    });\n  } // end ngAfterViewInit\n\n  public initDiagram(): go.Diagram {\n    const $ = go.GraphObject.make;\n    const diagram = $(go.Diagram, {\n      'undoManager.isEnabled': true,\n      \"linkingTool.isUnconnectedLinkValid\": true,\n      \"draggingTool.dragsLink\": true,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"relinkingTool.isUnconnectedLinkValid\": true,\n      \"relinkingTool.portGravity\": 20,\n      layout: new DemoForceDirectedLayout(),\n      model: new go.GraphLinksModel({\n        linkFromPortIdProperty: \"fromPort\",\n        linkToPortIdProperty: \"toPort\",\n        nodeKeyProperty: 'id',\n        linkKeyProperty: 'key'\n      })\n    });\n\n\n\n    // define the Node template\n    diagram.nodeTemplate = $(go.Node, \"Auto\", { zOrder: -5 }, new go.Binding(\"layerName\", \"Background\"), $(go.Shape, \"Circle\", { fill: \"lightgray\" }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.Panel, \"Table\", $(go.RowColumnDefinition, {\n      column: 0, alignment: go.Spot.Left\n    }), $(go.TextBlock, {\n      column: 0,\n      row: 0,\n      columnSpan: 3,\n      editable: true,\n      alignment: go.Spot.Center,\n      font: \"bold 10pt sans-serif\",\n      margin: new go.Margin(4, 2)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()), $(go.Panel, \"Horizontal\", { column: 1, row: 1 }, $(go.Shape, {\n      width: 6,\n      height: 6,\n      portId: \"A\",\n      toLinkable: true,\n      fromLinkable: true,\n      cursor: 'pointer',\n      fromLinkableDuplicates: true,\n      toLinkableDuplicates: true,\n      fromLinkableSelfNode: true,\n      toLinkableSelfNode: true\n    }))));\n\n    diagram.linkTemplate = $(go.Link, { zOrder: 50 }, new go.Binding(\"layerName\", \"Foreground\"), new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 10,\n          background: 'white',\n          editable: true,\n          width: 30,\n          height: 30,\n          alignment: go.Spot.Center,\n          verticalAlignment: go.Spot.Center,\n          textAlign: 'center'\n        }, new go.Binding(\"text\", \"text\").makeTwoWay()));\n\n    return diagram;\n  }\n\n  public diagramModelChange = (changes: go.IncrementalData) => {\n    if (!changes) return;\n    const appComp = this;\n    this.state = produce(this.state, draft => {\n      // set skipsDiagramUpdate: true since GoJS already has this update\n      // this way, we don't log an unneeded transaction in the Diagram's undoManager history\n      draft.skipsDiagramUpdate = true;\n      draft.diagramNodeData = DataSyncService.syncNodeData(changes, draft.diagramNodeData, appComp.observedDiagram.model);\n      draft.diagramLinkData = DataSyncService.syncLinkData(changes, draft.diagramLinkData, appComp.observedDiagram.model);\n      draft.diagramModelData = DataSyncService.syncModelData(changes, draft.diagramModelData);\n      // If one of the modified nodes was the selected node used by the inspector, update the inspector selectedNodeData object\n      const modifiedNodeDatas = changes.modifiedNodeData;\n      if (modifiedNodeDatas && draft.selectedNodeData) {\n        for (let i = 0; i  {\n           draft.skipsDiagramUpdate = true;\n           draft.diagramNodeData = nodes;\n           draft.diagramLinkData = links;\n         }); */\n  };\n\n  public initPalette(): go.Palette {\n    const $ = go.GraphObject.make;\n    const palette = $(go.Palette);\n    initRing();\n\n    palette.padding = new go.Margin(100, 0, 0, 0);\n\n    // define the Node template\n    palette.nodeTemplate = $(go.Node, \"Horizontal\", {\n      height: 120, width: 80, selectionAdorned: false, cursor: 'grab'\n    }, $(go.Shape, \"Circle\", {\n      width: 30, height: 30\n    }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.TextBlock, {\n      margin: 2, font: \"bold 16px sans-serif\"\n    }, new go.Binding(\"text\", \"internal\")), $(go.TextBlock, { margin: 2, font: \" 11px sans-serif\" }, new go.Binding(\"text\", \"key\")),);\n\n    palette.linkTemplate = $(go.Link, \n      {\n      height: 120, selectionAdornmentTemplate: $(go.Adornment, \"Link\", $(go.Shape, {\n        isPanelMain: true, fill: null, stroke: \"deepskyblue\", strokeWidth: 0\n      }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }))\n    },\n     {\n      routing: go.Link.AvoidsNodes, curve: go.Link.JumpOver, corner: 5, toShortLength: 4\n    }, new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 4, background: 'white'\n        }, new go.Binding(\"text\", \"key\"))),\n\n      palette.model = new go.GraphLinksModel([  // specify the contents of the Palette\n        { key: \"Ende\", color: \"white\", internal: \"\", stroke: \"black\", figure: 'Ring' }, \n        {key: \"Knoten\", color: \"white\", internal: \"\", stroke: \"black\"},\n      ], [// the Palette also has a disconnected Link, which the user can drag-and-drop\n        { key: 'Start', points: new go.List().addAll([new go.Point(10, 0), new go.Point(70, 0)]) },\n\n      ]);\n\n    return palette;\n  }\n\n  public reinitModel() {\n\n    let text = \"Bist du dir sicher?!\\nOK or Cancel.\";\n    if (confirm(text) == true) {\n      text = \"You pressed OK!\";\n      if (this.myDiagramComponent) {\n        this.loadDiagram(this.activeLevel);\n      }\n    } else {\n      text = \"You canceled!\";\n    }\n  }\n\n\n  nextDiagram(value: number) {\n    if (this.myDiagramComponent) {\n      localStorage.setItem('activeLevel', value.toString());\n      this.activeLevel = value;\n      this.task = game[value].task\n      this.myDiagramComponent.clear();\n      this.state = produce(this.state, draft => {\n        draft.skipsDiagramUpdate = false;\n        draft.diagramNodeData = game[value].nodes;\n        draft.diagramLinkData = game[value].links as any;\n      });\n    }\n  }\n\n  loadDiagram(value: number) {\n    if(value  {\n          draft.skipsDiagramUpdate = false;\n          draft.diagramNodeData = game[value].nodes;\n          draft.diagramLinkData = game[value].links as any;\n        });\n      }\n    }\n\n  }\n\n  validateDiagram() {\n    const wordGenerator = new WordGenerator();\n    /*const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }*/\n    //console.log(wordGenerator.generateWords(deaObject));\n\n    //console.log(wordGenerator.generateRandomWords([\"1\", \"0\"]));\n\n    //console.log(\"validate data\", this.state);\n  }\n  checkDea() {\n  \n\n    if (this.activeLevel === 0) {\n      this.openDialog(true, \"\");\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n     if(!deaObject.links.find(link => link.key === \"Start\")){\n            alert(\"Bitte füge ein StartLink hinzu\");\n            return;\n       } \n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n    const referenzautomat = game[this.activeLevel].solution;\n\n\n    let isCorrect = true;\n    let word;\n    \n    for (let i = 0; i  this.highestLevel){\n        localStorage.setItem('highestLevel', this.activeLevel.toString());\n        this.highestLevel = this.activeLevel;\n        this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n      }\n      this.nextDiagram(this.activeLevel);\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n\n    const referenzautomat = game[this.activeLevel].solution;\n    for (let i = 0; i  this.highestLevel){\n      localStorage.setItem('highestLevel', this.activeLevel.toString());\n      this.highestLevel = this.activeLevel;\n      this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n    }\n    this.nextDiagram(this.activeLevel, );\n\n  }\n\n  resetGame() {\n\n    if (confirm('Bist du dir sicher das du alle Leveln und deine Stand zurücksetzen möchtest?')) {\n      localStorage.setItem('activeLevel', \"0\");\n      this.activeLevel = 0;\n  \n      localStorage.setItem('highestLevel',\"0\");\n      this.highestLevel = 0;\n  \n     localStorage.setItem('score', \"0\");\n     this.score = 0;\n    } else {\n      \n    }\n\n\n  }\n}\n\nexport interface DialogData {\n  winState: boolean;\n  onNext: () => void;\n  word: {\n    word: string;\n    vergleich:{\n      yourGraph: boolean;\n      referenzGraph: boolean;\n    }  ,index?: number;\n\n\n  };\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n})\nexport class DialogDataExampleDialog {\n  constructor(  public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onNwxtLevelChanged(): void {\n    this.data.onNext();\n    this.dialogRef.close();\n\n  }\n\n\n\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogComponent.html":{"url":"components/DialogComponent.html","title":"component - DialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/dialog/dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog\n            \n\n            \n                styleUrls\n                ./dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/dialog/dialog.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/dialog/dialog.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog/dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog/dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, Optional } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class DialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Tech-Stack\n\n  Diese App ist mit folgenden Tools erstellt worden:\n  \n    Angular\n    Angular Material\n    Bulma\n    Canvas\n    xState\n    Intro.JS\n  \n\n\n  OK\n\n\n    \n\n    \n                \n                    ./dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Tech-Stack  Diese App ist mit folgenden Tools erstellt worden:      Angular    Angular Material    Bulma    Canvas    xState    Intro.JS    OK'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/puzzle-game.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            onNext\n                                        \n                                \n                                \n                                        \n                                            winState\n                                        \n                                \n                                \n                                        \n                                            word\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        onNext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onNext:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        winState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        winState:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        word\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        word:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport * as go from 'gojs';\nimport { initRing } from \"./shapes/shape\";\nimport { DataSyncService, DiagramComponent } from \"gojs-angular\";\nimport produce from \"immer\";\nimport { game } from \"./level\";\nimport { DeaArray, WordGenerator } from './word-generator';\nimport { WordChecker } from './word-checker';\nimport { Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n\nclass DemoForceDirectedLayout extends go.ForceDirectedLayout {\n  // Override the makeNetwork method to also initialize\n  // ForceDirectedVertex.isFixed from the corresponding Node.isSelected.\n  override makeNetwork(coll) {\n    // call base method for standard behavior\n    const net = super.makeNetwork(coll);\n    net.vertexes.each(vertex => {\n      const node = vertex.node;\n      if (node !== null) (vertex as any).isFixed = node.isSelected;\n    });\n    return net;\n  }\n}\n\n\n@Component({\n  selector: 'app-puzzle-game',\n  templateUrl: './puzzle-game.component.html',\n  styleUrls: ['./puzzle-game.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PuzzleGameComponent implements OnChanges {\n  public diagramDivClassName: string = 'gojs-wrapper';\n  public paletteDivClassName = 'gojs-palette';\n  public game = game;\n  public activeLevel = parseInt(localStorage.getItem('activeLevel')!)  || 0; \n  public highestLevel = parseInt(localStorage.getItem('highestLevel')!) || 0;\n  public score = parseInt(localStorage.getItem('score')!) || 0;\n\n  public task = game[this.activeLevel].task;\n  public observedDiagram: any = null;\n\n\n  public state: any = {\n    diagramNodeData: game[0].nodes,\n    diagramLinkData: game[0].links,\n    diagramModelData: { prop: 'value' },\n    skipsDiagramUpdate: false,\n    paletteNodeData: []\n  };\n\n  @ViewChild('myDiagram', { static: true }) public myDiagramComponent: DiagramComponent | undefined;\n\n  constructor(private cdr: ChangeDetectorRef, public dialog: MatDialog) { }\n\n  \n  openDialog(check, word) {\n    const dialogRef = this.dialog.open(DialogDataExampleDialog, {\n      width: '250px',\n      position:  {\n        bottom: \"200px\",\n        right: \"100\"\n       },\n      data: {\n        winState: check,\n        onNext : this.loadNextLevel.bind(this),\n        word,\n      },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      //this.animal = result;\n    });\n  }\n\n  public ngOnChanges() {\n    // whenever showGrid changes, update the diagram.grid.visible in the child DiagramComponent\n    if (this.myDiagramComponent && this.myDiagramComponent.diagram instanceof go.Diagram) {\n      //console.log(this.myDiagramComponent.diagram)\n    }\n  }\n\n  \n  public ngAfterViewInit() {\n    if (this.observedDiagram) return;\n    this.observedDiagram = this.myDiagramComponent?.diagram;\n    this.cdr.detectChanges(); // IMPORTANT: without this, Angular will throw ExpressionChangedAfterItHasBeenCheckedError (dev mode only)\n\n    const appComp: any = this;\n    // listener for inspector\n    this.myDiagramComponent?.diagram.addDiagramListener('ChangedSelection', function (e) {\n      if (e.diagram.selection.count === 0) {\n        appComp.selectedNodeData = null;\n      }\n      const node = e.diagram.selection.first();\n      appComp.state = produce(appComp.state, draft => {\n        if (node instanceof go.Node) {\n          var idx = draft.diagramNodeData.findIndex(nd => nd.id == node.data.id);\n          var nd = draft.diagramNodeData[idx];\n          draft.selectedNodeData = nd;\n        } else {\n          draft.selectedNodeData = null;\n        }\n      });\n    });\n  } // end ngAfterViewInit\n\n  public initDiagram(): go.Diagram {\n    const $ = go.GraphObject.make;\n    const diagram = $(go.Diagram, {\n      'undoManager.isEnabled': true,\n      \"linkingTool.isUnconnectedLinkValid\": true,\n      \"draggingTool.dragsLink\": true,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"relinkingTool.isUnconnectedLinkValid\": true,\n      \"relinkingTool.portGravity\": 20,\n      layout: new DemoForceDirectedLayout(),\n      model: new go.GraphLinksModel({\n        linkFromPortIdProperty: \"fromPort\",\n        linkToPortIdProperty: \"toPort\",\n        nodeKeyProperty: 'id',\n        linkKeyProperty: 'key'\n      })\n    });\n\n\n\n    // define the Node template\n    diagram.nodeTemplate = $(go.Node, \"Auto\", { zOrder: -5 }, new go.Binding(\"layerName\", \"Background\"), $(go.Shape, \"Circle\", { fill: \"lightgray\" }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.Panel, \"Table\", $(go.RowColumnDefinition, {\n      column: 0, alignment: go.Spot.Left\n    }), $(go.TextBlock, {\n      column: 0,\n      row: 0,\n      columnSpan: 3,\n      editable: true,\n      alignment: go.Spot.Center,\n      font: \"bold 10pt sans-serif\",\n      margin: new go.Margin(4, 2)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()), $(go.Panel, \"Horizontal\", { column: 1, row: 1 }, $(go.Shape, {\n      width: 6,\n      height: 6,\n      portId: \"A\",\n      toLinkable: true,\n      fromLinkable: true,\n      cursor: 'pointer',\n      fromLinkableDuplicates: true,\n      toLinkableDuplicates: true,\n      fromLinkableSelfNode: true,\n      toLinkableSelfNode: true\n    }))));\n\n    diagram.linkTemplate = $(go.Link, { zOrder: 50 }, new go.Binding(\"layerName\", \"Foreground\"), new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 10,\n          background: 'white',\n          editable: true,\n          width: 30,\n          height: 30,\n          alignment: go.Spot.Center,\n          verticalAlignment: go.Spot.Center,\n          textAlign: 'center'\n        }, new go.Binding(\"text\", \"text\").makeTwoWay()));\n\n    return diagram;\n  }\n\n  public diagramModelChange = (changes: go.IncrementalData) => {\n    if (!changes) return;\n    const appComp = this;\n    this.state = produce(this.state, draft => {\n      // set skipsDiagramUpdate: true since GoJS already has this update\n      // this way, we don't log an unneeded transaction in the Diagram's undoManager history\n      draft.skipsDiagramUpdate = true;\n      draft.diagramNodeData = DataSyncService.syncNodeData(changes, draft.diagramNodeData, appComp.observedDiagram.model);\n      draft.diagramLinkData = DataSyncService.syncLinkData(changes, draft.diagramLinkData, appComp.observedDiagram.model);\n      draft.diagramModelData = DataSyncService.syncModelData(changes, draft.diagramModelData);\n      // If one of the modified nodes was the selected node used by the inspector, update the inspector selectedNodeData object\n      const modifiedNodeDatas = changes.modifiedNodeData;\n      if (modifiedNodeDatas && draft.selectedNodeData) {\n        for (let i = 0; i  {\n           draft.skipsDiagramUpdate = true;\n           draft.diagramNodeData = nodes;\n           draft.diagramLinkData = links;\n         }); */\n  };\n\n  public initPalette(): go.Palette {\n    const $ = go.GraphObject.make;\n    const palette = $(go.Palette);\n    initRing();\n\n    palette.padding = new go.Margin(100, 0, 0, 0);\n\n    // define the Node template\n    palette.nodeTemplate = $(go.Node, \"Horizontal\", {\n      height: 120, width: 80, selectionAdorned: false, cursor: 'grab'\n    }, $(go.Shape, \"Circle\", {\n      width: 30, height: 30\n    }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.TextBlock, {\n      margin: 2, font: \"bold 16px sans-serif\"\n    }, new go.Binding(\"text\", \"internal\")), $(go.TextBlock, { margin: 2, font: \" 11px sans-serif\" }, new go.Binding(\"text\", \"key\")),);\n\n    palette.linkTemplate = $(go.Link, \n      {\n      height: 120, selectionAdornmentTemplate: $(go.Adornment, \"Link\", $(go.Shape, {\n        isPanelMain: true, fill: null, stroke: \"deepskyblue\", strokeWidth: 0\n      }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }))\n    },\n     {\n      routing: go.Link.AvoidsNodes, curve: go.Link.JumpOver, corner: 5, toShortLength: 4\n    }, new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 4, background: 'white'\n        }, new go.Binding(\"text\", \"key\"))),\n\n      palette.model = new go.GraphLinksModel([  // specify the contents of the Palette\n        { key: \"Ende\", color: \"white\", internal: \"\", stroke: \"black\", figure: 'Ring' }, \n        {key: \"Knoten\", color: \"white\", internal: \"\", stroke: \"black\"},\n      ], [// the Palette also has a disconnected Link, which the user can drag-and-drop\n        { key: 'Start', points: new go.List().addAll([new go.Point(10, 0), new go.Point(70, 0)]) },\n\n      ]);\n\n    return palette;\n  }\n\n  public reinitModel() {\n\n    let text = \"Bist du dir sicher?!\\nOK or Cancel.\";\n    if (confirm(text) == true) {\n      text = \"You pressed OK!\";\n      if (this.myDiagramComponent) {\n        this.loadDiagram(this.activeLevel);\n      }\n    } else {\n      text = \"You canceled!\";\n    }\n  }\n\n\n  nextDiagram(value: number) {\n    if (this.myDiagramComponent) {\n      localStorage.setItem('activeLevel', value.toString());\n      this.activeLevel = value;\n      this.task = game[value].task\n      this.myDiagramComponent.clear();\n      this.state = produce(this.state, draft => {\n        draft.skipsDiagramUpdate = false;\n        draft.diagramNodeData = game[value].nodes;\n        draft.diagramLinkData = game[value].links as any;\n      });\n    }\n  }\n\n  loadDiagram(value: number) {\n    if(value  {\n          draft.skipsDiagramUpdate = false;\n          draft.diagramNodeData = game[value].nodes;\n          draft.diagramLinkData = game[value].links as any;\n        });\n      }\n    }\n\n  }\n\n  validateDiagram() {\n    const wordGenerator = new WordGenerator();\n    /*const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }*/\n    //console.log(wordGenerator.generateWords(deaObject));\n\n    //console.log(wordGenerator.generateRandomWords([\"1\", \"0\"]));\n\n    //console.log(\"validate data\", this.state);\n  }\n  checkDea() {\n  \n\n    if (this.activeLevel === 0) {\n      this.openDialog(true, \"\");\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n     if(!deaObject.links.find(link => link.key === \"Start\")){\n            alert(\"Bitte füge ein StartLink hinzu\");\n            return;\n       } \n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n    const referenzautomat = game[this.activeLevel].solution;\n\n\n    let isCorrect = true;\n    let word;\n    \n    for (let i = 0; i  this.highestLevel){\n        localStorage.setItem('highestLevel', this.activeLevel.toString());\n        this.highestLevel = this.activeLevel;\n        this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n      }\n      this.nextDiagram(this.activeLevel);\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n\n    const referenzautomat = game[this.activeLevel].solution;\n    for (let i = 0; i  this.highestLevel){\n      localStorage.setItem('highestLevel', this.activeLevel.toString());\n      this.highestLevel = this.activeLevel;\n      this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n    }\n    this.nextDiagram(this.activeLevel, );\n\n  }\n\n  resetGame() {\n\n    if (confirm('Bist du dir sicher das du alle Leveln und deine Stand zurücksetzen möchtest?')) {\n      localStorage.setItem('activeLevel', \"0\");\n      this.activeLevel = 0;\n  \n      localStorage.setItem('highestLevel',\"0\");\n      this.highestLevel = 0;\n  \n     localStorage.setItem('score', \"0\");\n     this.score = 0;\n    } else {\n      \n    }\n\n\n  }\n}\n\nexport interface DialogData {\n  winState: boolean;\n  onNext: () => void;\n  word: {\n    word: string;\n    vergleich:{\n      yourGraph: boolean;\n      referenzGraph: boolean;\n    }  ,index?: number;\n\n\n  };\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n})\nexport class DialogDataExampleDialog {\n  constructor(  public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onNwxtLevelChanged(): void {\n    this.data.onNext();\n    this.dialogRef.close();\n\n  }\n\n\n\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogDataExampleDialog.html":{"url":"components/DialogDataExampleDialog.html","title":"component - DialogDataExampleDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogDataExampleDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/puzzle-game/puzzle-game.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dialog-data-example-dialog\n            \n\n\n\n\n            \n                templateUrl\n                dialog-data-example-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                            \n                                onNwxtLevelChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:449\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:453\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNwxtLevelChanged\n                        \n                    \n                \n            \n            \n                \nonNwxtLevelChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:457\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:451\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:450\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport * as go from 'gojs';\nimport { initRing } from \"./shapes/shape\";\nimport { DataSyncService, DiagramComponent } from \"gojs-angular\";\nimport produce from \"immer\";\nimport { game } from \"./level\";\nimport { DeaArray, WordGenerator } from './word-generator';\nimport { WordChecker } from './word-checker';\nimport { Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n\nclass DemoForceDirectedLayout extends go.ForceDirectedLayout {\n  // Override the makeNetwork method to also initialize\n  // ForceDirectedVertex.isFixed from the corresponding Node.isSelected.\n  override makeNetwork(coll) {\n    // call base method for standard behavior\n    const net = super.makeNetwork(coll);\n    net.vertexes.each(vertex => {\n      const node = vertex.node;\n      if (node !== null) (vertex as any).isFixed = node.isSelected;\n    });\n    return net;\n  }\n}\n\n\n@Component({\n  selector: 'app-puzzle-game',\n  templateUrl: './puzzle-game.component.html',\n  styleUrls: ['./puzzle-game.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PuzzleGameComponent implements OnChanges {\n  public diagramDivClassName: string = 'gojs-wrapper';\n  public paletteDivClassName = 'gojs-palette';\n  public game = game;\n  public activeLevel = parseInt(localStorage.getItem('activeLevel')!)  || 0; \n  public highestLevel = parseInt(localStorage.getItem('highestLevel')!) || 0;\n  public score = parseInt(localStorage.getItem('score')!) || 0;\n\n  public task = game[this.activeLevel].task;\n  public observedDiagram: any = null;\n\n\n  public state: any = {\n    diagramNodeData: game[0].nodes,\n    diagramLinkData: game[0].links,\n    diagramModelData: { prop: 'value' },\n    skipsDiagramUpdate: false,\n    paletteNodeData: []\n  };\n\n  @ViewChild('myDiagram', { static: true }) public myDiagramComponent: DiagramComponent | undefined;\n\n  constructor(private cdr: ChangeDetectorRef, public dialog: MatDialog) { }\n\n  \n  openDialog(check, word) {\n    const dialogRef = this.dialog.open(DialogDataExampleDialog, {\n      width: '250px',\n      position:  {\n        bottom: \"200px\",\n        right: \"100\"\n       },\n      data: {\n        winState: check,\n        onNext : this.loadNextLevel.bind(this),\n        word,\n      },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      //this.animal = result;\n    });\n  }\n\n  public ngOnChanges() {\n    // whenever showGrid changes, update the diagram.grid.visible in the child DiagramComponent\n    if (this.myDiagramComponent && this.myDiagramComponent.diagram instanceof go.Diagram) {\n      //console.log(this.myDiagramComponent.diagram)\n    }\n  }\n\n  \n  public ngAfterViewInit() {\n    if (this.observedDiagram) return;\n    this.observedDiagram = this.myDiagramComponent?.diagram;\n    this.cdr.detectChanges(); // IMPORTANT: without this, Angular will throw ExpressionChangedAfterItHasBeenCheckedError (dev mode only)\n\n    const appComp: any = this;\n    // listener for inspector\n    this.myDiagramComponent?.diagram.addDiagramListener('ChangedSelection', function (e) {\n      if (e.diagram.selection.count === 0) {\n        appComp.selectedNodeData = null;\n      }\n      const node = e.diagram.selection.first();\n      appComp.state = produce(appComp.state, draft => {\n        if (node instanceof go.Node) {\n          var idx = draft.diagramNodeData.findIndex(nd => nd.id == node.data.id);\n          var nd = draft.diagramNodeData[idx];\n          draft.selectedNodeData = nd;\n        } else {\n          draft.selectedNodeData = null;\n        }\n      });\n    });\n  } // end ngAfterViewInit\n\n  public initDiagram(): go.Diagram {\n    const $ = go.GraphObject.make;\n    const diagram = $(go.Diagram, {\n      'undoManager.isEnabled': true,\n      \"linkingTool.isUnconnectedLinkValid\": true,\n      \"draggingTool.dragsLink\": true,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"relinkingTool.isUnconnectedLinkValid\": true,\n      \"relinkingTool.portGravity\": 20,\n      layout: new DemoForceDirectedLayout(),\n      model: new go.GraphLinksModel({\n        linkFromPortIdProperty: \"fromPort\",\n        linkToPortIdProperty: \"toPort\",\n        nodeKeyProperty: 'id',\n        linkKeyProperty: 'key'\n      })\n    });\n\n\n\n    // define the Node template\n    diagram.nodeTemplate = $(go.Node, \"Auto\", { zOrder: -5 }, new go.Binding(\"layerName\", \"Background\"), $(go.Shape, \"Circle\", { fill: \"lightgray\" }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.Panel, \"Table\", $(go.RowColumnDefinition, {\n      column: 0, alignment: go.Spot.Left\n    }), $(go.TextBlock, {\n      column: 0,\n      row: 0,\n      columnSpan: 3,\n      editable: true,\n      alignment: go.Spot.Center,\n      font: \"bold 10pt sans-serif\",\n      margin: new go.Margin(4, 2)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()), $(go.Panel, \"Horizontal\", { column: 1, row: 1 }, $(go.Shape, {\n      width: 6,\n      height: 6,\n      portId: \"A\",\n      toLinkable: true,\n      fromLinkable: true,\n      cursor: 'pointer',\n      fromLinkableDuplicates: true,\n      toLinkableDuplicates: true,\n      fromLinkableSelfNode: true,\n      toLinkableSelfNode: true\n    }))));\n\n    diagram.linkTemplate = $(go.Link, { zOrder: 50 }, new go.Binding(\"layerName\", \"Foreground\"), new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 10,\n          background: 'white',\n          editable: true,\n          width: 30,\n          height: 30,\n          alignment: go.Spot.Center,\n          verticalAlignment: go.Spot.Center,\n          textAlign: 'center'\n        }, new go.Binding(\"text\", \"text\").makeTwoWay()));\n\n    return diagram;\n  }\n\n  public diagramModelChange = (changes: go.IncrementalData) => {\n    if (!changes) return;\n    const appComp = this;\n    this.state = produce(this.state, draft => {\n      // set skipsDiagramUpdate: true since GoJS already has this update\n      // this way, we don't log an unneeded transaction in the Diagram's undoManager history\n      draft.skipsDiagramUpdate = true;\n      draft.diagramNodeData = DataSyncService.syncNodeData(changes, draft.diagramNodeData, appComp.observedDiagram.model);\n      draft.diagramLinkData = DataSyncService.syncLinkData(changes, draft.diagramLinkData, appComp.observedDiagram.model);\n      draft.diagramModelData = DataSyncService.syncModelData(changes, draft.diagramModelData);\n      // If one of the modified nodes was the selected node used by the inspector, update the inspector selectedNodeData object\n      const modifiedNodeDatas = changes.modifiedNodeData;\n      if (modifiedNodeDatas && draft.selectedNodeData) {\n        for (let i = 0; i  {\n           draft.skipsDiagramUpdate = true;\n           draft.diagramNodeData = nodes;\n           draft.diagramLinkData = links;\n         }); */\n  };\n\n  public initPalette(): go.Palette {\n    const $ = go.GraphObject.make;\n    const palette = $(go.Palette);\n    initRing();\n\n    palette.padding = new go.Margin(100, 0, 0, 0);\n\n    // define the Node template\n    palette.nodeTemplate = $(go.Node, \"Horizontal\", {\n      height: 120, width: 80, selectionAdorned: false, cursor: 'grab'\n    }, $(go.Shape, \"Circle\", {\n      width: 30, height: 30\n    }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.TextBlock, {\n      margin: 2, font: \"bold 16px sans-serif\"\n    }, new go.Binding(\"text\", \"internal\")), $(go.TextBlock, { margin: 2, font: \" 11px sans-serif\" }, new go.Binding(\"text\", \"key\")),);\n\n    palette.linkTemplate = $(go.Link, \n      {\n      height: 120, selectionAdornmentTemplate: $(go.Adornment, \"Link\", $(go.Shape, {\n        isPanelMain: true, fill: null, stroke: \"deepskyblue\", strokeWidth: 0\n      }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }))\n    },\n     {\n      routing: go.Link.AvoidsNodes, curve: go.Link.JumpOver, corner: 5, toShortLength: 4\n    }, new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 4, background: 'white'\n        }, new go.Binding(\"text\", \"key\"))),\n\n      palette.model = new go.GraphLinksModel([  // specify the contents of the Palette\n        { key: \"Ende\", color: \"white\", internal: \"\", stroke: \"black\", figure: 'Ring' }, \n        {key: \"Knoten\", color: \"white\", internal: \"\", stroke: \"black\"},\n      ], [// the Palette also has a disconnected Link, which the user can drag-and-drop\n        { key: 'Start', points: new go.List().addAll([new go.Point(10, 0), new go.Point(70, 0)]) },\n\n      ]);\n\n    return palette;\n  }\n\n  public reinitModel() {\n\n    let text = \"Bist du dir sicher?!\\nOK or Cancel.\";\n    if (confirm(text) == true) {\n      text = \"You pressed OK!\";\n      if (this.myDiagramComponent) {\n        this.loadDiagram(this.activeLevel);\n      }\n    } else {\n      text = \"You canceled!\";\n    }\n  }\n\n\n  nextDiagram(value: number) {\n    if (this.myDiagramComponent) {\n      localStorage.setItem('activeLevel', value.toString());\n      this.activeLevel = value;\n      this.task = game[value].task\n      this.myDiagramComponent.clear();\n      this.state = produce(this.state, draft => {\n        draft.skipsDiagramUpdate = false;\n        draft.diagramNodeData = game[value].nodes;\n        draft.diagramLinkData = game[value].links as any;\n      });\n    }\n  }\n\n  loadDiagram(value: number) {\n    if(value  {\n          draft.skipsDiagramUpdate = false;\n          draft.diagramNodeData = game[value].nodes;\n          draft.diagramLinkData = game[value].links as any;\n        });\n      }\n    }\n\n  }\n\n  validateDiagram() {\n    const wordGenerator = new WordGenerator();\n    /*const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }*/\n    //console.log(wordGenerator.generateWords(deaObject));\n\n    //console.log(wordGenerator.generateRandomWords([\"1\", \"0\"]));\n\n    //console.log(\"validate data\", this.state);\n  }\n  checkDea() {\n  \n\n    if (this.activeLevel === 0) {\n      this.openDialog(true, \"\");\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n     if(!deaObject.links.find(link => link.key === \"Start\")){\n            alert(\"Bitte füge ein StartLink hinzu\");\n            return;\n       } \n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n    const referenzautomat = game[this.activeLevel].solution;\n\n\n    let isCorrect = true;\n    let word;\n    \n    for (let i = 0; i  this.highestLevel){\n        localStorage.setItem('highestLevel', this.activeLevel.toString());\n        this.highestLevel = this.activeLevel;\n        this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n      }\n      this.nextDiagram(this.activeLevel);\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n\n    const referenzautomat = game[this.activeLevel].solution;\n    for (let i = 0; i  this.highestLevel){\n      localStorage.setItem('highestLevel', this.activeLevel.toString());\n      this.highestLevel = this.activeLevel;\n      this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n    }\n    this.nextDiagram(this.activeLevel, );\n\n  }\n\n  resetGame() {\n\n    if (confirm('Bist du dir sicher das du alle Leveln und deine Stand zurücksetzen möchtest?')) {\n      localStorage.setItem('activeLevel', \"0\");\n      this.activeLevel = 0;\n  \n      localStorage.setItem('highestLevel',\"0\");\n      this.highestLevel = 0;\n  \n     localStorage.setItem('score', \"0\");\n     this.score = 0;\n    } else {\n      \n    }\n\n\n  }\n}\n\nexport interface DialogData {\n  winState: boolean;\n  onNext: () => void;\n  word: {\n    word: string;\n    vergleich:{\n      yourGraph: boolean;\n      referenzGraph: boolean;\n    }  ,index?: number;\n\n\n  };\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n})\nexport class DialogDataExampleDialog {\n  constructor(  public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onNwxtLevelChanged(): void {\n    this.data.onNext();\n    this.dialogRef.close();\n\n  }\n\n\n\n}\n\n\n\n\n    \n\n    \n        Das Ergebnis ist {{data.winState ? 'richtig' : 'falsch'}}\n\n    \n         Das Wort: {{data.word.word}} wird nicht von der Sprache erkannt\n        Dein Graph liefert {{data.word.vergleich.yourGraph}} -->\n        der Referenzgraph liefert {{data.word.vergleich.referenzGraph}} -->\n        Der Fehler ist an der Stelle {{data.word.index! + 1}} im Wort \n    \n\n\n\n    Ok\n\n    nextLevel\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Das Ergebnis ist {{data.winState ? \\'richtig\\' : \\'falsch\\'}}             Das Wort: {{data.word.word}} wird nicht von der Sprache erkannt        Dein Graph liefert {{data.word.vergleich.yourGraph}} -->        der Referenzgraph liefert {{data.word.vergleich.referenzGraph}} -->        Der Fehler ist an der Stelle {{data.word.index! + 1}} im Wort         Ok    nextLevel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogDataExampleDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExampleComponent.html":{"url":"components/ExampleComponent.html","title":"component - ExampleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExampleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/example/example.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-example\n            \n\n            \n                styleUrls\n                ./example.component.css\n            \n\n\n\n            \n                templateUrl\n                ./example.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/example/example.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example/example.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './example.component.html',\n  styleUrls: ['./example.component.css']\n})\nexport class ExampleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        example works!\n\n    \n\n    \n                \n                    ./example.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'example works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExampleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpressionGrammarModel.html":{"url":"classes/ExpressionGrammarModel.html","title":"class - ExpressionGrammarModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpressionGrammarModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/grammar.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            GrammarModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _expression\n                            \n                            \n                                    Private\n                                    Readonly\n                                _rule\n                            \n                            \n                                    Private\n                                _ruleSet\n                            \n                            \n                                    Private\n                                _valid\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getCorrectExpression\n                            \n                            \n                                    Private\n                                _getWrongExpression\n                            \n                            \n                                    Private\n                                _hasElementOfKind\n                            \n                            \n                                    Private\n                                _hasNonTerminalChar\n                            \n                            \n                                    Private\n                                _hasTerminalChar\n                            \n                            \n                                    Private\n                                    Static\n                                _isNegNumber\n                            \n                            \n                                    Private\n                                _setRuleSet\n                            \n                            \n                                    Public\n                                generateCorrectExpression\n                            \n                            \n                                    Public\n                                generateWrongExpression\n                            \n                            \n                                    Public\n                                isExpressionValid\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Expression\n                                \n                                \n                                    Rule\n                                \n                                \n                                    Valid\n                                \n                                \n                                    ruleSet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(exp: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/grammar/grammar.model.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _expression\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _rule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FourTuple\n\n                    \n                \n                \n                    \n                        Default value : {\n    V: [],\n    SIG: [],\n    R: {\n      A: [],\n      O: [],\n      Z: [],\n    },\n    start: '',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _ruleSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuleSetInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _valid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null | string | number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:47\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _getCorrectExpression\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getCorrectExpression()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _getWrongExpression\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getWrongExpression()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _hasElementOfKind\n                        \n                    \n                \n            \n            \n                \n                    \n                    _hasElementOfKind(exp: string, kind: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    kind\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _hasNonTerminalChar\n                        \n                    \n                \n            \n            \n                \n                    \n                    _hasNonTerminalChar(exp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _hasTerminalChar\n                        \n                    \n                \n            \n            \n                \n                    \n                    _hasTerminalChar(exp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        _isNegNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    _isNegNumber(exp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _setRuleSet\n                        \n                    \n                \n            \n            \n                \n                    \n                    _setRuleSet(oldExp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    oldExp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateCorrectExpression\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCorrectExpression()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:276\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateWrongExpression\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateWrongExpression()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isExpressionValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    isExpressionValid(exp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Expression\n                    \n                \n\n                \n                    \n                        getExpression()\n                    \n                \n                            \n                                \n                                    Defined in src/app/grammar/grammar.model.ts:63\n                                \n                            \n\n                \n                    \n                        setExpression(exp: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/grammar/grammar.model.ts:168\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            exp\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        Rule\n                    \n                \n\n                \n                    \n                        getRule()\n                    \n                \n                            \n                                \n                                    Defined in src/app/grammar/grammar.model.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Valid\n                    \n                \n\n                \n                    \n                        getValid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/grammar/grammar.model.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ruleSet\n                    \n                \n\n                \n                    \n                        getruleSet()\n                    \n                \n                            \n                                \n                                    Defined in src/app/grammar/grammar.model.ts:164\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export interface FourTuple {\n  V: string[];\n  SIG: string[];\n  R: {\n    A: string[];\n    O: string[];\n    Z: string[];\n  };\n  start: string;\n}\n\nexport class RuleSetInterface {\n  expIndex: number | null;\n  rule: string;\n  prevExp: string;\n  afterExp: string;\n\n  constructor(props?: RuleSetInterface) {\n    this.expIndex = props?.expIndex || 0;\n    this.rule = props?.rule || '';\n    this.prevExp = props?.prevExp || '';\n    this.afterExp = props?.afterExp || '';\n  }\n}\n\nexport interface GrammarModel {\n  Expression: string;\n  Valid: boolean;\n  Rule: FourTuple;\n  ruleSet: RuleSetInterface[];\n}\n\nexport class ExpressionGrammarModel implements GrammarModel {\n  private _expression: string = '';\n  private _valid: boolean = false;\n  private readonly _rule: FourTuple = {\n    V: [],\n    SIG: [],\n    R: {\n      A: [],\n      O: [],\n      Z: [],\n    },\n    start: '',\n  };\n  private _ruleSet: RuleSetInterface[] = [];\n  public value: null | string | number = null;\n\n  constructor(exp: string) {\n    this.Expression = exp;\n    this._rule = {\n      V: ['A', 'O', 'Z'],\n      SIG: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '*', '-', '/', '(', ')'],\n      R: {\n        A: ['A O A', '( A )', 'Z'],\n        O: ['+', '*', '-', '/'],\n        Z: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n      },\n      start: 'A',\n    };\n  }\n\n  get Expression(): string {\n    return this._expression;\n  }\n\n  get Rule(): FourTuple {\n    return this._rule;\n  }\n\n  get Valid(): boolean {\n    return this._valid;\n  }\n\n  private _setRuleSet(oldExp: string) {\n    let exp1 = oldExp.slice();\n    let exp2 = exp1.replace(/ /g, '');\n    let exp = exp2.split('').join(' ');\n    let rules = [];\n    let hasChanged = true;\n    const { O, Z } = this._rule.R;\n\n    let j = 0;\n    while (exp.length > 0 && j  -1) {\n        const m = exp.indexOf('A O A');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('A O A');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → A O A`;\n\n        rules.push(rule1);\n      }\n\n      if (exp.indexOf('( A )') > -1) {\n        const m = exp.indexOf('( A )');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('( A )');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → ( A )`;\n\n        rules.push(rule1);\n      }\n      j++;\n\n      if (startExp === exp) {\n        hasChanged = false;\n      }\n    }\n\n    if (this.isExpressionValid(oldExp) && this.isExpressionValid(oldExp) !== 0) {\n      this._ruleSet = rules.reverse();\n    } else {\n      this._ruleSet = rules.map((rule: RuleSetInterface) => ({\n        prevExp: rule.afterExp,\n        afterExp: rule.prevExp,\n        expIndex: rule.expIndex,\n        rule: rule.rule.split('').reverse().join('').replace(') A (', '( A )'),\n      }));\n    }\n  }\n\n  get ruleSet() {\n    return this._ruleSet;\n  }\n\n  set Expression(exp: string) {\n    this._expression = exp;\n\n    try {\n      this.value = this.isExpressionValid(exp);\n      this._setRuleSet(exp);\n    } catch {\n      this._setRuleSet(exp);\n      this.value = null;\n      this._expression = exp;\n    }\n  }\n\n  private static _isNegNumber(exp: string): boolean {\n    if (exp.indexOf('-') === 0) {\n      return true;\n    }\n    return !!exp.match(/\\(\\s*-\\s*/gm);\n  }\n\n  public isExpressionValid(exp: string): number {\n    let result;\n\n    const matchDoubleD = exp.match(/[0-9]\\s*[0-9]/gm);\n\n    if (matchDoubleD || ExpressionGrammarModel._isNegNumber(exp)) {\n      this._valid = false;\n    } else {\n      try {\n        result = eval(exp);\n        this.value = Number.parseFloat(result);\n        this._valid = true;\n      } catch {\n        this._valid = false;\n      }\n    }\n\n    return result;\n  }\n\n  private _hasNonTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.V.indexOf(r) >= 0);\n  }\n\n  private _hasTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.SIG.indexOf(r) >= 0);\n  }\n\n  private _hasElementOfKind(exp: string, kind: string[]) {\n    return [...exp].some((r) => kind.indexOf(r) >= 0);\n  }\n\n  private _getCorrectExpression(): string {\n    let exp = this._rule.start;\n\n    while (this._hasNonTerminalChar(exp)) {\n      if (exp.includes('A')) {\n        let r =\n          Math.random() * (500 / exp.length) > 5\n            ? Math.round(Math.random() * (this._rule.R.A.length - 1))\n            : this._rule.R.A.length - 1;\n        let t = this._rule.R.A[r];\n        exp = exp.replace('A', t);\n      }\n\n      if (exp.includes('O')) {\n        let r = Math.round(Math.random() * (this._rule.R.O.length - 1));\n        let t = this._rule.R.O[r];\n        exp = exp.replace('O', t);\n      }\n\n      if (exp.includes('Z')) {\n        let r = Math.round(Math.random() * (this._rule.R.Z.length - 1));\n        let t = this._rule.R.Z[r];\n        exp = exp.replace('Z', t);\n      }\n    }\n\n    return exp;\n  }\n\n  private _getWrongExpression(): string {\n    let correctExp = Array.from(this._getCorrectExpression().replace(/ /g, ''));\n    let indexOfExp = Math.round(Math.random() * (correctExp.length - 1));\n\n    if (this._rule.R.Z.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    } else if (this._rule.R.O.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      }\n    } else if (['(', ')'].includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    }\n\n    return correctExp.join(' ');\n  }\n\n  public generateCorrectExpression(): void {\n    const exp = this._getCorrectExpression();\n    this.Expression = exp;\n  }\n\n  public generateWrongExpression(): void {\n    const exp = this._getWrongExpression();\n    this.Expression = exp;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  DEA by Najima Jaadari \n  \n    \n\n    \n                \n                    ./footer.component.css\n                \n                footer{\n    height: 100px;\n    text-align: center;\n    padding:12px  0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  DEA by Najima Jaadari   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FourTuple.html":{"url":"interfaces/FourTuple.html","title":"interface - FourTuple","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FourTuple\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/grammar.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            R\n                                        \n                                \n                                \n                                        \n                                            SIG\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            V\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        R\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        R:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SIG\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SIG:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        V\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        V:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FourTuple {\n  V: string[];\n  SIG: string[];\n  R: {\n    A: string[];\n    O: string[];\n    Z: string[];\n  };\n  start: string;\n}\n\nexport class RuleSetInterface {\n  expIndex: number | null;\n  rule: string;\n  prevExp: string;\n  afterExp: string;\n\n  constructor(props?: RuleSetInterface) {\n    this.expIndex = props?.expIndex || 0;\n    this.rule = props?.rule || '';\n    this.prevExp = props?.prevExp || '';\n    this.afterExp = props?.afterExp || '';\n  }\n}\n\nexport interface GrammarModel {\n  Expression: string;\n  Valid: boolean;\n  Rule: FourTuple;\n  ruleSet: RuleSetInterface[];\n}\n\nexport class ExpressionGrammarModel implements GrammarModel {\n  private _expression: string = '';\n  private _valid: boolean = false;\n  private readonly _rule: FourTuple = {\n    V: [],\n    SIG: [],\n    R: {\n      A: [],\n      O: [],\n      Z: [],\n    },\n    start: '',\n  };\n  private _ruleSet: RuleSetInterface[] = [];\n  public value: null | string | number = null;\n\n  constructor(exp: string) {\n    this.Expression = exp;\n    this._rule = {\n      V: ['A', 'O', 'Z'],\n      SIG: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '*', '-', '/', '(', ')'],\n      R: {\n        A: ['A O A', '( A )', 'Z'],\n        O: ['+', '*', '-', '/'],\n        Z: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n      },\n      start: 'A',\n    };\n  }\n\n  get Expression(): string {\n    return this._expression;\n  }\n\n  get Rule(): FourTuple {\n    return this._rule;\n  }\n\n  get Valid(): boolean {\n    return this._valid;\n  }\n\n  private _setRuleSet(oldExp: string) {\n    let exp1 = oldExp.slice();\n    let exp2 = exp1.replace(/ /g, '');\n    let exp = exp2.split('').join(' ');\n    let rules = [];\n    let hasChanged = true;\n    const { O, Z } = this._rule.R;\n\n    let j = 0;\n    while (exp.length > 0 && j  -1) {\n        const m = exp.indexOf('A O A');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('A O A');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → A O A`;\n\n        rules.push(rule1);\n      }\n\n      if (exp.indexOf('( A )') > -1) {\n        const m = exp.indexOf('( A )');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('( A )');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → ( A )`;\n\n        rules.push(rule1);\n      }\n      j++;\n\n      if (startExp === exp) {\n        hasChanged = false;\n      }\n    }\n\n    if (this.isExpressionValid(oldExp) && this.isExpressionValid(oldExp) !== 0) {\n      this._ruleSet = rules.reverse();\n    } else {\n      this._ruleSet = rules.map((rule: RuleSetInterface) => ({\n        prevExp: rule.afterExp,\n        afterExp: rule.prevExp,\n        expIndex: rule.expIndex,\n        rule: rule.rule.split('').reverse().join('').replace(') A (', '( A )'),\n      }));\n    }\n  }\n\n  get ruleSet() {\n    return this._ruleSet;\n  }\n\n  set Expression(exp: string) {\n    this._expression = exp;\n\n    try {\n      this.value = this.isExpressionValid(exp);\n      this._setRuleSet(exp);\n    } catch {\n      this._setRuleSet(exp);\n      this.value = null;\n      this._expression = exp;\n    }\n  }\n\n  private static _isNegNumber(exp: string): boolean {\n    if (exp.indexOf('-') === 0) {\n      return true;\n    }\n    return !!exp.match(/\\(\\s*-\\s*/gm);\n  }\n\n  public isExpressionValid(exp: string): number {\n    let result;\n\n    const matchDoubleD = exp.match(/[0-9]\\s*[0-9]/gm);\n\n    if (matchDoubleD || ExpressionGrammarModel._isNegNumber(exp)) {\n      this._valid = false;\n    } else {\n      try {\n        result = eval(exp);\n        this.value = Number.parseFloat(result);\n        this._valid = true;\n      } catch {\n        this._valid = false;\n      }\n    }\n\n    return result;\n  }\n\n  private _hasNonTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.V.indexOf(r) >= 0);\n  }\n\n  private _hasTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.SIG.indexOf(r) >= 0);\n  }\n\n  private _hasElementOfKind(exp: string, kind: string[]) {\n    return [...exp].some((r) => kind.indexOf(r) >= 0);\n  }\n\n  private _getCorrectExpression(): string {\n    let exp = this._rule.start;\n\n    while (this._hasNonTerminalChar(exp)) {\n      if (exp.includes('A')) {\n        let r =\n          Math.random() * (500 / exp.length) > 5\n            ? Math.round(Math.random() * (this._rule.R.A.length - 1))\n            : this._rule.R.A.length - 1;\n        let t = this._rule.R.A[r];\n        exp = exp.replace('A', t);\n      }\n\n      if (exp.includes('O')) {\n        let r = Math.round(Math.random() * (this._rule.R.O.length - 1));\n        let t = this._rule.R.O[r];\n        exp = exp.replace('O', t);\n      }\n\n      if (exp.includes('Z')) {\n        let r = Math.round(Math.random() * (this._rule.R.Z.length - 1));\n        let t = this._rule.R.Z[r];\n        exp = exp.replace('Z', t);\n      }\n    }\n\n    return exp;\n  }\n\n  private _getWrongExpression(): string {\n    let correctExp = Array.from(this._getCorrectExpression().replace(/ /g, ''));\n    let indexOfExp = Math.round(Math.random() * (correctExp.length - 1));\n\n    if (this._rule.R.Z.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    } else if (this._rule.R.O.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      }\n    } else if (['(', ')'].includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    }\n\n    return correctExp.join(' ');\n  }\n\n  public generateCorrectExpression(): void {\n    const exp = this._getCorrectExpression();\n    this.Expression = exp;\n  }\n\n  public generateWrongExpression(): void {\n    const exp = this._getWrongExpression();\n    this.Expression = exp;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GrammarComponent.html":{"url":"components/GrammarComponent.html","title":"component - GrammarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GrammarComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/grammar/grammar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-grammar\n            \n\n            \n                styleUrls\n                ./grammar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./grammar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                cyConfig\n                            \n                            \n                                expressionGrammar\n                            \n                            \n                                listElement\n                            \n                            \n                                mode\n                            \n                            \n                                modes\n                            \n                            \n                                rules\n                            \n                            \n                                speed\n                            \n                            \n                                SPEED\n                            \n                            \n                                state\n                            \n                            \n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateExpression\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                ngOnSpeedChange\n                            \n                            \n                                onBegin\n                            \n                            \n                                onEnd\n                            \n                            \n                                onManualExpressionChange\n                            \n                            \n                                onNext\n                            \n                            \n                                onPause\n                            \n                            \n                                onPlay\n                            \n                            \n                                onPrevious\n                            \n                            \n                                onReset\n                            \n                            \n                                onStop\n                            \n                            \n                                startTour\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(grammarGraphService: GrammarGraphService, grammerService: GrammarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/grammar/grammar.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        grammarGraphService\n                                                  \n                                                        \n                                                                        GrammarGraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grammerService\n                                                  \n                                                        \n                                                                        GrammarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateExpression\n                        \n                    \n                \n            \n            \n                \ngenerateExpression(isCorrect)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    isCorrect\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnSpeedChange\n                        \n                    \n                \n            \n            \n                \nngOnSpeedChange(v: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBegin\n                        \n                    \n                \n            \n            \n                \nonBegin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEnd\n                        \n                    \n                \n            \n            \n                \nonEnd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onManualExpressionChange\n                        \n                    \n                \n            \n            \n                \nonManualExpressionChange(exp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNext\n                        \n                    \n                \n            \n            \n                \nonNext(shouldNotStop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    shouldNotStop\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPause\n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPlay\n                        \n                    \n                \n            \n            \n                \nonPlay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPrevious\n                        \n                    \n                \n            \n            \n                \nonPrevious()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStop\n                        \n                    \n                \n            \n            \n                \nonStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTour\n                        \n                    \n                \n            \n            \n                \nstartTour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Default value : codeSttring\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cyConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expressionGrammar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ExpressionGrammarModel('')\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('listElement')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 'Ableitung'\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ['Ableitung', 'Ableitungsbaum (falls Zeit bleibt)']\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuleSetInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPEED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SPEED\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'stop'\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n    \n        #Hello World\n\n    \n\n    \n        import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { codeSttring } from './utils/helpers';\nimport { ExpressionGrammarModel, RuleSetInterface } from './grammar.model';\nimport { grammarGraphConfig } from './cyto-graph/config';\nimport { SPEED } from '../app.config';\nimport { Observable } from 'rxjs';\nimport * as introJS from 'intro.js';\nimport { GrammarGraphService } from './cyto-graph/grammar-graph.service';\nimport { GrammarService } from './grammar.service';\nimport { grammarAnimation } from './grammar.animation';\nimport { GrammarIntroConfig } from './utils/introJS';\n\n@Component({\n  selector: 'app-grammar',\n  templateUrl: './grammar.component.html',\n  styleUrls: ['./grammar.component.scss'],\n  animations: grammarAnimation,\n})\nexport class GrammarComponent implements OnInit, AfterViewInit {\n  modes: any = ['Ableitung', 'Ableitungsbaum (falls Zeit bleibt)'];\n  mode: any = 'Ableitung';\n  code = codeSttring;\n  expressionGrammar = new ExpressionGrammarModel('');\n  cyConfig: any;\n  state: string = 'stop';\n  SPEED = SPEED;\n  speed = 2;\n  timer!: Observable;\n  rules: RuleSetInterface[] = [];\n\n  @ViewChild('listElement') listElement!: ElementRef;\n\n  constructor(private grammarGraphService: GrammarGraphService, private grammerService: GrammarService) {}\n\n  ngOnInit(): void {\n    this.grammerService.state.subscribe((v) => {\n      this.state = v;\n    });\n  }\n\n  ngAfterViewInit() {\n    this.grammerService.animatedRulesStream.subscribe((v) => {\n      this.rules = v;\n\n      if (this.listElement) {\n        const element = this.listElement.nativeElement;\n        const parent = element.parentNode;\n        const children = element.children;\n        parent.scrollTop = children[children.length - 1].offsetTop - 20;\n      }\n    });\n  }\n\n  ngOnSpeedChange(v: number) {\n    this.grammerService.speed.next(v);\n    this.speed = v;\n  }\n\n  generateExpression(isCorrect = true) {\n    if (isCorrect) {\n      this.expressionGrammar.generateCorrectExpression();\n      this.cyConfig = grammarGraphConfig;\n    } else {\n      this.expressionGrammar.generateWrongExpression();\n    }\n\n    this.grammerService.init(this.expressionGrammar.ruleSet);\n\n    this.onBegin();\n  }\n\n  startTour(): void {\n    const intro = introJS();\n    intro.setOptions(GrammarIntroConfig).start();\n  }\n\n  onNext(shouldNotStop = false): void {\n    this.grammerService.onNext();\n  }\n\n  onPrevious(): void {\n    this.grammerService.onPrevious();\n  }\n\n  onBegin(): void {\n    this.grammerService.onBegin();\n  }\n\n  onEnd(): void {\n    this.grammerService.onEnd();\n  }\n\n  onStop(): void {\n    this.grammerService.onReset();\n  }\n\n  onPlay(): void {\n    if (this.state === 'start') {\n      return;\n    }\n    this.grammerService.onPlay();\n  }\n\n  onReset(): void {\n    this.grammerService.onReset();\n  }\n\n  onPause(): void {\n    this.grammerService.onPause();\n  }\n\n  onManualExpressionChange(exp: string) {\n    this.grammerService.onReset();\n    this.expressionGrammar.Expression = exp;\n    this.grammerService.init(this.expressionGrammar.ruleSet);\n  }\n}\n\n    \n\n    \n        Grammatik (Mathematische Ausdrücke)\n\n  \n    Ausdruck erzeugen:\n    \n      repeat\n      Korrekt\n    \n    \n      repeat\n      Falsch\n    \n  \n  \n    Dokumentation\n    \n      Tour starten!\n    \n  \n\n\n  \n    \n      \n        \n          \n            Manuelle Eingabe des Ausdrucks\n            \n          \n        \n         0\" [ngClass]=\"{correct: expressionGrammar.value || expressionGrammar.value === 0 || expressionGrammar.value === 'infinity' }\" class=\"column is-5 auswertung\">\n          Auswertung:\n          {{(expressionGrammar.value || expressionGrammar.value === 0 || expressionGrammar.value === 'infinity') ? 'check' : 'warning'}} ( = {{(expressionGrammar.value || expressionGrammar.value ===0 || expressionGrammar.value === 'infinity') ? expressionGrammar.value : 'Falsch' }})\n        \n      \n      \n        \n          Animationsmodus:\n          \n            \n              {{sMode}}\n            \n          \n        \n      \n    \n    \n      \n        Grammatik:\n        \n      \n    \n  \n   0}\">\n     0)\" class=\"columns\">\n      \n        Reverser Modus:\n      \n    \n     0\" class=\"columns\">\n      R: {{ rules.length === 0 ? 'Start' : rules[rules.length -1].rule }} ({{ rules.length }}) \n      {{ rules.length === 0 ? expressionGrammar.Valid ? 'A' : expressionGrammar.Expression : rules[rules.length -1].prevExp}}\n    \n    \n      \n        info\n        Noch keine Ausdruck erzeugt. Bitte zuerst ein Ausdruck automatisch generieren (\n    \n      \n        add\n      Korrekt,\n      \n      \n        add\n      Falsch) oder eine manuelle Eingabe tätigen.\n      \n    \n     0 && mode === 'Ableitung'\" class=\"ableitungsliste\">\n      \n          Start\n          Regel\n          Resultat\n        \n           {{ expressionGrammar.value || expressionGrammar.value === 0 || expressionGrammar.value === 'infinity' ? 'A' : expressionGrammar.ruleSet.length === 0 ? 'Keine Regel anwendbar: \" ' +  expressionGrammar.Expression + ' \" kann nicht weiter reduziert werden' : 'Falscher Ausdruck! Reverse Herleitung animieren' }}\n          \n          \n        \n        \n          {{ exp.afterExp }}\n          : {{ exp.rule }}\n          ⇒ {{exp.prevExp }}\n        \n      \n    \n     0 && mode === 'Ableitungsbaum'\" class=\"ableitungsbaum\">\n      \n    \n  \n\n\n  \n    \n      \n        first_page\n        chevron_left\n        play_circle_filled\n        pause_circle_filled\n        chevron_right\n        last_page\n      \n      \n        speed\n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./grammar.component.scss\n                \n                .main-content {\n  height: 480px;\n}\n\n.left-bar {\n  background-color: blue;\n  height: 100%;\n  width: 20%;\n}\n\n.container {\n  border-left: 2px solid lightgray;\n}\n\n.example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.example-full-width {\n  width: 100%;\n}\n\ntable {\n  width: 100%;\n  text-align: center;\n}\n\ntd,\nth {\n  vertical-align: middle;\n}\n\ntr.mat-row {\n  height: 0px !important;\n}\n\ntr:nth-child(even) {\n  background-color: rgba(238, 240, 253, 0.84);\n}\n\n.headline {\n  margin-bottom: 5rem;\n}\n\n.slider-wrapper {\n  display: inline-flex;\n  align-items: center;\n  margin-left: 1rem;\n}\n\n.cy-wrapper {\n  display: none;\n  background: whitesmoke;\n  width: 700px;\n  height: 300px;\n  border: 1px solid black;\n}\n\n.overlay {\n  border: 1px solid #3f51b5;\n  position: absolute;\n  left: 2px;\n  top: 2px;\n  padding: 5px;\n}\n\n.action-button {\n  margin-left: 12px;\n}\n\n.green {\n  color: green;\n}\n\n.red {\n  color: red;\n}\n\ntr.active {\n  border: 2px dashed #ff4081;\n\n  &:last-child {\n    border: 3px dashed green;\n  }\n}\nth,\ntd {\n  padding: 0 !important;\n  width: 33%;\n}\n\nth:nth-child(2),\ntd:nth-child(2) {\n  border-right: 1px solid lightgray;\n}\n\ntr.active::after {\n  content: attr(data-after-content);\n  background-color: #ff4081;\n  margin-left: -16px;\n  margin-top: 0.3px;\n  width: 19px;\n  height: 19px;\n  position: absolute;\n  font-size: 12px;\n  color: white;\n}\n\ntr:last-child.active::after {\n  content: attr(data-after-content);\n  background-color: green;\n  margin-left: -16px;\n  margin-top: 0.3px;\n  width: 19px;\n  height: 19px;\n  position: absolute;\n  font-size: 12px;\n  color: white;\n}\n\n.error-box {\n  position: absolute;\n  bottom: -50px;\n  left: 0;\n  border: 1px solid red;\n  background-color: lightgoldenrodyellow;\n  padding: 7px;\n}\n\n.button-group {\n  display: flex;\n}\n\n.control-wrapper {\n  display: flex;\n  justify-content: center;\n}\n\n.button-icon {\n  transform: scale(0.8);\n}\n\n.success{\n  background-color: #00796B;\n  color: white;\n\n  &.basic {\n    background-color: white;\n    color: #00796B;\n  }\n}\n\n.auswertung {\n  display: inline-flex;\n  align-items: center;\n  color: red;\n}\n\n.ellipsis {\n  white-space: nowrap;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.mat-radio-button {\n  margin-left: 16px;\n}\n\ncode {\n  display: block;\n  white-space: pre-wrap;\n  font-size: 1rem;\n  color: #3f51b5;\n}\n\ncode.code-black {\n  color: black;\n}\n\n.e1 {\n  color: blue;\n}\n\n.no-exp-containter {\n  text-align: center;\n  color: rgba(128, 128, 128, 0.71);\n  display: flex;\n  align-items: center;\n  height: 100%;\n\n  .info-icon {\n    transform: scale(7);\n    margin-bottom: 100px;\n    color: rgba(251, 192, 45, 0.44);\n  }\n\n  h3 {\n    font-size: 26px;\n  }\n}\n\n.exp-int {\n  text-align: center;\n  background-color: rgba(211, 211, 211, 0.22);\n  display: flex;\n  justify-content: center;\n  font-size: 1.2rem;\n  padding: 5px;\n}\n.correct {\n  color: green;\n}\n\n.ableitungsliste {\n  overflow-y: scroll;\n  height: calc(100% - 100px);\n}\n\n.table-container {\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 0 3em 0;\n  padding: 0;\n}\n\n.table-container div:nth-last-child(-n+3) {\n  color: green;\n}\n\n.error .table-container div:nth-last-child(-n+3) {\n  color: red;\n}\n\n.table-container div:nth-child(-n+3) {\n  color: black;\n}\n\n.col {\n  box-sizing: border-box;\n  flex-grow: 1;\n  padding: 0.8em 1.2em;\n  overflow: hidden; // Or flex might break\n  width: 33.33%;\n}\n\n.col-w {\n  box-sizing: border-box;\n  flex-grow: 1;\n  padding: 0.8em 1.2em;\n  overflow: hidden; // Or flex might break\n  width: 106px;\n}\n\n.error-exp-help {\n  transform: translate(11px);\n  border: 2px solid red;\n  background-color: wheat;\n  padding: 8px;\n  max-width: 130px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Grammatik (Mathematische Ausdrücke)      Ausdruck erzeugen:          repeat      Korrekt              repeat      Falsch            Dokumentation          Tour starten!                                                Manuelle Eingabe des Ausdrucks                                       0\" [ngClass]=\"{correct: expressionGrammar.value || expressionGrammar.value === 0 || expressionGrammar.value === \\'infinity\\' }\" class=\"column is-5 auswertung\">          Auswertung:          {{(expressionGrammar.value || expressionGrammar.value === 0 || expressionGrammar.value === \\'infinity\\') ? \\'check\\' : \\'warning\\'}} ( = {{(expressionGrammar.value || expressionGrammar.value ===0 || expressionGrammar.value === \\'infinity\\') ? expressionGrammar.value : \\'Falsch\\' }})                                      Animationsmodus:                                    {{sMode}}                                                          Grammatik:                       0}\">     0)\" class=\"columns\">              Reverser Modus:               0\" class=\"columns\">      R: {{ rules.length === 0 ? \\'Start\\' : rules[rules.length -1].rule }} ({{ rules.length }})       {{ rules.length === 0 ? expressionGrammar.Valid ? \\'A\\' : expressionGrammar.Expression : rules[rules.length -1].prevExp}}                      info        Noch keine Ausdruck erzeugt. Bitte zuerst ein Ausdruck automatisch generieren (                  add      Korrekt,                    add      Falsch) oder eine manuelle Eingabe tätigen.               0 && mode === \\'Ableitung\\'\" class=\"ableitungsliste\">                Start          Regel          Resultat                   {{ expressionGrammar.value || expressionGrammar.value === 0 || expressionGrammar.value === \\'infinity\\' ? \\'A\\' : expressionGrammar.ruleSet.length === 0 ? \\'Keine Regel anwendbar: \" \\' +  expressionGrammar.Expression + \\' \" kann nicht weiter reduziert werden\\' : \\'Falscher Ausdruck! Reverse Herleitung animieren\\' }}                                              {{ exp.afterExp }}          : {{ exp.rule }}          ⇒ {{exp.prevExp }}                       0 && mode === \\'Ableitungsbaum\\'\" class=\"ableitungsbaum\">                                first_page        chevron_left        play_circle_filled        pause_circle_filled        chevron_right        last_page                    speed                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GrammarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GrammarGraphComponent.html":{"url":"components/GrammarGraphComponent.html","title":"component - GrammarGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GrammarGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/grammar/cyto-graph/grammar-graph.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cyto-graph\n            \n\n\n            \n                styles\n                 +  +  +  + \n            \n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseEnter\n                            \n                            \n                                mouseLeave\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                render\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cyConfig\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectNode\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, el: ElementRef, cytoService: GrammarGraphService)\n                    \n                \n                        \n                            \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cytoService\n                                                  \n                                                        \n                                                                        GrammarGraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cyConfig\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { min: 0.1, max: 1.5 }\n                    \n                \n                        \n                            \n                                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:32\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectNode\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:34\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        mouseenter\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseenter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:37\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseleave\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseleave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:42\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mouseEnter\n                        \n                    \n                \n            \n            \n                \nmouseEnter()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseenter', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseLeave\n                        \n                    \n                \n            \n            \n                \nmouseLeave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        render\n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport * as cytoscape from 'cytoscape';\nimport * as dagre from 'cytoscape-dagre';\nimport { disableScroll, enableScroll } from '../../../utils/helpers';\nimport { GrammarGraphService } from './grammar-graph.service';\n\n@Component({\n  selector: 'app-cyto-graph',\n  template: '',\n  styles: [\n    '#cy { height: calc(100% - 70px);\\n' +\n      '        width: 100%;\\n' +\n      '        position: absolute;\\n' +\n      '        left: 0;\\n' +\n      '        top: 0; }',\n  ],\n})\nexport class GrammarGraphComponent implements OnChanges {\n  cy!: any;\n  @Input() public cyConfig: any;\n  @Input() public zoom: { min: number; max: number } = { min: 0.1, max: 1.5 };\n\n  @Output() selectNode: EventEmitter = new EventEmitter();\n\n  @HostListener('mouseenter', ['$event'])\n  mouseEnter(): void {\n    disableScroll();\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  mouseLeave(): void {\n    enableScroll();\n  }\n\n  constructor(private renderer: Renderer2, private el: ElementRef, private cytoService: GrammarGraphService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.render();\n  }\n\n  public render(): void {\n    const cyContianer = this.renderer.selectRootElement('#cy');\n    cytoscape.use(dagre);\n\n    // @ts-ignore\n    this.cy = cytoscape({\n      container: cyContianer,\n      ...this.cyConfig,\n    });\n\n    this.cy.userZoomingEnabled(false);\n    this.cytoService.setInstance(this.cy);\n  }\n}\n\n    \n\n\n    \n             +  +  +  + \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GrammarGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GrammarGraphService.html":{"url":"injectables/GrammarGraphService.html","title":"injectable - GrammarGraphService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GrammarGraphService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/cyto-graph/grammar-graph.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cy\n                            \n                            \n                                errorSate\n                            \n                            \n                                lastNode\n                            \n                            \n                                previousElements\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animateStep\n                            \n                            \n                                    Public\n                                resetAnimation\n                            \n                            \n                                    Public\n                                setInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        animateStep\n                        \n                    \n                \n            \n            \n                \n                    \n                    animateStep(str: string, speed: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    speed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1000\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetAnimation\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAnimation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    setInstance(instance: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorSate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({ state: false, msg: '' })\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastNode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GrammarGraphService {\n  cy: any;\n  previousElements: any = [];\n  lastNode: any = null;\n  errorSate = new BehaviorSubject({ state: false, msg: '' });\n\n  constructor() {}\n\n  public setInstance(instance: any): void {\n    this.cy = instance;\n  }\n\n  public resetAnimation() {\n    for (const c of this.cy.edges().toArray()) {\n      const se = c.connectedNodes().toArray();\n      const node1 = se[0] && se[0];\n      const node2 = se[1] ? se[1] : se[0];\n\n      if (node1.id() !== 'start') {\n        node1.style({\n          lineColor: 'black',\n          color: 'black',\n          'border-width': '1px',\n          'border-color': 'black',\n        });\n      }\n      node2.style({\n        lineColor: 'black',\n        'border-width': '1px',\n        color: 'black',\n        'border-color': 'black',\n      });\n      c.style({\n        lineColor: '#ccc',\n        opacity: 1,\n        width: '3px',\n        color: 'black',\n        'border-color': 'black',\n      });\n    }\n\n    this.errorSate.next({ state: false, msg: '' });\n  }\n\n  public animateStep(str: string, speed = 1000): void {\n    speed = speed / 15;\n\n    if (str !== 'error') {\n      this.errorSate.next({ state: false, msg: '' });\n      for (const c of this.cy.edges().toArray()) {\n        const se = c.connectedNodes().toArray();\n        const node1 = se[0] && se[0];\n        const node2 = se[1] ? se[1] : se[0];\n\n        if (node1.id() + c.data('label') + node2.id() !== str) {\n          setTimeout(() => {\n            if (node1.id() !== 'start') {\n              node1.style({\n                lineColor: 'black',\n                color: 'black',\n                'border-width': '1px',\n                'border-color': 'black',\n              });\n            }\n            node2.style({\n              lineColor: 'black',\n              'border-width': '1px',\n              color: 'black',\n              'border-color': 'black',\n            });\n            c.style({\n              lineColor: '#ccc',\n              opacity: 1,\n              width: '3px',\n              color: 'black',\n              'border-color': 'black',\n            });\n          }, speed / 1.5);\n        }\n\n        setTimeout(() => {\n          if (node1.id() + c.data('label') + node2.id() === str) {\n            node1.animate({\n              style: {\n                lineColor: '#3f51b5',\n                color: '#3f51b5',\n                'border-color': '#3f51b5',\n              },\n            });\n            this.previousElements.push(node1);\n          }\n        }, speed / 3);\n\n        setTimeout(() => {\n          if (node1.id() + c.data('label') + node2.id() === str) {\n            c.animate({\n              style: {\n                lineColor: '#3f51b5',\n                width: '4px',\n                color: '#3f51b5',\n                'border-color': '#3f51b5',\n              },\n            });\n            this.previousElements.push(c);\n          }\n        }, (speed * 2) / 3);\n\n        setTimeout(() => {\n          if (node1.id() + c.data('label') + node2.id() === str) {\n            if (node2.id() === '8') {\n              node2.animate({\n                style: {\n                  lineColor: 'green',\n                  'border-width': '4px',\n                  color: 'green',\n                  'border-color': 'green',\n                },\n              });\n            } else {\n              this.lastNode = node2;\n              node2.animate({\n                style: {\n                  lineColor: '#ff4081',\n                  'border-width': '4px',\n                  color: '#ff4081',\n                  'border-color': '#ff4081',\n                },\n              });\n            }\n            this.previousElements.push(node2);\n          }\n        }, +speed);\n      }\n    } else {\n      const lastFEdges = this.lastNode.connectedEdges(`edge[source = \"${this.lastNode.id()}\"]`).toArray();\n      console.log(lastFEdges);\n\n      this.lastNode.animate({\n        style: {\n          lineColor: 'red',\n          'border-width': '5px',\n          color: 'red',\n          'border-color': 'red',\n        },\n      });\n\n      lastFEdges[0].style({\n        lineColor: 'green',\n        opacity: 0.2,\n        width: '3px',\n        color: 'black',\n        'border-color': 'black',\n      });\n\n      lastFEdges[1].style({\n        lineColor: 'green',\n        width: '3px',\n        opacity: 0.2,\n        color: 'black',\n        'border-color': 'black',\n      });\n\n      this.errorSate.next({\n        state: true,\n        msg: `Nur die Uebergaenge ${lastFEdges[0].data(\n          'label'\n        )} und ${lastFEdges[1].data('label')} sind definiert.`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GrammarModel.html":{"url":"interfaces/GrammarModel.html","title":"interface - GrammarModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GrammarModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/grammar.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Expression\n                                        \n                                \n                                \n                                        \n                                            Rule\n                                        \n                                \n                                \n                                        \n                                            ruleSet\n                                        \n                                \n                                \n                                        \n                                            Valid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Expression\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Expression:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rule\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Rule:         FourTuple\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FourTuple\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleSet:         RuleSetInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RuleSetInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Valid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Valid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FourTuple {\n  V: string[];\n  SIG: string[];\n  R: {\n    A: string[];\n    O: string[];\n    Z: string[];\n  };\n  start: string;\n}\n\nexport class RuleSetInterface {\n  expIndex: number | null;\n  rule: string;\n  prevExp: string;\n  afterExp: string;\n\n  constructor(props?: RuleSetInterface) {\n    this.expIndex = props?.expIndex || 0;\n    this.rule = props?.rule || '';\n    this.prevExp = props?.prevExp || '';\n    this.afterExp = props?.afterExp || '';\n  }\n}\n\nexport interface GrammarModel {\n  Expression: string;\n  Valid: boolean;\n  Rule: FourTuple;\n  ruleSet: RuleSetInterface[];\n}\n\nexport class ExpressionGrammarModel implements GrammarModel {\n  private _expression: string = '';\n  private _valid: boolean = false;\n  private readonly _rule: FourTuple = {\n    V: [],\n    SIG: [],\n    R: {\n      A: [],\n      O: [],\n      Z: [],\n    },\n    start: '',\n  };\n  private _ruleSet: RuleSetInterface[] = [];\n  public value: null | string | number = null;\n\n  constructor(exp: string) {\n    this.Expression = exp;\n    this._rule = {\n      V: ['A', 'O', 'Z'],\n      SIG: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '*', '-', '/', '(', ')'],\n      R: {\n        A: ['A O A', '( A )', 'Z'],\n        O: ['+', '*', '-', '/'],\n        Z: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n      },\n      start: 'A',\n    };\n  }\n\n  get Expression(): string {\n    return this._expression;\n  }\n\n  get Rule(): FourTuple {\n    return this._rule;\n  }\n\n  get Valid(): boolean {\n    return this._valid;\n  }\n\n  private _setRuleSet(oldExp: string) {\n    let exp1 = oldExp.slice();\n    let exp2 = exp1.replace(/ /g, '');\n    let exp = exp2.split('').join(' ');\n    let rules = [];\n    let hasChanged = true;\n    const { O, Z } = this._rule.R;\n\n    let j = 0;\n    while (exp.length > 0 && j  -1) {\n        const m = exp.indexOf('A O A');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('A O A');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → A O A`;\n\n        rules.push(rule1);\n      }\n\n      if (exp.indexOf('( A )') > -1) {\n        const m = exp.indexOf('( A )');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('( A )');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → ( A )`;\n\n        rules.push(rule1);\n      }\n      j++;\n\n      if (startExp === exp) {\n        hasChanged = false;\n      }\n    }\n\n    if (this.isExpressionValid(oldExp) && this.isExpressionValid(oldExp) !== 0) {\n      this._ruleSet = rules.reverse();\n    } else {\n      this._ruleSet = rules.map((rule: RuleSetInterface) => ({\n        prevExp: rule.afterExp,\n        afterExp: rule.prevExp,\n        expIndex: rule.expIndex,\n        rule: rule.rule.split('').reverse().join('').replace(') A (', '( A )'),\n      }));\n    }\n  }\n\n  get ruleSet() {\n    return this._ruleSet;\n  }\n\n  set Expression(exp: string) {\n    this._expression = exp;\n\n    try {\n      this.value = this.isExpressionValid(exp);\n      this._setRuleSet(exp);\n    } catch {\n      this._setRuleSet(exp);\n      this.value = null;\n      this._expression = exp;\n    }\n  }\n\n  private static _isNegNumber(exp: string): boolean {\n    if (exp.indexOf('-') === 0) {\n      return true;\n    }\n    return !!exp.match(/\\(\\s*-\\s*/gm);\n  }\n\n  public isExpressionValid(exp: string): number {\n    let result;\n\n    const matchDoubleD = exp.match(/[0-9]\\s*[0-9]/gm);\n\n    if (matchDoubleD || ExpressionGrammarModel._isNegNumber(exp)) {\n      this._valid = false;\n    } else {\n      try {\n        result = eval(exp);\n        this.value = Number.parseFloat(result);\n        this._valid = true;\n      } catch {\n        this._valid = false;\n      }\n    }\n\n    return result;\n  }\n\n  private _hasNonTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.V.indexOf(r) >= 0);\n  }\n\n  private _hasTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.SIG.indexOf(r) >= 0);\n  }\n\n  private _hasElementOfKind(exp: string, kind: string[]) {\n    return [...exp].some((r) => kind.indexOf(r) >= 0);\n  }\n\n  private _getCorrectExpression(): string {\n    let exp = this._rule.start;\n\n    while (this._hasNonTerminalChar(exp)) {\n      if (exp.includes('A')) {\n        let r =\n          Math.random() * (500 / exp.length) > 5\n            ? Math.round(Math.random() * (this._rule.R.A.length - 1))\n            : this._rule.R.A.length - 1;\n        let t = this._rule.R.A[r];\n        exp = exp.replace('A', t);\n      }\n\n      if (exp.includes('O')) {\n        let r = Math.round(Math.random() * (this._rule.R.O.length - 1));\n        let t = this._rule.R.O[r];\n        exp = exp.replace('O', t);\n      }\n\n      if (exp.includes('Z')) {\n        let r = Math.round(Math.random() * (this._rule.R.Z.length - 1));\n        let t = this._rule.R.Z[r];\n        exp = exp.replace('Z', t);\n      }\n    }\n\n    return exp;\n  }\n\n  private _getWrongExpression(): string {\n    let correctExp = Array.from(this._getCorrectExpression().replace(/ /g, ''));\n    let indexOfExp = Math.round(Math.random() * (correctExp.length - 1));\n\n    if (this._rule.R.Z.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    } else if (this._rule.R.O.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      }\n    } else if (['(', ')'].includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    }\n\n    return correctExp.join(' ');\n  }\n\n  public generateCorrectExpression(): void {\n    const exp = this._getCorrectExpression();\n    this.Expression = exp;\n  }\n\n  public generateWrongExpression(): void {\n    const exp = this._getWrongExpression();\n    this.Expression = exp;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GrammarModule.html":{"url":"modules/GrammarModule.html","title":"module - GrammarModule","body":"\n                   \n\n\n\n\n    Modules\n    GrammarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GrammarModule\n\n\n\ncluster_GrammarModule_providers\n\n\n\ncluster_GrammarModule_declarations\n\n\n\n\nGrammarComponent\n\nGrammarComponent\n\n\n\nGrammarModule\n\nGrammarModule\n\nGrammarModule -->\n\nGrammarComponent->GrammarModule\n\n\n\n\n\nGrammarGraphComponent\n\nGrammarGraphComponent\n\nGrammarModule -->\n\nGrammarGraphComponent->GrammarModule\n\n\n\n\n\nGrammarGraphService\n\nGrammarGraphService\n\nGrammarModule -->\n\nGrammarGraphService->GrammarModule\n\n\n\n\n\nGrammarService\n\nGrammarService\n\nGrammarModule -->\n\nGrammarService->GrammarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/grammar/grammar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GrammarComponent\n                        \n                        \n                            GrammarGraphComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GrammarGraphService\n                        \n                        \n                            GrammarService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GrammarComponent } from './grammar.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FormsModule } from '@angular/forms';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { GrammarGraphComponent } from './cyto-graph/grammar-graph.component';\nimport { GrammarService } from './grammar.service';\nimport { GrammarGraphService } from './cyto-graph/grammar-graph.service';\n\n@NgModule({\n  declarations: [GrammarComponent, GrammarGraphComponent],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRadioModule,\n    FormsModule,\n  ],\n  providers: [GrammarService, GrammarGraphService],\n})\nexport class GrammarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GrammarService.html":{"url":"injectables/GrammarService.html","title":"injectable - GrammarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GrammarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/grammar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animatedRulesStream\n                            \n                            \n                                currentIndex\n                            \n                            \n                                rules\n                            \n                            \n                                speed\n                            \n                            \n                                state\n                            \n                            \n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                onBegin\n                            \n                            \n                                onEnd\n                            \n                            \n                                onNext\n                            \n                            \n                                onPause\n                            \n                            \n                                onPlay\n                            \n                            \n                                onPrevious\n                            \n                            \n                                onReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/grammar/grammar.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit(rules: RuleSetInterface[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rules\n                                    \n                                                RuleSetInterface[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBegin\n                        \n                    \n                \n            \n            \n                \nonBegin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEnd\n                        \n                    \n                \n            \n            \n                \nonEnd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNext\n                        \n                    \n                \n            \n            \n                \nonNext()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPause\n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPlay\n                        \n                    \n                \n            \n            \n                \nonPlay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPrevious\n                        \n                    \n                \n            \n            \n                \nonPrevious()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animatedRulesStream\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuleSetInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speed\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(2)\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('stop')\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { startWith, switchMap, takeWhile, tap } from 'rxjs/operators';\nimport { BehaviorSubject, interval, Observable, Subject } from 'rxjs';\n\nimport { RuleSetInterface } from './grammar.model';\nimport { SPEED } from '../app.config';\n\ntype StateType = 'stop' | 'start';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GrammarService {\n  rules: RuleSetInterface[] = [];\n  animatedRulesStream: Subject = new Subject();\n  timer!: Observable;\n  speed: BehaviorSubject = new BehaviorSubject(2);\n  state: BehaviorSubject = new BehaviorSubject('stop');\n  currentIndex: number = -1;\n\n  constructor() {\n    this.speed.subscribe((v) => {\n      this.timer = interval(SPEED[v]);\n    });\n  }\n\n  init(rules: RuleSetInterface[]) {\n    this.rules = rules;\n  }\n\n  onPlay() {\n    this.speed\n      .pipe(\n        switchMap((val) => interval(SPEED[val])),\n        takeWhile(() => this.state.value === 'start'),\n        tap((n) => {})\n      )\n      .subscribe(() => {\n        setTimeout(() => {\n          if (this.currentIndex === this.rules.length - 1) {\n            this.onEnd();\n          } else {\n            this.onNext();\n          }\n        });\n      });\n    this.state.next('start');\n  }\n\n  onPause() {\n    this.state.next('stop');\n  }\n\n  onReset() {\n    this.currentIndex = -1;\n    this.state.next('stop');\n    this.animatedRulesStream.next([]);\n  }\n\n  onNext() {\n    if (this.currentIndex  -1) {\n      this.currentIndex--;\n    }\n\n    this.animatedRulesStream.next(this.rules.slice(0, this.currentIndex + 1));\n  }\n\n  onBegin() {\n    this.onReset();\n  }\n\n  onEnd() {\n    this.state.next('stop');\n    this.animatedRulesStream.next(this.rules);\n    this.currentIndex = this.rules.length - 1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GrammarState.html":{"url":"interfaces/GrammarState.html","title":"interface - GrammarState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GrammarState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/slice/grammar.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            grammar\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        grammar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grammar:         GrammarModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GrammarModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport * as grammarActions from './grammar.action';\nimport { ExpressionGrammarModel, GrammarModel } from '../grammar.model';\nimport { AppState } from '../../store/rootReducer';\n\nexport interface GrammarState {\n  grammar: GrammarModel;\n}\n\nexport const initialState: GrammarState = {\n  grammar: new ExpressionGrammarModel(''),\n};\n\nconst grammarReducer = createReducer(\n  initialState,\n  on(grammarActions.getGrammar, (state) => ({ ...state, grammar: state.grammar }))\n);\n\nexport const grammarSelector = (state: AppState) => state.grammar;\n\n// export const selectFetaureGrammar = createFeatureSelector('grammar');\n\nexport const selectGrammarSelector = createSelector(grammarSelector, (state: GrammarState) => state.grammar);\n\nexport default function reducer(state: GrammarState | undefined, action: Action) {\n  return grammarReducer(state, action);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/login/login.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/login/login.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              \n                Email\n                \n                  \n                  \n                    \n                  \n                \n              \n              \n                Password\n                \n                  \n                  \n                    \n                  \n                \n              \n              \n                \n                  \n                 Remember me\n                \n              \n              \n                \n                  Login\n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      Email                                                                                                                                                      Password                                                                                                                                                                                         Remember me                                                                              Login                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainPageComponent.html":{"url":"components/MainPageComponent.html","title":"component - MainPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/main-page/main-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-page\n            \n\n            \n                styleUrls\n                ./main-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./main-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/main-page/main-page.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/main-page/main-page.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        main-page works!\n\n    \n\n    \n                \n                    ./main-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'main-page works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyCounterComponent.html":{"url":"components/MyCounterComponent.html","title":"component - MyCounterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyCounterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/my-counter/my-counter.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-counter\n            \n\n\n\n\n            \n                templateUrl\n                ./my-counter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decrement\n                            \n                            \n                                increment\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/my-counter/my-counter.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decrement\n                        \n                    \n                \n            \n            \n                \ndecrement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/my-counter/my-counter.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increment\n                        \n                    \n                \n            \n            \n                \nincrement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/my-counter/my-counter.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/my-counter/my-counter.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        count$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/my-counter/my-counter.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n \n@Component({\n  selector: 'app-my-counter',\n  templateUrl: './my-counter.component.html',\n})\nexport class MyCounterComponent {\n  count$: Observable\n \n  constructor() {\n    // TODO: Connect `this.count$` stream to the current store `count` state\n  }\n \n  increment() {\n    // TODO: Dispatch an increment action\n  }\n \n  decrement() {\n    // TODO: Dispatch a decrement action\n  }\n \n  reset() {\n    // TODO: Dispatch a reset action\n  }\n}\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyCounterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/navigation/navigation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/navigation/navigation.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/navigation/navigation.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        count$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/navigation/navigation.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\ninterface User{\n  id:string;\n  username:string;\n  firstName:string;\n  lastName:string;\n  email: string\n}\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n  count$: Observable;\n\n  constructor(private store: Store) {\n    this.count$ = this.store.select('count');\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n      \n      \n    \n  \n\n  \n    \n       Home \n\n       Documentation \n    \n\n    \n      \n        \n           {{ (count$ | async)!.username }}\n\n          \n             View Profile \n             Edit-Profile \n            \n            Logout\n            \n          \n        \n\n\n      \n    \n    \n      \n        Log in\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navigation.component.css\n                \n                #navbarSupportedContent {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n}\n\n.navbar {\n    padding: 0 1.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         Home        Documentation                                  {{ (count$ | async)!.username }}                       View Profile              Edit-Profile                         Logout                                                          Log in            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        count$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\ninterface User{\n  id:string;\n  username:string;\n  firstName:string;\n  lastName:string;\n  email: string\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  count$: Observable;\n\n  constructor(private store: Store) {\n    this.count$ = this.store.select('count');\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Username\n    \n      \n    \n  \n\n  \n    Vorname\n    \n      \n    \n  \n\n  \n    Name\n    \n      \n    \n  \n\n  \n    Email\n    \n      \n    \n  \n\n  \n    Edit-Profile\n\n\n    \n\n    \n                \n                    ./profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Username                      Vorname                      Name                      Email                      Edit-Profile'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PuzzleComponent.html":{"url":"components/PuzzleComponent.html","title":"component - PuzzleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PuzzleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/puzzle/puzzle.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-puzzle\n            \n\n            \n                styleUrls\n                ./puzzle.component.css\n            \n\n\n\n            \n                templateUrl\n                ./puzzle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle/puzzle.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport * as cytoscape from 'cytoscape';\nimport * as dagre from 'cytoscape-dagre';\nimport compoundDragAndDrop from 'cytoscape-compound-drag-and-drop';\n\n@Component({\n  selector: 'app-puzzle',\n  templateUrl: './puzzle.component.html',\n  styleUrls: ['./puzzle.component.css']\n})\nexport class PuzzleComponent implements OnInit {\n  ngOnInit(): void {\n    cytoscape.use( compoundDragAndDrop );\n    \n    const options = {\n      grabbedNode: node => true, // filter function to specify which nodes are valid to grab and drop into other nodes\n      dropTarget: (dropTarget, grabbedNode) => dropTarget.id === \"a\", // filter function to specify which parent nodes are valid drop targets\n      dropSibling: (dropSibling, grabbedNode) => true, // filter function to specify which orphan nodes are valid drop siblings\n      newParentNode: (grabbedNode, dropSibling) => ({}), // specifies element json for parent nodes added by dropping an orphan node on another orphan (a drop sibling). You can chose to return the dropSibling in which case it becomes the parent node and will be preserved after all its children are removed.\n      boundingBoxOptions: { // same as https://js.cytoscape.org/#eles.boundingBox, used when calculating if one node is dragged over another\n        includeOverlays: false,\n        includeLabels: true\n      },\n      overThreshold: 10, // make dragging over a drop target easier by expanding the hit area by this amount on all sides\n      outThreshold: 10 // make dragging out of a drop target a bit harder by expanding the hit area by this amount on all sides\n    };\n\n    const cy = cytoscape({\n      container: document.getElementById('cy'), // container to render in\n    \n      elements: [ // list of graph elements to start with\n        { // node a\n          data: { id: 'a' }\n        },\n        { // node b\n          data: { id: 'b' }\n        },\n        { // edge ab\n          data: { id: 'ab', source: 'a', target: 'b' }\n        }\n      ],\n    \n      style: [ // the stylesheet for the graph\n        {\n          selector: 'node',\n          style: {\n            'background-color': '#666',\n            'label': 'data(id)'\n          }\n        },\n    \n        {\n          selector: 'edge',\n          style: {\n            'width': 3,\n            'line-color': '#ccc',\n            'target-arrow-color': '#ccc',\n            'target-arrow-shape': 'triangle',\n            'curve-style': 'bezier'\n          }\n        }\n      ],\n    \n      layout: {\n        name: 'grid',\n        rows: 1\n      }\n    \n    });\n    const cdnd = (cy as any).compoundDragAndDrop(options);\n\n  }\n\n\n \n\n}\n\n    \n\n    \n        \n  \n    grammatik is-centered\n    \n  \n  \n    1\n    \n      Hint\n      Weiter\n    \n  \n\n\n    \n\n    \n                \n                    ./puzzle.component.css\n                \n                .eins{\n    background-color: lightpink;\n        display: flex;\n        justify-content: space-between;\n        flex-direction: column;\n\n}\n.zwei{\n    background-color: lightslategrey;\n}\n\n.columns {\n    height: 700px;\n    margin-bottom: 80px;\n  }\n\n  .zwei{\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n  }\n\n  .center{\n    margin: auto;\n  }\n\n#cy{\n    height: 1200px;\n    width: 1200px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      grammatik is-centered            1          Hint      Weiter      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PuzzleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PuzzleGameComponent.html":{"url":"components/PuzzleGameComponent.html","title":"component - PuzzleGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PuzzleGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/puzzle-game/puzzle-game.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-puzzle-game\n            \n\n            \n                styleUrls\n                ./puzzle-game.component.css\n            \n\n\n\n            \n                templateUrl\n                ./puzzle-game.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeLevel\n                            \n                            \n                                    Public\n                                diagramDivClassName\n                            \n                            \n                                    Public\n                                diagramModelChange\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                game\n                            \n                            \n                                    Public\n                                highestLevel\n                            \n                            \n                                    Public\n                                myDiagramComponent\n                            \n                            \n                                    Public\n                                observedDiagram\n                            \n                            \n                                    Public\n                                paletteDivClassName\n                            \n                            \n                                    Public\n                                score\n                            \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkDea\n                            \n                            \n                                    Public\n                                initDiagram\n                            \n                            \n                                    Public\n                                initPalette\n                            \n                            \n                                loadDiagram\n                            \n                            \n                                loadNextLevel\n                            \n                            \n                                nextDiagram\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                openDialog\n                            \n                            \n                                    Public\n                                reinitModel\n                            \n                            \n                                resetGame\n                            \n                            \n                                validateDiagram\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkDea\n                        \n                    \n                \n            \n            \n                \ncheckDea()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:317\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initDiagram\n                        \n                    \n                \n            \n            \n                \n                    \n                    initDiagram()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     go.Diagram\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initPalette\n                        \n                    \n                \n            \n            \n                \n                    \n                    initPalette()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     go.Palette\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDiagram\n                        \n                    \n                \n            \n            \n                \nloadDiagram(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:288\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadNextLevel\n                        \n                    \n                \n            \n            \n                \nloadNextLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:365\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextDiagram\n                        \n                    \n                \n            \n            \n                \nnextDiagram(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog(check, word)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    check\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    word\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reinitModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    reinitModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:260\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetGame\n                        \n                    \n                \n            \n            \n                \nresetGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:412\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateDiagram\n                        \n                    \n                \n            \n            \n                \nvalidateDiagram()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : parseInt(localStorage.getItem('activeLevel')!)  || 0\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        diagramDivClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'gojs-wrapper'\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        diagramModelChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:171\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Default value : game\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        highestLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : parseInt(localStorage.getItem('highestLevel')!) || 0\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        myDiagramComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DiagramComponent | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('myDiagram', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        observedDiagram\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        paletteDivClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'gojs-palette'\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Default value : parseInt(localStorage.getItem('score')!) || 0\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    diagramNodeData: game[0].nodes,\n    diagramLinkData: game[0].links,\n    diagramModelData: { prop: 'value' },\n    skipsDiagramUpdate: false,\n    paletteNodeData: []\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Default value : game[this.activeLevel].task\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport * as go from 'gojs';\nimport { initRing } from \"./shapes/shape\";\nimport { DataSyncService, DiagramComponent } from \"gojs-angular\";\nimport produce from \"immer\";\nimport { game } from \"./level\";\nimport { DeaArray, WordGenerator } from './word-generator';\nimport { WordChecker } from './word-checker';\nimport { Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n\nclass DemoForceDirectedLayout extends go.ForceDirectedLayout {\n  // Override the makeNetwork method to also initialize\n  // ForceDirectedVertex.isFixed from the corresponding Node.isSelected.\n  override makeNetwork(coll) {\n    // call base method for standard behavior\n    const net = super.makeNetwork(coll);\n    net.vertexes.each(vertex => {\n      const node = vertex.node;\n      if (node !== null) (vertex as any).isFixed = node.isSelected;\n    });\n    return net;\n  }\n}\n\n\n@Component({\n  selector: 'app-puzzle-game',\n  templateUrl: './puzzle-game.component.html',\n  styleUrls: ['./puzzle-game.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PuzzleGameComponent implements OnChanges {\n  public diagramDivClassName: string = 'gojs-wrapper';\n  public paletteDivClassName = 'gojs-palette';\n  public game = game;\n  public activeLevel = parseInt(localStorage.getItem('activeLevel')!)  || 0; \n  public highestLevel = parseInt(localStorage.getItem('highestLevel')!) || 0;\n  public score = parseInt(localStorage.getItem('score')!) || 0;\n\n  public task = game[this.activeLevel].task;\n  public observedDiagram: any = null;\n\n\n  public state: any = {\n    diagramNodeData: game[0].nodes,\n    diagramLinkData: game[0].links,\n    diagramModelData: { prop: 'value' },\n    skipsDiagramUpdate: false,\n    paletteNodeData: []\n  };\n\n  @ViewChild('myDiagram', { static: true }) public myDiagramComponent: DiagramComponent | undefined;\n\n  constructor(private cdr: ChangeDetectorRef, public dialog: MatDialog) { }\n\n  \n  openDialog(check, word) {\n    const dialogRef = this.dialog.open(DialogDataExampleDialog, {\n      width: '250px',\n      position:  {\n        bottom: \"200px\",\n        right: \"100\"\n       },\n      data: {\n        winState: check,\n        onNext : this.loadNextLevel.bind(this),\n        word,\n      },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      //this.animal = result;\n    });\n  }\n\n  public ngOnChanges() {\n    // whenever showGrid changes, update the diagram.grid.visible in the child DiagramComponent\n    if (this.myDiagramComponent && this.myDiagramComponent.diagram instanceof go.Diagram) {\n      //console.log(this.myDiagramComponent.diagram)\n    }\n  }\n\n  \n  public ngAfterViewInit() {\n    if (this.observedDiagram) return;\n    this.observedDiagram = this.myDiagramComponent?.diagram;\n    this.cdr.detectChanges(); // IMPORTANT: without this, Angular will throw ExpressionChangedAfterItHasBeenCheckedError (dev mode only)\n\n    const appComp: any = this;\n    // listener for inspector\n    this.myDiagramComponent?.diagram.addDiagramListener('ChangedSelection', function (e) {\n      if (e.diagram.selection.count === 0) {\n        appComp.selectedNodeData = null;\n      }\n      const node = e.diagram.selection.first();\n      appComp.state = produce(appComp.state, draft => {\n        if (node instanceof go.Node) {\n          var idx = draft.diagramNodeData.findIndex(nd => nd.id == node.data.id);\n          var nd = draft.diagramNodeData[idx];\n          draft.selectedNodeData = nd;\n        } else {\n          draft.selectedNodeData = null;\n        }\n      });\n    });\n  } // end ngAfterViewInit\n\n  public initDiagram(): go.Diagram {\n    const $ = go.GraphObject.make;\n    const diagram = $(go.Diagram, {\n      'undoManager.isEnabled': true,\n      \"linkingTool.isUnconnectedLinkValid\": true,\n      \"draggingTool.dragsLink\": true,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"relinkingTool.isUnconnectedLinkValid\": true,\n      \"relinkingTool.portGravity\": 20,\n      layout: new DemoForceDirectedLayout(),\n      model: new go.GraphLinksModel({\n        linkFromPortIdProperty: \"fromPort\",\n        linkToPortIdProperty: \"toPort\",\n        nodeKeyProperty: 'id',\n        linkKeyProperty: 'key'\n      })\n    });\n\n\n\n    // define the Node template\n    diagram.nodeTemplate = $(go.Node, \"Auto\", { zOrder: -5 }, new go.Binding(\"layerName\", \"Background\"), $(go.Shape, \"Circle\", { fill: \"lightgray\" }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.Panel, \"Table\", $(go.RowColumnDefinition, {\n      column: 0, alignment: go.Spot.Left\n    }), $(go.TextBlock, {\n      column: 0,\n      row: 0,\n      columnSpan: 3,\n      editable: true,\n      alignment: go.Spot.Center,\n      font: \"bold 10pt sans-serif\",\n      margin: new go.Margin(4, 2)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()), $(go.Panel, \"Horizontal\", { column: 1, row: 1 }, $(go.Shape, {\n      width: 6,\n      height: 6,\n      portId: \"A\",\n      toLinkable: true,\n      fromLinkable: true,\n      cursor: 'pointer',\n      fromLinkableDuplicates: true,\n      toLinkableDuplicates: true,\n      fromLinkableSelfNode: true,\n      toLinkableSelfNode: true\n    }))));\n\n    diagram.linkTemplate = $(go.Link, { zOrder: 50 }, new go.Binding(\"layerName\", \"Foreground\"), new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 10,\n          background: 'white',\n          editable: true,\n          width: 30,\n          height: 30,\n          alignment: go.Spot.Center,\n          verticalAlignment: go.Spot.Center,\n          textAlign: 'center'\n        }, new go.Binding(\"text\", \"text\").makeTwoWay()));\n\n    return diagram;\n  }\n\n  public diagramModelChange = (changes: go.IncrementalData) => {\n    if (!changes) return;\n    const appComp = this;\n    this.state = produce(this.state, draft => {\n      // set skipsDiagramUpdate: true since GoJS already has this update\n      // this way, we don't log an unneeded transaction in the Diagram's undoManager history\n      draft.skipsDiagramUpdate = true;\n      draft.diagramNodeData = DataSyncService.syncNodeData(changes, draft.diagramNodeData, appComp.observedDiagram.model);\n      draft.diagramLinkData = DataSyncService.syncLinkData(changes, draft.diagramLinkData, appComp.observedDiagram.model);\n      draft.diagramModelData = DataSyncService.syncModelData(changes, draft.diagramModelData);\n      // If one of the modified nodes was the selected node used by the inspector, update the inspector selectedNodeData object\n      const modifiedNodeDatas = changes.modifiedNodeData;\n      if (modifiedNodeDatas && draft.selectedNodeData) {\n        for (let i = 0; i  {\n           draft.skipsDiagramUpdate = true;\n           draft.diagramNodeData = nodes;\n           draft.diagramLinkData = links;\n         }); */\n  };\n\n  public initPalette(): go.Palette {\n    const $ = go.GraphObject.make;\n    const palette = $(go.Palette);\n    initRing();\n\n    palette.padding = new go.Margin(100, 0, 0, 0);\n\n    // define the Node template\n    palette.nodeTemplate = $(go.Node, \"Horizontal\", {\n      height: 120, width: 80, selectionAdorned: false, cursor: 'grab'\n    }, $(go.Shape, \"Circle\", {\n      width: 30, height: 30\n    }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.TextBlock, {\n      margin: 2, font: \"bold 16px sans-serif\"\n    }, new go.Binding(\"text\", \"internal\")), $(go.TextBlock, { margin: 2, font: \" 11px sans-serif\" }, new go.Binding(\"text\", \"key\")),);\n\n    palette.linkTemplate = $(go.Link, \n      {\n      height: 120, selectionAdornmentTemplate: $(go.Adornment, \"Link\", $(go.Shape, {\n        isPanelMain: true, fill: null, stroke: \"deepskyblue\", strokeWidth: 0\n      }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }))\n    },\n     {\n      routing: go.Link.AvoidsNodes, curve: go.Link.JumpOver, corner: 5, toShortLength: 4\n    }, new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 4, background: 'white'\n        }, new go.Binding(\"text\", \"key\"))),\n\n      palette.model = new go.GraphLinksModel([  // specify the contents of the Palette\n        { key: \"Ende\", color: \"white\", internal: \"\", stroke: \"black\", figure: 'Ring' }, \n        {key: \"Knoten\", color: \"white\", internal: \"\", stroke: \"black\"},\n      ], [// the Palette also has a disconnected Link, which the user can drag-and-drop\n        { key: 'Start', points: new go.List().addAll([new go.Point(10, 0), new go.Point(70, 0)]) },\n\n      ]);\n\n    return palette;\n  }\n\n  public reinitModel() {\n\n    let text = \"Bist du dir sicher?!\\nOK or Cancel.\";\n    if (confirm(text) == true) {\n      text = \"You pressed OK!\";\n      if (this.myDiagramComponent) {\n        this.loadDiagram(this.activeLevel);\n      }\n    } else {\n      text = \"You canceled!\";\n    }\n  }\n\n\n  nextDiagram(value: number) {\n    if (this.myDiagramComponent) {\n      localStorage.setItem('activeLevel', value.toString());\n      this.activeLevel = value;\n      this.task = game[value].task\n      this.myDiagramComponent.clear();\n      this.state = produce(this.state, draft => {\n        draft.skipsDiagramUpdate = false;\n        draft.diagramNodeData = game[value].nodes;\n        draft.diagramLinkData = game[value].links as any;\n      });\n    }\n  }\n\n  loadDiagram(value: number) {\n    if(value  {\n          draft.skipsDiagramUpdate = false;\n          draft.diagramNodeData = game[value].nodes;\n          draft.diagramLinkData = game[value].links as any;\n        });\n      }\n    }\n\n  }\n\n  validateDiagram() {\n    const wordGenerator = new WordGenerator();\n    /*const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }*/\n    //console.log(wordGenerator.generateWords(deaObject));\n\n    //console.log(wordGenerator.generateRandomWords([\"1\", \"0\"]));\n\n    //console.log(\"validate data\", this.state);\n  }\n  checkDea() {\n  \n\n    if (this.activeLevel === 0) {\n      this.openDialog(true, \"\");\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n     if(!deaObject.links.find(link => link.key === \"Start\")){\n            alert(\"Bitte füge ein StartLink hinzu\");\n            return;\n       } \n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n    const referenzautomat = game[this.activeLevel].solution;\n\n\n    let isCorrect = true;\n    let word;\n    \n    for (let i = 0; i  this.highestLevel){\n        localStorage.setItem('highestLevel', this.activeLevel.toString());\n        this.highestLevel = this.activeLevel;\n        this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n      }\n      this.nextDiagram(this.activeLevel);\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n\n    const referenzautomat = game[this.activeLevel].solution;\n    for (let i = 0; i  this.highestLevel){\n      localStorage.setItem('highestLevel', this.activeLevel.toString());\n      this.highestLevel = this.activeLevel;\n      this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n    }\n    this.nextDiagram(this.activeLevel, );\n\n  }\n\n  resetGame() {\n\n    if (confirm('Bist du dir sicher das du alle Leveln und deine Stand zurücksetzen möchtest?')) {\n      localStorage.setItem('activeLevel', \"0\");\n      this.activeLevel = 0;\n  \n      localStorage.setItem('highestLevel',\"0\");\n      this.highestLevel = 0;\n  \n     localStorage.setItem('score', \"0\");\n     this.score = 0;\n    } else {\n      \n    }\n\n\n  }\n}\n\nexport interface DialogData {\n  winState: boolean;\n  onNext: () => void;\n  word: {\n    word: string;\n    vergleich:{\n      yourGraph: boolean;\n      referenzGraph: boolean;\n    }  ,index?: number;\n\n\n  };\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n})\nexport class DialogDataExampleDialog {\n  constructor(  public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onNwxtLevelChanged(): void {\n    this.data.onNext();\n    this.dialogRef.close();\n\n  }\n\n\n\n}\n\n\n\n\n    \n\n    \n        \n  \n  \n    Level {{level}}\n  \n  \n    \n    \n  \n\n  \n    \n    \n  \n\n\n \n  \n     RESET\n  \n\n  Aufgabe: {{task}}\n\n  ↺\n   Punkte: {{score}} \n  ▶\n\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./puzzle-game.component.css\n                \n                .gojs-wrapper {\n  background: whitesmoke;\n  position: relative;\n  width: 100%;\n  height: calc(100vh - 250px);\n}\n\n.gojs-palette {\n  background: whitesmoke;\n  width: 150px;\n  height: calc(100vh - 250px);\n  border: 1px solid black;\n  border-left: 0.5px solid black;\n}\n\n.capp {\n  display: flex;\n  position: relative;\n}\n\n.hideator {\n  width: calc(100% - 1px);\n  position: absolute;\n  top: 0;\n  right: 1;\n  background-color: whitesmoke;\n  height: 70px;\n  z-index: 3;\n}\n\n.fake-wrapper {\n  border: 1px solid black;\n  border-bottom: none;\n  border-right: none;\n  width: 149px;\n  height: 90px;\n  float: right;\n  clear: both;\n}\n\n* {\n  outline: none;\n}\n\n.haupt {\n  bottom: 20px;\n  margin: 12px auto;\n  right: calc(50% - 300px);\n  height: 40px;\n  z-index: 3;\n  display: flex;\n\n}\n\n.innen {\n  border: 3px solid lightblue;\n  padding: 1rem;\n  margin: 0 1rem;\n  line-height: 0;\n\n  \n}\n\n.task {\n  top: 2rem;\n  margin: 0 auto;\n  z-index:3;\n  background-color: white;\n  width: 500px;\n  min-height:40px;\n  right: calc(50% - 220px);\n  border: 1px solid lightseagreen;\n\n}\n\n.task-list {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  z-index:3;\n  background-color: white;\n  width: 80px;\n  border: 1px solid lightseagreen;\n}\n\n.task-list li {\n  cursor: pointer;\n}\n\n.unten{\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center; \n\n}\n\n.unten-zwei{\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center; \n}\n.zurück{\n  position: absolute;\n    top: 6px;\n    left: 234px;\n    z-index: 1000;\n}\n\nli.active{\n  background-color: darkcyan;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Level {{level}}                                  RESET    Aufgabe: {{task}}  ↺   Punkte: {{score}}   ▶  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PuzzleGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PuzzleModule.html":{"url":"modules/PuzzleModule.html","title":"module - PuzzleModule","body":"\n                   \n\n\n\n\n    Modules\n    PuzzleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PuzzleModule\n\n\n\ncluster_PuzzleModule_declarations\n\n\n\n\nPuzzleComponent\n\nPuzzleComponent\n\n\n\nPuzzleModule\n\nPuzzleModule\n\nPuzzleModule -->\n\nPuzzleComponent->PuzzleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/puzzle/puzzle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PuzzleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PuzzleComponent } from './puzzle.component';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\n\n@NgModule({\n  declarations: [PuzzleComponent],\n  imports: [\n    BrowserModule,\n    CommonModule\n  ]\n})\nexport class PuzzleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/register/register.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/register/register.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              Name\n              \n                \n              \n            \n\n            \n              Username\n              \n                \n                \n                  \n                \n                \n                  \n                \n              \n              This username is available\n            \n\n            \n                Email\n                \n                  \n                \n              \n              \n              \n                Email wiederholen\n                \n                  \n                \n              \n\n            \n              \n                \n                  \n                  I agree to the terms and conditions\n                \n              \n            \n\n\n            \n              \n                Register\n              \n              \n                Cancel\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Name                                                                                  Username                                                                                                                                                              This username is available                                        Email                                                                                                            Email wiederholen                                                                                                                                              I agree to the terms and conditions                                                                                    Register                                            Cancel                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RuleSetInterface.html":{"url":"classes/RuleSetInterface.html","title":"class - RuleSetInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RuleSetInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/grammar.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                afterExp\n                            \n                            \n                                expIndex\n                            \n                            \n                                prevExp\n                            \n                            \n                                rule\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props?: RuleSetInterface)\n                    \n                \n                        \n                            \n                                Defined in src/app/grammar/grammar.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        RuleSetInterface\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        afterExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface FourTuple {\n  V: string[];\n  SIG: string[];\n  R: {\n    A: string[];\n    O: string[];\n    Z: string[];\n  };\n  start: string;\n}\n\nexport class RuleSetInterface {\n  expIndex: number | null;\n  rule: string;\n  prevExp: string;\n  afterExp: string;\n\n  constructor(props?: RuleSetInterface) {\n    this.expIndex = props?.expIndex || 0;\n    this.rule = props?.rule || '';\n    this.prevExp = props?.prevExp || '';\n    this.afterExp = props?.afterExp || '';\n  }\n}\n\nexport interface GrammarModel {\n  Expression: string;\n  Valid: boolean;\n  Rule: FourTuple;\n  ruleSet: RuleSetInterface[];\n}\n\nexport class ExpressionGrammarModel implements GrammarModel {\n  private _expression: string = '';\n  private _valid: boolean = false;\n  private readonly _rule: FourTuple = {\n    V: [],\n    SIG: [],\n    R: {\n      A: [],\n      O: [],\n      Z: [],\n    },\n    start: '',\n  };\n  private _ruleSet: RuleSetInterface[] = [];\n  public value: null | string | number = null;\n\n  constructor(exp: string) {\n    this.Expression = exp;\n    this._rule = {\n      V: ['A', 'O', 'Z'],\n      SIG: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '*', '-', '/', '(', ')'],\n      R: {\n        A: ['A O A', '( A )', 'Z'],\n        O: ['+', '*', '-', '/'],\n        Z: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n      },\n      start: 'A',\n    };\n  }\n\n  get Expression(): string {\n    return this._expression;\n  }\n\n  get Rule(): FourTuple {\n    return this._rule;\n  }\n\n  get Valid(): boolean {\n    return this._valid;\n  }\n\n  private _setRuleSet(oldExp: string) {\n    let exp1 = oldExp.slice();\n    let exp2 = exp1.replace(/ /g, '');\n    let exp = exp2.split('').join(' ');\n    let rules = [];\n    let hasChanged = true;\n    const { O, Z } = this._rule.R;\n\n    let j = 0;\n    while (exp.length > 0 && j  -1) {\n        const m = exp.indexOf('A O A');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('A O A');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → A O A`;\n\n        rules.push(rule1);\n      }\n\n      if (exp.indexOf('( A )') > -1) {\n        const m = exp.indexOf('( A )');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('( A )');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → ( A )`;\n\n        rules.push(rule1);\n      }\n      j++;\n\n      if (startExp === exp) {\n        hasChanged = false;\n      }\n    }\n\n    if (this.isExpressionValid(oldExp) && this.isExpressionValid(oldExp) !== 0) {\n      this._ruleSet = rules.reverse();\n    } else {\n      this._ruleSet = rules.map((rule: RuleSetInterface) => ({\n        prevExp: rule.afterExp,\n        afterExp: rule.prevExp,\n        expIndex: rule.expIndex,\n        rule: rule.rule.split('').reverse().join('').replace(') A (', '( A )'),\n      }));\n    }\n  }\n\n  get ruleSet() {\n    return this._ruleSet;\n  }\n\n  set Expression(exp: string) {\n    this._expression = exp;\n\n    try {\n      this.value = this.isExpressionValid(exp);\n      this._setRuleSet(exp);\n    } catch {\n      this._setRuleSet(exp);\n      this.value = null;\n      this._expression = exp;\n    }\n  }\n\n  private static _isNegNumber(exp: string): boolean {\n    if (exp.indexOf('-') === 0) {\n      return true;\n    }\n    return !!exp.match(/\\(\\s*-\\s*/gm);\n  }\n\n  public isExpressionValid(exp: string): number {\n    let result;\n\n    const matchDoubleD = exp.match(/[0-9]\\s*[0-9]/gm);\n\n    if (matchDoubleD || ExpressionGrammarModel._isNegNumber(exp)) {\n      this._valid = false;\n    } else {\n      try {\n        result = eval(exp);\n        this.value = Number.parseFloat(result);\n        this._valid = true;\n      } catch {\n        this._valid = false;\n      }\n    }\n\n    return result;\n  }\n\n  private _hasNonTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.V.indexOf(r) >= 0);\n  }\n\n  private _hasTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.SIG.indexOf(r) >= 0);\n  }\n\n  private _hasElementOfKind(exp: string, kind: string[]) {\n    return [...exp].some((r) => kind.indexOf(r) >= 0);\n  }\n\n  private _getCorrectExpression(): string {\n    let exp = this._rule.start;\n\n    while (this._hasNonTerminalChar(exp)) {\n      if (exp.includes('A')) {\n        let r =\n          Math.random() * (500 / exp.length) > 5\n            ? Math.round(Math.random() * (this._rule.R.A.length - 1))\n            : this._rule.R.A.length - 1;\n        let t = this._rule.R.A[r];\n        exp = exp.replace('A', t);\n      }\n\n      if (exp.includes('O')) {\n        let r = Math.round(Math.random() * (this._rule.R.O.length - 1));\n        let t = this._rule.R.O[r];\n        exp = exp.replace('O', t);\n      }\n\n      if (exp.includes('Z')) {\n        let r = Math.round(Math.random() * (this._rule.R.Z.length - 1));\n        let t = this._rule.R.Z[r];\n        exp = exp.replace('Z', t);\n      }\n    }\n\n    return exp;\n  }\n\n  private _getWrongExpression(): string {\n    let correctExp = Array.from(this._getCorrectExpression().replace(/ /g, ''));\n    let indexOfExp = Math.round(Math.random() * (correctExp.length - 1));\n\n    if (this._rule.R.Z.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    } else if (this._rule.R.O.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      }\n    } else if (['(', ')'].includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    }\n\n    return correctExp.join(' ');\n  }\n\n  public generateCorrectExpression(): void {\n    const exp = this._getCorrectExpression();\n    this.Expression = exp;\n  }\n\n  public generateWrongExpression(): void {\n    const exp = this._getWrongExpression();\n    this.Expression = exp;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartGameComponent.html":{"url":"components/StartGameComponent.html","title":"component - StartGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/start-game/start-game.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-start-game\n            \n\n            \n                styleUrls\n                ./start-game.component.css\n            \n\n\n\n            \n                templateUrl\n                ./start-game.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showOneUser\n                            \n                            \n                                showUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/start-game/start-game.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/start-game/start-game.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOneUser\n                        \n                    \n                \n            \n            \n                \nshowOneUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/start-game/start-game.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUser\n                        \n                    \n                \n            \n            \n                \nshowUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/start-game/start-game.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/start-game/start-game.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/start-game/start-game.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UsersService } from '../users.service';\n\ninterface User{\n  id:string;\n  username:string;\n  firstName:string;\n  lastName:string;\n  email: string\n}\n\n@Component({\n  selector: 'app-start-game',\n  templateUrl: './start-game.component.html',\n  styleUrls: ['./start-game.component.css']\n})\nexport class StartGameComponent implements OnInit {\n  currentUser: Observable;\n  level: Observable;\n\n  constructor(\n    private usersService: UsersService,\n    private store: Store ){\n    this.currentUser = this.store.select('count') as Observable;\n    this.level = this.store.select('level') as Observable;\n\n  }\n\n  showUser() {\n    this.usersService.getUser()\n      .subscribe((data: any) => {\n        console.log(data)\n      });      \n  }\n\n  showOneUser() {\n    this.usersService.getOneUser()\n      .subscribe((data: any) => {\n        //this.currentUser = data\n      });      \n  }\n\n  ngOnInit(): void {\n    this.showOneUser()\n  }\n\n}\n\n    \n\n    \n        \n    Hallo  {{ (currentUser | async)!.username }} !\n     dein aktuelles LEVEL ist: {{ (level | async)! }} \n  \n  \n    DEA PUZZLE\n    \n    \n      Start Game\n      Tutorial\n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./start-game.component.css\n                \n                \n\n.columns {\n  height: 700px;\n  margin-bottom: 80px;\n}\n\n.testy {\n    flex-direction: column-reverse;\njustify-content: space-between;\n}\n\n.nasty {\n}\n\n.first{\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n}\n\n.bottonsgroup {\n  height: 200px;\n  margin-bottom: 80px;\n}\n\n.img-start{\n    border: 1px solid lightgrey\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Hallo  {{ (currentUser | async)!.username }} !     dein aktuelles LEVEL ist: {{ (level | async)! }}         DEA PUZZLE              Start Game      Tutorial                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StartGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StartGameModule.html":{"url":"modules/StartGameModule.html","title":"module - StartGameModule","body":"\n                   \n\n\n\n\n    Modules\n    StartGameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StartGameModule\n\n\n\ncluster_StartGameModule_providers\n\n\n\ncluster_StartGameModule_declarations\n\n\n\n\nStartGameComponent\n\nStartGameComponent\n\n\n\nStartGameModule\n\nStartGameModule\n\nStartGameModule -->\n\nStartGameComponent->StartGameModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nStartGameModule -->\n\nTableComponent->StartGameModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nStartGameModule -->\n\nUsersService->StartGameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/start-game/start-game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StartGameComponent\n                        \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StartGameComponent } from './start-game.component';\nimport { TableComponent } from '../component/table/table.component';\nimport { UsersService } from '../users.service';\n\n\n\n@NgModule({\n  declarations: [\n    StartGameComponent,\n    TableComponent\n  ],\n  imports: [\n    CommonModule,\n  ],\n  providers: [UsersService],\n})\nexport class StartGameModule { \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/table/table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/table/table.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/table/table.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Highscore\n\n\n  \n    Rang\n    Name\n    Punkte\n  \n  \n    1\n    Najima Jaadari\n    5110\n  \n  \n    2\n    Daniel\n    1999\n  \n  \n    3\n     Maryam\n    100\n  \n\n\n    \n\n    \n                \n                    ./table.component.css\n                \n                #highscore {\n    font-family: Arial, Helvetica, sans-serif;\n    border-collapse: collapse;\n    width: 100%;\n  }\n  \n  #highscore td, #highscore th {\n    border: 1px solid #ddd;\n    padding: 8px;\n  }\n  \n  #highscore tr:nth-child(even){background-color: #f2f2f2;}\n  \n  #highscore tr:hover {background-color: #ddd;}\n  \n  #highscore th {\n    padding-top: 12px;\n    padding-bottom: 12px;\n    text-align: left;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Highscore      Rang    Name    Punkte        1    Najima Jaadari    5110        2    Daniel    1999        3     Maryam    100  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/profile.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\ninterface User{\n  id:string;\n  username:string;\n  firstName:string;\n  lastName:string;\n  email: string\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  count$: Observable;\n\n  constructor(private store: Store) {\n    this.count$ = this.store.select('count');\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User-1.html":{"url":"interfaces/User-1.html","title":"interface - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/start-game/start-game.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UsersService } from '../users.service';\n\ninterface User{\n  id:string;\n  username:string;\n  firstName:string;\n  lastName:string;\n  email: string\n}\n\n@Component({\n  selector: 'app-start-game',\n  templateUrl: './start-game.component.html',\n  styleUrls: ['./start-game.component.css']\n})\nexport class StartGameComponent implements OnInit {\n  currentUser: Observable;\n  level: Observable;\n\n  constructor(\n    private usersService: UsersService,\n    private store: Store ){\n    this.currentUser = this.store.select('count') as Observable;\n    this.level = this.store.select('level') as Observable;\n\n  }\n\n  showUser() {\n    this.usersService.getUser()\n      .subscribe((data: any) => {\n        console.log(data)\n      });      \n  }\n\n  showOneUser() {\n    this.usersService.getOneUser()\n      .subscribe((data: any) => {\n        //this.currentUser = data\n      });      \n  }\n\n  ngOnInit(): void {\n    this.showOneUser()\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User-2.html":{"url":"interfaces/User-2.html","title":"interface - User-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/component/navigation/navigation.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\ninterface User{\n  id:string;\n  username:string;\n  firstName:string;\n  lastName:string;\n  email: string\n}\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n  count$: Observable;\n\n  constructor(private store: Store) {\n    this.count$ = this.store.select('count');\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOneUser\n                            \n                            \n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOneUser\n                        \n                    \n                \n            \n            \n                \ngetOneUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private http: HttpClient) { }\n\n  getUser() {\n    return this.http.get(\"http://localhost:3000/user\");\n  }\n\n  getOneUser() {\n    return this.http.get(\"http://localhost:3000/user/current\");\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WordChecker.html":{"url":"classes/WordChecker.html","title":"class - WordChecker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WordChecker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/word-checker.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkBeginning\n                            \n                            \n                                checkWordRekursive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkBeginning\n                        \n                    \n                \n            \n            \n                \ncheckBeginning(dea: DeaArray, word: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-checker.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dea\n                                    \n                                                DeaArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkWordRekursive\n                        \n                    \n                \n            \n            \n                \ncheckWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-checker.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dea\n                                    \n                                                DeaArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentNode\n                                    \n                                                DeaNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeaArray, DeaNode } from \"./word-generator\";\n\nexport class WordChecker {\n\n    checkBeginning(dea: DeaArray, word: string): {value: boolean, index: number} {\n        \n               \n       /* if(dea.links.filter(link => link.to === undefined)){\n            alert(\"Bitte füge ein StartLink hinzu\");\n       } */\n\n        const currentStartLink = dea.links.find(link => link.key === \"Start\");\n        const currentNode = dea.nodes.find(node => node.id === currentStartLink!.to);\n        //console.log(\"Beginn:\",word)\n        return this.checkWordRekursive(dea, word, currentNode!, 0);\n    }\n\n    checkWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number): {value: boolean, index: number} {\n        //console.log(word, index)\n        if (word === \"\") {\n            //console.log(currentNode);\n            if (currentNode!.figure === \"Ring\") {\n                return {value: true, index};\n            } else {\n                return {value: false, index};\n            }\n        }\n\n        const outgoingLinks = dea.links.filter(link => link.from === currentNode!.id);\n        const foundLinks = outgoingLinks.filter(link => link?.text?.includes(word[0]));\n        //console.log(\"foundLinkSLänge\",foundLinks.length);\n        \n        if(foundLinks.length > 1){\n            throw new Error(\"ausgehende Kanten müssen eindeutig definiert sein!\");\n        }\n\n        const foundLink = foundLinks[0];\n\n        //console.log(\"Outlinks\",outgoingLinks);\n        //console.log(\"foundlink\",foundLink);\n\n        if (foundLink && foundLink!.text?.length > 0) {\n            word = word.substring(1);\n            const nextNodeElement = dea.nodes.find(node => node.id === foundLink!.to)\n            return this.checkWordRekursive(dea, word, nextNodeElement!, index + 1);\n        } else {\n            return {value: false, index};\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WordGenerator.html":{"url":"classes/WordGenerator.html","title":"class - WordGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WordGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/word-generator.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateRandomWord\n                            \n                            \n                                generateRandomWords\n                            \n                            \n                                generateWord\n                            \n                            \n                                generateWordRekursive\n                            \n                            \n                                generateWords\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomWord\n                        \n                    \n                \n            \n            \n                \ngenerateRandomWord(arr)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-generator.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomWords\n                        \n                    \n                \n            \n            \n                \ngenerateRandomWords(arr)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-generator.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateWord\n                        \n                    \n                \n            \n            \n                \ngenerateWord(dea: DeaArray)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-generator.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dea\n                                    \n                                                DeaArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateWordRekursive\n                        \n                    \n                \n            \n            \n                \ngenerateWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-generator.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dea\n                                    \n                                                DeaArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentNode\n                                    \n                                                DeaNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateWords\n                        \n                    \n                \n            \n            \n                \ngenerateWords(dea: DeaArray)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-generator.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dea\n                                    \n                                                DeaArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface DeaLink {\n    key: number | \"Start\", from: number, to: number, text: string\n}\n\nexport interface DeaNode {\n    id: number, text: string, figure?: string\n}\n\nexport interface DeaArray {\n    nodes: DeaNode[],\n    links: DeaLink[]\n}\n\nexport class WordGenerator {\n\n    generateWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number): string | null {\n        if (index > 1000) {\n            return null;\n        }\n        // If (Teste ob Node Enpunkt ist)\n        if (currentNode.figure === \"Ring\" && Math.random() > 0.6) {\n            return word;\n        }\n        //Alle ausgehenden Links dieses Notes\n        const outgoingLinks = dea.links.filter(link => link.from === currentNode!.id);\n        //Anzahl der Links\n        //Random ein Link auswählen\n        const randomLinkNumber = Math.floor(Math.random() * outgoingLinks.length);\n        const nextlinkElement = outgoingLinks[randomLinkNumber];\n        const nextNodeElement = dea.nodes.find(node => node.id === nextlinkElement!.to);\n\n        const LinkText = outgoingLinks[randomLinkNumber].text.split(\",\");\n\n        //Prüfe ob mehre Zeichen vorhanden sind(,)\n        if (LinkText.length > 1) {\n            const randomLinkText = Math.floor(Math.random() * LinkText.length);\n            //Text des Links in das Wort anhängen\n            word += LinkText[randomLinkText];\n        } else {\n            //Text des Links in das Wort anhängen\n            word += LinkText[0];\n        }\n\n        //Schaue worauf der Link zeigt(to)\n        return this.generateWordRekursive(dea, word, nextNodeElement!, index + 1)\n    }\n\n\n    generateWord(dea: DeaArray): string | null {\n        //Suche den Link mit \"Start\"\n        const word = \"\";\n        const currentStartLink = dea.links.find(link => link.key === \"Start\");\n        //Gehe durch den Array und suche den Node auf den der Start Link zeigt \n        const currentNode = dea.nodes.find(node => node.id === currentStartLink!.to);\n        return this.generateWordRekursive(dea, word, currentNode!, 0)\n    };\n\n    generateWords(dea: DeaArray): string[] {\n        const result: string[] = [];\n        for (let i = 0; i  arr[Math.floor(Math.random() * arr.length)])\n         .join(\"\");\n}             \n    \n\n      generateRandomWords(arr): string[] {\n        const result: string[] = [];\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            CSPEED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            dialogConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            SPEED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            initializeKeycloak\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/component/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/component/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/component/main-page/main-page.component.ts\n            \n            component\n            MainPageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/component/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/component/navigation/navigation.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/component/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/component/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/counter.actions.ts\n            \n            variable\n            increment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter.actions.ts\n            \n            variable\n            level\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter.reducer.ts\n            \n            variable\n            counterReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter.reducer.ts\n            \n            variable\n            levelReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/dea/cyto-graph/cyto-graph.component.ts\n            \n            component\n            CytoGraphComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/dea/cyto-graph/cyto-graph.service.ts\n            \n            injectable\n            CytoGraphService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dea/dea.component.ts\n            \n            component\n            DeaComponent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/dea/dea.service.ts\n            \n            injectable\n            DeaService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dea/intro.config.ts\n            \n            variable\n            introJsConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/dea/table.config.ts\n            \n            variable\n            cytoscapeConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/dea/table.config.ts\n            \n            variable\n            ELEMENT_DATA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/example/example.component.ts\n            \n            component\n            ExampleComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/grammar/cyto-graph/config.ts\n            \n            variable\n            grammarGraphConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/cyto-graph/grammar-graph.component.ts\n            \n            component\n            GrammarGraphComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/grammar/cyto-graph/grammar-graph.service.ts\n            \n            injectable\n            GrammarGraphService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.animation.ts\n            \n            variable\n            grammarAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.component.ts\n            \n            component\n            GrammarComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.model.ts\n            \n            class\n            ExpressionGrammarModel\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.model.ts\n            \n            class\n            RuleSetInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.model.ts\n            \n            interface\n            FourTuple\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.model.ts\n            \n            interface\n            GrammarModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.service.ts\n            \n            injectable\n            GrammarService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.action.ts\n            \n            variable\n            getGrammar\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.reducer.ts\n            \n            interface\n            GrammarState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.reducer.ts\n            \n            variable\n            grammarReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.reducer.ts\n            \n            variable\n            grammarSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.reducer.ts\n            \n            variable\n            selectGrammarSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/utils/helpers.ts\n            \n            variable\n            codeSttring\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/utils/introJS.ts\n            \n            variable\n            GrammarIntroConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/my-counter/my-counter.component.ts\n            \n            component\n            MyCounterComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/level.ts\n            \n            variable\n            game\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/puzzle-game.component.ts\n            \n            component\n            DialogDataExampleDialog\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/puzzle-game.component.ts\n            \n            component\n            PuzzleGameComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/puzzle-game.component.ts\n            \n            class\n            DemoForceDirectedLayout\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/puzzle-game.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/shapes/shape.ts\n            \n            variable\n            initRing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/word-checker.ts\n            \n            class\n            WordChecker\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/word-generator.ts\n            \n            class\n            WordGenerator\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/word-generator.ts\n            \n            interface\n            DeaArray\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/word-generator.ts\n            \n            interface\n            DeaLink\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/word-generator.ts\n            \n            interface\n            DeaNode\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/puzzle/puzzle.component.ts\n            \n            component\n            PuzzleComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/Exceptions/DEAException.ts\n            \n            class\n            DEAException\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/dialog/dialog.component.ts\n            \n            component\n            DialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/helpers/helpers.ts\n            \n            variable\n            getLastItemOfArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/helpers/helpers.ts\n            \n            variable\n            randomGenChar\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/start-game/start-game.component.ts\n            \n            component\n            StartGameComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/start-game/start-game.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            disableScroll\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            enableScroll\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            keys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            preventDefault\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            preventDefaultForScrollKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            supportsPassive\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            wheelEvent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            wheelOpt\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.1.0\n        \n            @angular/cdk : ^13.3.9\n        \n            @angular/common : ^14.1.0\n        \n            @angular/compiler : ^14.1.0\n        \n            @angular/core : ^14.1.0\n        \n            @angular/forms : ^14.1.0\n        \n            @angular/material : ^13.3.9\n        \n            @angular/platform-browser : ^14.1.0\n        \n            @angular/platform-browser-dynamic : ^14.1.0\n        \n            @angular/router : ^14.1.0\n        \n            @nestjs/cli : ^9.0.0\n        \n            @ngrx/store : ^14.0.2\n        \n            @ngrx/store-devtools : ^14.0.2\n        \n            angular-cli-node-js-mongo-db-customers-service : ^1.0.0\n        \n            bootstrap : ^5.2.0-beta1\n        \n            bulma : ^0.9.4\n        \n            cytoscape : ^3.22.1\n        \n            cytoscape-compound-drag-and-drop : ^1.1.0\n        \n            cytoscape-dagre : ^2.4.0\n        \n            gojs : ^2.2.14\n        \n            gojs-angular : ^2.0.5\n        \n            intro.js : ^6.0.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            keycloak-angular : ^12.0.0\n        \n            keycloak-js : ^18.0.1\n        \n            prettier : ^2.7.1\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            xstate : ^4.32.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            initializeKeycloak   (src/.../app.module.ts)\n                        \n                        \n                            reducer   (src/.../grammar.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initializeKeycloak\n                        \n                    \n                \n            \n            \n                \ninitializeKeycloak(keycloak: KeycloakService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keycloak\n                                    \n                                            KeycloakService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/grammar/slice/grammar.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                            Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDEA\nThis project was generated with Angular CLI version 13.2.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GrammarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PuzzleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StartGameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DeaModule\n\n\n\ncluster_DeaModule_declarations\n\n\n\ncluster_DeaModule_providers\n\n\n\ncluster_GrammarModule\n\n\n\ncluster_GrammarModule_declarations\n\n\n\ncluster_GrammarModule_providers\n\n\n\ncluster_PuzzleModule\n\n\n\ncluster_PuzzleModule_declarations\n\n\n\ncluster_StartGameModule\n\n\n\ncluster_StartGameModule_declarations\n\n\n\ncluster_StartGameModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nAppModule -->\n\nDialogComponent->AppModule\n\n\n\n\n\nDialogDataExampleDialog\n\nDialogDataExampleDialog\n\nAppModule -->\n\nDialogDataExampleDialog->AppModule\n\n\n\n\n\nExampleComponent\n\nExampleComponent\n\nAppModule -->\n\nExampleComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainPageComponent\n\nMainPageComponent\n\nAppModule -->\n\nMainPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nPuzzleGameComponent\n\nPuzzleGameComponent\n\nAppModule -->\n\nPuzzleGameComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nPuzzleModule\n\nPuzzleModule\n\nAppModule -->\n\nPuzzleModule->AppModule\n\n\n\n\n\nCytoGraphComponent\n\nCytoGraphComponent\n\n\n\nDeaModule\n\nDeaModule\n\nDeaModule -->\n\nCytoGraphComponent->DeaModule\n\n\n\n\n\nDeaComponent\n\nDeaComponent\n\nDeaModule -->\n\nDeaComponent->DeaModule\n\n\n\n\n\nDeaService\n\nDeaService\n\nDeaModule -->\n\nDeaService->DeaModule\n\n\n\n\n\nGrammarComponent\n\nGrammarComponent\n\n\n\nGrammarModule\n\nGrammarModule\n\nGrammarModule -->\n\nGrammarComponent->GrammarModule\n\n\n\n\n\nGrammarGraphComponent\n\nGrammarGraphComponent\n\nGrammarModule -->\n\nGrammarGraphComponent->GrammarModule\n\n\n\n\n\nGrammarGraphService\n\nGrammarGraphService\n\nGrammarModule -->\n\nGrammarGraphService->GrammarModule\n\n\n\n\n\nGrammarService\n\nGrammarService\n\nGrammarModule -->\n\nGrammarService->GrammarModule\n\n\n\n\n\nPuzzleComponent\n\nPuzzleComponent\n\nPuzzleModule -->\n\nPuzzleComponent->PuzzleModule\n\n\n\n\n\nStartGameComponent\n\nStartGameComponent\n\n\n\nStartGameModule\n\nStartGameModule\n\nStartGameModule -->\n\nStartGameComponent->StartGameModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nStartGameModule -->\n\nTableComponent->StartGameModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nStartGameModule -->\n\nUsersService->StartGameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StateType   (src/.../grammar.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/grammar/grammar.service.ts\n    \n    \n        \n            \n                \n                    \n                    StateType\n                \n            \n            \n                \n                        \"stop\" | \"start\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            codeSttring   (src/.../helpers.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            counterReducer   (src/.../counter.reducer.ts)\n                        \n                        \n                            CSPEED   (src/.../app.config.ts)\n                        \n                        \n                            cytoscapeConfig   (src/.../table.config.ts)\n                        \n                        \n                            dialogConfig   (src/.../app.config.ts)\n                        \n                        \n                            disableScroll   (src/.../helpers.ts)\n                        \n                        \n                            ELEMENT_DATA   (src/.../table.config.ts)\n                        \n                        \n                            enableScroll   (src/.../helpers.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            game   (src/.../level.ts)\n                        \n                        \n                            getGrammar   (src/.../grammar.action.ts)\n                        \n                        \n                            getLastItemOfArray   (src/.../helpers.ts)\n                        \n                        \n                            grammarAnimation   (src/.../grammar.animation.ts)\n                        \n                        \n                            grammarGraphConfig   (src/.../config.ts)\n                        \n                        \n                            GrammarIntroConfig   (src/.../introJS.ts)\n                        \n                        \n                            grammarReducer   (src/.../grammar.reducer.ts)\n                        \n                        \n                            grammarSelector   (src/.../grammar.reducer.ts)\n                        \n                        \n                            increment   (src/.../counter.actions.ts)\n                        \n                        \n                            initialState   (src/.../counter.reducer.ts)\n                        \n                        \n                            initialState   (src/.../grammar.reducer.ts)\n                        \n                        \n                            initRing   (src/.../shape.ts)\n                        \n                        \n                            introJsConfig   (src/.../intro.config.ts)\n                        \n                        \n                            keys   (src/.../helpers.ts)\n                        \n                        \n                            level   (src/.../counter.actions.ts)\n                        \n                        \n                            levelReducer   (src/.../counter.reducer.ts)\n                        \n                        \n                            preventDefault   (src/.../helpers.ts)\n                        \n                        \n                            preventDefaultForScrollKeys   (src/.../helpers.ts)\n                        \n                        \n                            randomGenChar   (src/.../helpers.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            selectGrammarSelector   (src/.../grammar.reducer.ts)\n                        \n                        \n                            SPEED   (src/.../app.config.ts)\n                        \n                        \n                            supportsPassive   (src/.../helpers.ts)\n                        \n                        \n                            wheelEvent   (src/.../helpers.ts)\n                        \n                        \n                            wheelOpt   (src/.../helpers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/grammar/utils/helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        codeSttring\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  G = ( V, Σ, R, A ):\n\n  V = { A, O, Z },\n  Σ = { 0 ... 9, +, -, ∗, /, (, ) },\n  R = {\n\n      A → A O A | ( A ) | Z ,\n\n      O → * | + | - | / ,\n\n      Z → 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9\n\n  }.\n`\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/counter.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        counterReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(increment, (_state, action) => { return action.user }),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        levelReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  localStorage.getItem(\"highestLevel\"),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CSPEED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  width: '450px',\n  data: {},\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPEED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  5: 1000,\n  4: 2000,\n  3: 3000,\n  2: 4000,\n  1: 5000,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/dea/table.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cytoscapeConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  elements: {\n    nodes: [\n      { data: { id: 'start' }, position: { x: -700, y: 50 }, classes: 'inv' },\n      { data: { id: '1' }, position: { x: -600, y: 50 } },\n      { data: { id: '2' }, position: { x: -470, y: 50 } },\n      { data: { id: '3' }, position: { x: -300, y: -100 } },\n      { data: { id: '4' }, position: { x: -300, y: 200 } },\n      { data: { id: '5' }, position: { x: -100, y: 200 } },\n      { data: { id: '6' }, position: { x: -100, y: -100 } },\n      { data: { id: '7' }, position: { x: 70, y: 50 } },\n      { data: { id: '8' }, position: { x: 200, y: 50 }, classes: 'double' },\n    ],\n    edges: [\n      {\n        data: { id: '2_3', source: '2', target: '3', label: 'T' },\n        classes: 'font',\n      },\n      { data: { id: '2_4', source: '2', target: '4', label: 'P' } },\n      { data: { id: '4_5', source: '4', target: '5', label: 'V' } },\n      { data: { id: '3_6', source: '3', target: '6', label: 'X' } },\n      { data: { id: '6_7', source: '6', target: '7', label: 'S' } },\n      { data: { id: '5_7', source: '5', target: '7', label: 'V' } },\n      { data: { id: '5_6', source: '5', target: '6', label: 'P' } },\n      { data: { id: '6_4', source: '6', target: '4', label: 'X' } },\n      { data: { id: '7_8', source: '7', target: '8', label: 'E' } },\n      { data: { id: 'start_1', source: 'start', target: '1', label: '' } },\n      { data: { id: '1_2', source: '1', target: '2', label: 'B' } },\n      {\n        data: { id: 'BB', source: '3', target: '3', type: 'loop', label: 'S' },\n      },\n      {\n        data: {\n          id: 'CC',\n          source: '4',\n          target: '4',\n          type: 'loop',\n          flipLabel: true,\n          label: 'T',\n        },\n        classes: 'loop',\n      },\n    ],\n  },\n  style: [\n    {\n      selector: 'node',\n      style: {\n        'background-color': '#fff',\n        color: '#000',\n        label: 'data(id)',\n        'text-valign': 'center',\n        width: '38px',\n        height: '38px',\n        'text-halign': 'center',\n        'border-color': 'black',\n        // @ts-ignore\n        'border-opacity': '1',\n        'border-width': '1',\n      },\n    },\n    {\n      selector: 'edge',\n      style: {\n        width: 3,\n        'line-color': '#ccc',\n        color: '#000',\n        'target-arrow-color': '#ccc',\n        'target-arrow-shape': 'triangle',\n        'curve-style': 'bezier',\n        label: 'data(label)',\n        'text-background-color': 'white',\n        // @ts-ignore\n        'text-background-opacity': '1',\n        'text-background-shape': 'rectangle',\n        'text-background-padding': '3px',\n      },\n    },\n    {\n      selector: '.double',\n      style: {\n        'border-color': '#000',\n        // @ts-ignore\n        'border-opacity': '1',\n        'border-style': 'double',\n        'border-width': '3',\n      },\n    },\n    {\n      selector: '.inv',\n      style: {\n        'background-color': '#fff',\n        'line-color': '#ccc',\n        color: '#fff',\n        'border-color': 'white',\n        // @ts-ignore\n        'border-opacity': '0',\n      },\n    },\n    {\n      selector: '.loop',\n      style: {\n        // @ts-ignore\n        'loop-direction': '-130deg',\n        'loop-sweep': '90deg',\n        'target-endpoint': 'outside-to-line',\n        'source-endpoint': 'outside-to-line',\n      },\n    },\n  ],\n  layout: {\n    name: 'preset',\n    padding: 5,\n  },\n  autoungrabify: true,\n  autolock: true,\n  userPanningEnabled: false,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ELEMENT_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { q0: '1', e: 'B', q1: '2' },\n  { q0: '2', e: 'T', q1: '3' },\n  { q0: '2', e: 'P', q1: '4' },\n  { q0: '3', e: 'S', q1: '3' },\n  { q0: '3', e: 'X', q1: '6' },\n  { q0: '4', e: 'T', q1: '4' },\n  { q0: '4', e: 'V', q1: '5' },\n  { q0: '5', e: 'P', q1: '6' },\n  { q0: '5', e: 'V', q1: '7' },\n  { q0: '6', e: 'X', q1: '4' },\n  { q0: '6', e: 'S', q1: '7' },\n  { q0: '7', e: 'E', q1: '8' },\n]\n                    \n                \n\n\n        \n    \n\n    src/utils/helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        disableScroll\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  window.addEventListener('DOMMouseScroll', preventDefault, false); // older FF\n  window.addEventListener(wheelEvent, preventDefault, wheelOpt); // modern desktop\n  window.addEventListener('touchmove', preventDefault, wheelOpt); // mobile\n  window.addEventListener('keydown', preventDefaultForScrollKeys, false);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableScroll\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  window.removeEventListener('DOMMouseScroll', preventDefault, false);\n  // @ts-ignore\n  window.removeEventListener(wheelEvent, preventDefault, wheelOpt);\n  // @ts-ignore\n  window.removeEventListener('touchmove', preventDefault, wheelOpt);\n  window.removeEventListener('keydown', preventDefaultForScrollKeys, false);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { 37: 1, 38: 1, 39: 1, 40: 1 }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preventDefault\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (e: Event) => {\n  e.preventDefault();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preventDefaultForScrollKeys\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (e: Event) => {\n  // @ts-ignore\n  if (keys[e.keyCode]) {\n    preventDefault(e);\n    return false;\n  }\n  return null;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        supportsPassive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wheelEvent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 'onwheel' in document.createElement('div') ? 'wheel' : 'mousewheel'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wheelOpt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : supportsPassive ? { passive: true } : false\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/puzzle-game/level.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  0: {\n    task: 'Erzeuge einen beliebegen gueltigen Graphen',\n    nodes: [],\n    links: [],\n    points: 20\n  },\n  1: {\n    task: 'Stellen Sie die nachfolgenden Sprache als deterministische endliche Automaten dar \\n L = {w | w ∈ {0,1}∗ der nur Wörter akzeptiert, die mit 0 anfangen}',\n    nodes: [\n      { id: 0, text: \"A\" },\n      { id: 1, text: \"B\", figure: 'Ring' },\n      { id: 2, text: \"C\" }\n\n    ],\n    links: [\n      { key: 0, from: 0, to: 1, text: '0' },\n      { key: 1, from: 0, to: 2, text: '1' },\n      { key: 2, from: 2, to: 2, text: '0,1' },\n      { key: 4, from: 1, to: 1, text: '0,1' },\n    ],\n    rightWords: function () {\n      const wordGenerator = new WordGenerator();\n      const words = wordGenerator.generateWords({\n        nodes: [\n          { id: 0, text: \"A\" },\n          { id: 1, text: \"B\", figure: 'Ring' },\n          { id: 2, text: \"C\" }\n        ],\n        links: [\n          { key: \"Start\", from: -1, to: 0, text: 'Start' },\n          { key: 0, from: 0, to: 1, text: '0' },\n          { key: 1, from: 0, to: 2, text: '1' },\n          { key: 2, from: 2, to: 2, text: '0,1' },\n          { key: 4, from: 1, to: 1, text: '0,1' },\n        ],\n      });\n      return words;\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"1\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\" },\n        { id: 1, text: \"B\", figure: 'Ring' },\n        { id: 2, text: \"C\" }\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '0' },\n        { key: 1, from: 0, to: 2, text: '1' },\n        { key: 2, from: 2, to: 2, text: '0,1' },\n        { key: 4, from: 1, to: 1, text: '0,1' },\n      ],\n    },\n    points: 20\n  },\n  2: {\n    task: 'Stellen Sie die nachfolgenden Sprache als deterministische endliche Automaten dar \\n L = {w | w ∈ {0,1}∗ und an jeder ungerade Position von w eine 1 steht}',\n    nodes: [\n      { id: 0, text: \"A\", figure: 'Ring' },\n      { id: 1, text: \"B\", figure: 'Ring' },\n      { id: 2, text: \"C\" }\n    ],\n    links: [\n      { key: 0, from: 0, to: 1, text: '1' },\n      { key: 1, from: 1, to: 0, text: '0,1' },\n      { key: 2, from: 0, to: 2, text: '0' },\n      { key: 3, from: 2, to: 2, text: '0,1' }\n\n    ],\n    rightWords: function () {\n      const wordGenerator = new WordGenerator();\n      const words = wordGenerator.generateWords({\n        nodes: [\n          { id: 0, text: \"A\", figure: 'Ring' },\n          { id: 1, text: \"B\", figure: 'Ring' },\n          { id: 2, text: \"C\" }\n        ],\n        links: [\n          { key: \"Start\", from: -1, to: 0, text: 'Start' },\n          { key: 0, from: 0, to: 1, text: '1' },\n          { key: 1, from: 1, to: 0, text: '0,1' },\n          { key: 2, from: 0, to: 2, text: '0' },\n          { key: 3, from: 2, to: 2, text: '0,1' }\n        ],\n      });\n      return words;\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"1\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\", figure: 'Ring' },\n        { id: 1, text: \"B\", figure: 'Ring' },\n        { id: 2, text: \"C\" }\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '1' },\n        { key: 1, from: 1, to: 0, text: '0,1' },\n        { key: 2, from: 0, to: 2, text: '0' },\n        { key: 3, from: 2, to: 2, text: '0,1' }\n      ],\n    },\n    points: 20\n  },\n  3: {\n    task: 'Stellen Sie die nachfolgenden Sprache als deterministische endliche Automaten dar \\n L = {w | w ∈ {0,1}∗ und w entha ̈lt das Teilwort 110}',\n    nodes: [\n      { id: 0, text: \"A\" },\n      { id: 1, text: \"B\" },\n      { id: 2, text: \"C\" },\n      { id: 3, text: \"D\", figure: 'Ring' }\n    ],\n    links: [\n      { key: 0, from: 0, to: 1, text: '1' },\n      { key: 1, from: 0, to: 0, text: '0' },\n      { key: 2, from: 1, to: 0, text: '0' },\n      { key: 3, from: 1, to: 2, text: '1' },\n      { key: 4, from: 2, to: 2, text: '1' },\n      { key: 5, from: 2, to: 3, text: '0' },\n      { key: 6, from: 3, to: 3, text: '0,1' }\n    ],\n    rightWords: function () {\n      const wordGenerator = new WordGenerator();\n      const words = wordGenerator.generateWords({\n        nodes: [\n          { id: 0, text: \"A\" },\n          { id: 1, text: \"B\" },\n          { id: 2, text: \"C\" },\n          { id: 3, text: \"D\", figure: 'Ring' }\n        ],\n        links: [\n          { key: \"Start\", from: -1, to: 0, text: 'Start' },\n          { key: 0, from: 0, to: 1, text: '1' },\n          { key: 1, from: 0, to: 0, text: '0' },\n          { key: 2, from: 1, to: 0, text: '0' },\n          { key: 3, from: 1, to: 2, text: '1' },\n          { key: 4, from: 2, to: 2, text: '1' },\n          { key: 5, from: 2, to: 3, text: '0' },\n          { key: 6, from: 3, to: 3, text: '0,1' }\n        ],\n      });\n      return words;\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"1\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\" },\n        { id: 1, text: \"B\" },\n        { id: 2, text: \"C\" },\n        { id: 3, text: \"D\", figure: 'Ring' }\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '1' },\n        { key: 1, from: 0, to: 0, text: '0' },\n        { key: 2, from: 1, to: 0, text: '0' },\n        { key: 3, from: 1, to: 2, text: '1' },\n        { key: 4, from: 2, to: 2, text: '1' },\n        { key: 5, from: 2, to: 3, text: '0' },\n        { key: 6, from: 3, to: 3, text: '0,1' }\n      ],\n    },\n    points: 20\n  },\n  4: {\n    task: 'Stellen Sie die nachfolgenden Sprache als deterministische endliche Automaten dar L = {w | w ∈ {0,1}}∗ und w hat eine Länge von maximal 2',\n    nodes: [\n      { id: 0, text: \"A\", },\n      { id: 1, text: \"B\", },\n      { id: 2, text: \"C\", figure: 'Ring' },\n      { id: 3, text: \"D\" }\n    ],\n    links: [\n      { key: \"Start\", from: -1, to: 0, text: 'Start' },\n      { key: 0, from: 0, to: 1, text: '0,1' },\n      { key: 1, from: 1, to: 2, text: '0,1' },\n      { key: 2, from: 2, to: 3, text: '0,1' },\n      { key: 3, from: 3, to: 3, text: '0,1' },\n    ],\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\", },\n        { id: 1, text: \"B\", },\n        { id: 2, text: \"C\", figure: 'Ring' },\n        { id: 3, text: \"D\" }\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '0,1' },\n        { key: 1, from: 1, to: 2, text: '0,1' },\n        { key: 2, from: 2, to: 3, text: '0,1' },\n        { key: 3, from: 3, to: 3, text: '0,1' },\n      ],//Referenzautomat\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"1\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    points: 20\n  },\n  5: {\n    task: '̈Gegeben sei die Sprache L1 = {w ∈ {0} *| |w| ist durch 3 teilbar}. Geben Sie einen deterministischen endlichen Automaten in Graphdarstellung an, der L1 erkennt',\n    nodes: [\n      { id: 0, text: \"A\", color: \"white\", figure: 'Ring' },\n      { id: 1, text: \"B\" },\n      { id: 2, text: \"C\" },\n    ],\n    links: [\n      { key: 0, from: 0, to: 1, text: '0' },\n      { key: 1, from: 1, to: 2, text: '0' },\n      { key: 2, from: 2, to: 0, text: '0' },\n    ],\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\", color: \"white\", figure: 'Ring' },\n        { id: 1, text: \"B\" },\n        { id: 2, text: \"C\" },\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '0' },\n        { key: 1, from: 1, to: 2, text: '0' },\n        { key: 2, from: 2, to: 0, text: '0' },\n      ],\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"0\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    points: 20\n  },\n  6: {\n    task: '̈Gegeben sei die Sprache L1 = {w ∈ {0} * : |w| ≥ 2 }. Geben Sie einen deterministischen endlichen Automaten in Graphdarstellung an, der L1 erkennt',\n    nodes: [\n      { id: 0, text: \"A\"},\n      { id: 1, text: \"B\" },\n      { id: 2, text: \"C\", figure: 'Ring'},\n    ],\n    links: [\n      { key: 0, from: 0, to: 1, text: '0,1' },\n      { key: 1, from: 1, to: 2, text: '0,1' },\n      { key: 2, from: 2, to: 2, text: '0,1' },\n    ],\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\"},\n        { id: 1, text: \"B\" },\n        { id: 2, text: \"C\", figure: 'Ring'},\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '0,1' },\n        { key: 1, from: 1, to: 2, text: '0,1' },\n        { key: 2, from: 2, to: 2, text: '0,1' },\n      ],\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"0\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    points: 20\n  },\n  7: {\n    task: '̈Gegeben sei die Sprache L1 = {w ∈ {0} * : |w| ≤ 2 }. Geben Sie einen deterministischen endlichen Automaten in Graphdarstellung an, der L1 erkennt',\n    nodes: [\n      { id: 0, text: \"A\", figure: 'Ring'},\n      { id: 1, text: \"B\", figure: 'Ring'},\n      { id: 2, text: \"C\", figure: 'Ring'},\n      { id: 3, text: \"D\"}\n    ],\n    links: [\n      { key: 0, from: 0, to: 1, text: '0,1' },\n      { key: 1, from: 1, to: 2, text: '0,1' },\n      { key: 2, from: 2, to: 3, text: '0,1' },\n      { key: 3, from: 3, to: 3, text: '0,1' }\n    ],\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\", figure: 'Ring'},\n        { id: 1, text: \"B\", figure: 'Ring'},\n        { id: 2, text: \"C\", figure: 'Ring'},\n        { id: 3, text: \"D\"}\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '0,1' },\n        { key: 1, from: 1, to: 2, text: '0,1' },\n        { key: 2, from: 2, to: 3, text: '0,1' },\n        { key: 3, from: 3, to: 3, text: '0,1' }\n      ],\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"0\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    points: 20\n  },\n  levels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/grammar/slice/grammar.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getGrammar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Grammar] test')\n                    \n                \n\n\n        \n    \n\n    src/app/shared/helpers/helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLastItemOfArray\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (arr: any[]): any[] => {\n  return arr[arr.length - 1];\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomGenChar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...args: any): string => {\n  if (args.length === 1) {\n    return args[0];\n  }\n\n  return Math.random() \n                    \n                \n\n\n        \n    \n\n    src/app/grammar/grammar.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        grammarAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['', '2', '3'].map((v) =>\n  trigger(`onVisible${v}`, [\n    transition(':enter', [\n      animate(\n        '{{speed1}}s 0s ease-in-out',\n        keyframes([\n          style({ transform: 'translateY(-30%)', color: 'black', opacity: 0 }),\n          style({ transform: 'translateY(0%)', color: 'black', opacity: 1 }),\n        ])\n      ),\n      animate(\n        '{{speed2}}s 0s ease-in-out',\n        keyframes([style({ color: 'blue', 'font-weight': 'bold' }), style({ color: 'black', 'font-weight': 'normal' })])\n      ),\n    ]),\n    transition(':leave', [\n      animate(\n        '0.2s 0s ease-out',\n        keyframes([\n          style({ transform: 'translateY(0%)', opacity: 1 }),\n          style({ transform: 'translateY(-30%)', opacity: 0 }),\n        ])\n      ),\n    ]),\n  ])\n)\n                    \n                \n\n\n        \n    \n\n    src/app/grammar/cyto-graph/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        grammarGraphConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  boxSelectionEnabled: false,\n  autounselectify: true,\n  layout: {\n    name: 'dagre',\n    nodeDimensionsIncludeLabels: true,\n  },\n  style: [\n    {\n      selector: 'node',\n      style: {\n        label: 'data(label)',\n        'background-color': 'white',\n        'text-valign': 'center',\n        width: '30px',\n        height: '30px',\n        'text-halign': 'center',\n        'border-color': 'black',\n        'border-opacity': '1',\n        'border-width': '1',\n      },\n    },\n    {\n      selector: 'edge',\n      style: {\n        width: 4,\n        'target-arrow-shape': 'triangle',\n        padding: '50px',\n        'line-color': '#9dbaea',\n        'target-arrow-color': '#9dbaea',\n        'curve-style': 'bezier',\n      },\n    },\n  ],\n  elements: {\n    nodes: [\n      { data: { id: 'nx', label: 'A' } },\n      { data: { id: 'n0', label: 'A' } },\n      { data: { id: 'n1', label: 'A' } },\n      { data: { id: 'n2', label: 'A' } },\n      { data: { id: 'n3', label: 'A' } },\n      { data: { id: 'n4', label: 'A' } },\n      { data: { id: 'n5', label: 'A' } },\n    ],\n    edges: [\n      { data: { source: 'nx', target: 'n0' } },\n      { data: { source: 'n0', target: 'n1' } },\n      { data: { source: 'n0', target: 'n2' } },\n      { data: { source: 'n2', target: 'n3' } },\n      { data: { source: 'n2', target: 'n4' } },\n      { data: { source: 'n2', target: 'n5' } },\n    ],\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/grammar/utils/introJS.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GrammarIntroConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Options\n\n                    \n                \n                \n                    \n                        Default value : {\n  steps: [\n    {\n      element: '#tool0',\n      intro: `\n        Starte Tour!: Startet eine Tour\n        Dokumentation: Externer Link zur Dokumentation\n          `,\n      position: 'left',\n    },\n    {\n      element: '#tool1',\n      intro: `\n        Generiere korrekten Ausdruck: Erzeugt ein zuf&auml;lligen richtigen Ausdruck\n        Generiere falschen Ausdruck: Erzeugt ein zuf&auml;lligen falschen Ausdruck\n          `,\n      position: 'left',\n    },\n    {\n      element: '#tool2',\n      intro:\n        'Eingabe: Manuelle Eingabe des StringsAuswertung: Auswertung des Ausdrucks (automatisch). Erscheint erst nach Eingabe!',\n      position: 'left',\n    },\n    {\n      element: '#tool3',\n      intro: 'Zeigt das 4-Tuple an mit: G = Grammatik, V = Nicht-Terminalzeichen, Σ = Terminalzeichen, R = Regeln',\n      position: 'right',\n    },\n    {\n      element: '#tool4',\n      intro:\n        'Animation der Ableitungen. Text kann markiert und kopiert werden. Zudem kann auch hier ein Ausdruck erzeugt werden. Bei falscher Eingabe wird der reverse Modus angezeigt',\n      position: 'right',\n    },\n    {\n      element: '#tool5',\n      intro:\n        'Steuerung der Animation (zum start, ein schritt zurueck, abspielen, pause, ein schritt nach vor, zum Ende)',\n      position: 'right',\n    },\n    {\n      element: '#tool6',\n      intro: 'Einstellung der Animationsgeschwindigkeit',\n      position: 'right',\n    },\n  ],\n  showBullets: true,\n  showButtons: true,\n  exitOnOverlayClick: false,\n  keyboardNavigation: true,\n  nextLabel: 'Weiter',\n  prevLabel: 'Zur&uuml;ck',\n  doneLabel: 'Fertig',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/grammar/slice/grammar.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        grammarReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(grammarActions.getGrammar, (state) => ({ ...state, grammar: state.grammar }))\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grammarSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: AppState) => state.grammar\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GrammarState\n\n                    \n                \n                \n                    \n                        Default value : {\n  grammar: new ExpressionGrammarModel(''),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectGrammarSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(grammarSelector, (state: GrammarState) => state.grammar)\n                    \n                \n\n\n        \n    \n\n    src/app/counter.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        increment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Counter Component] Increment', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[general] userLevel', props())\n                    \n                \n\n\n        \n    \n\n    src/app/puzzle-game/shapes/shape.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initRing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n\n  let GeneratorEllipseSpot1 = new go.Spot(0.156, 0.156);\n  let GeneratorEllipseSpot2 = new go.Spot(0.844, 0.844);\n\n  go.Shape.defineFigureGenerator(\"Ring\", function(shape, w, h) {\n    let rad = w / 2;\n    let geo = new go.Geometry();\n    let fig = new go.PathFigure(w, w / 2, true);  // clockwise\n\n    geo.add(fig);\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 0, 360, rad, rad, rad, rad).close());\n\n    let rad2 = Math.max(rad - 3, 0);\n\n    if (rad2 > 0) {\n      fig.add(new go.PathSegment(go.PathSegment.Move, w / 2 + rad2, w / 2))\n      fig.add(new go.PathSegment(go.PathSegment.Arc, 0, -360, rad, rad, rad2, rad2).close());\n    }\n\n    geo.spot1 = GeneratorEllipseSpot1;\n    geo.spot2 = GeneratorEllipseSpot2;\n    geo.defaultStretch = go.GraphObject.Uniform;\n\n    return geo;\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/app/dea/intro.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        introJsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Options\n\n                    \n                \n                \n                    \n                        Default value : {\n  steps: [\n    {\n      element: '#tool0',\n      intro: `\n        Generiere korrektes Reber-Wort: Erzeugt durch die DEA ein zufaelliges Wort, welches ein Reber Wort ist\n        Generiere falsches Reber-Wort: Erzeugt durch die DEA ein zufaelliges Wort, welches KEIN Reber Wort ist\n        Tech-Stack: Zeigt die Tools an, womit diese Seite implementiert wurde\n        Theorie: Wiki Artikel zu dem Thema DEA\n        Starte Tour!: Startet eine Tour\n          `,\n      position: 'left',\n    },\n    {\n      element: '#tool1',\n      intro:\n        'Eingabe: Manuelle Eingabe des StringsAusgabe: Auswertung des Wortes (automatisch)',\n      position: 'left',\n    },\n    {\n      element: '#tool2',\n      intro:\n        'Die Tabelle zeigt die Zustaende und das Eingabealphabet in Zusammenhang mit der Übergangsfunktion. Beim Ausfuehren des Codes, werden die Zeilen markiert',\n      position: 'right',\n    },\n    {\n      element: '#tool3',\n      intro:\n        'Canvas man kann intuitiv durch gedrueckt halten und bewegen, oder mit scroll sowohl zoomen, als auch den Graphen bewegen. Beim starten der Animation, werden die Zustaende animiert',\n      position: 'right',\n    },\n    {\n      element: '#tool4',\n      intro:\n        'Zeigt die Zustandsmenge (Q), das Eingabealphabet (E) und die Finalzustaende (F) an',\n      position: 'right',\n    },\n    {\n      element: '#tool5',\n      intro:\n        'Steuerung der Animation (zum start, ein schritt zurueck, abspielen, pause, ein schritt nach vor, zum Ende)',\n      position: 'right',\n    },\n    {\n      element: '#tool6',\n      intro: 'Einstellung der Animationsgeschwindigkeit',\n      position: 'right',\n    },\n  ],\n  showBullets: true,\n  showButtons: true,\n  exitOnOverlayClick: false,\n  keyboardNavigation: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogDataComponent.html":{"url":"components/DialogDataComponent.html","title":"component - DialogDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/puzzle-game/puzzle-game.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-data-example-dialog\n            \n\n\n\n\n            \n                templateUrl\n                dialog-data-example-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                            \n                                onNwxtLevelChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:450\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:454\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNwxtLevelChanged\n                        \n                    \n                \n            \n            \n                \nonNwxtLevelChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:458\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:452\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:451\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport * as go from 'gojs';\nimport { initRing } from \"./shapes/shape\";\nimport { DataSyncService, DiagramComponent } from \"gojs-angular\";\nimport produce from \"immer\";\nimport { game } from \"./level\";\nimport { DeaArray, WordGenerator } from './word-generator';\nimport { WordChecker } from './word-checker';\nimport { Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n\nclass DemoForceDirectedLayout extends go.ForceDirectedLayout {\n  // Override the makeNetwork method to also initialize\n  // ForceDirectedVertex.isFixed from the corresponding Node.isSelected.\n  override makeNetwork(coll) {\n    // call base method for standard behavior\n    const net = super.makeNetwork(coll);\n    net.vertexes.each(vertex => {\n      const node = vertex.node;\n      if (node !== null) (vertex as any).isFixed = node.isSelected;\n    });\n    return net;\n  }\n}\n\n\n@Component({\n  selector: 'app-puzzle-game',\n  templateUrl: './puzzle-game.component.html',\n  styleUrls: ['./puzzle-game.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PuzzleGameComponent implements OnChanges {\n  public diagramDivClassName = 'gojs-wrapper';\n  public paletteDivClassName = 'gojs-palette';\n  public game = game;\n  public activeLevel = parseInt(localStorage.getItem('activeLevel')!) || 0;\n  public highestLevel = parseInt(localStorage.getItem('highestLevel')!) || 0;\n  public score = parseInt(localStorage.getItem('score')!) || 0;\n\n  public task = game[this.activeLevel].task;\n  public observedDiagram: any = null;\n\n\n  public state: any = {\n    diagramNodeData: game[0].nodes,\n    diagramLinkData: game[0].links,\n    diagramModelData: { prop: 'value' },\n    skipsDiagramUpdate: false,\n    paletteNodeData: []\n  };\n\n  @ViewChild('myDiagram', { static: true }) public myDiagramComponent: DiagramComponent | undefined;\n\n  constructor(private cdr: ChangeDetectorRef, public dialog: MatDialog) { }\n\n\n  openDialog(check, word) {\n    const dialogRef = this.dialog.open(DialogDataComponent, {\n      width: '250px',\n      position: {\n        bottom: \"200px\",\n        right: \"100\"\n      },\n      data: {\n        winState: check,\n        onNext: this.loadNextLevel.bind(this),\n        word,\n      },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      //this.animal = result;\n    });\n  }\n\n  public ngOnChanges() {\n    // whenever showGrid changes, update the diagram.grid.visible in the child DiagramComponent\n    if (this.myDiagramComponent && this.myDiagramComponent.diagram instanceof go.Diagram) {\n      //console.log(this.myDiagramComponent.diagram)\n    }\n  }\n\n\n  public ngAfterViewInit() {\n    if (this.observedDiagram) return;\n    this.observedDiagram = this.myDiagramComponent?.diagram;\n    this.cdr.detectChanges(); // IMPORTANT: without this, Angular will throw ExpressionChangedAfterItHasBeenCheckedError (dev mode only)\n\n    const appComp: any = this;\n    // listener for inspector\n    this.myDiagramComponent?.diagram.addDiagramListener('ChangedSelection', function (e) {\n      if (e.diagram.selection.count === 0) {\n        appComp.selectedNodeData = null;\n      }\n      const node = e.diagram.selection.first();\n      appComp.state = produce(appComp.state, draft => {\n        if (node instanceof go.Node) {\n          var idx = draft.diagramNodeData.findIndex(nd => nd.id == node.data.id);\n          var nd = draft.diagramNodeData[idx];\n          draft.selectedNodeData = nd;\n        } else {\n          draft.selectedNodeData = null;\n        }\n      });\n    });\n  } // end ngAfterViewInit\n\n  public initDiagram(): go.Diagram {\n    const $ = go.GraphObject.make;\n    const diagram = $(go.Diagram, {\n      'undoManager.isEnabled': true,\n      \"linkingTool.isUnconnectedLinkValid\": true,\n      \"draggingTool.dragsLink\": true,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"relinkingTool.isUnconnectedLinkValid\": true,\n      \"relinkingTool.portGravity\": 20,\n      layout: new DemoForceDirectedLayout(),\n      model: new go.GraphLinksModel({\n        linkFromPortIdProperty: \"fromPort\",\n        linkToPortIdProperty: \"toPort\",\n        nodeKeyProperty: 'id',\n        linkKeyProperty: 'key'\n      })\n    });\n\n\n\n    // define the Node template\n    diagram.nodeTemplate = $(go.Node, \"Auto\", { zOrder: -5 }, new go.Binding(\"layerName\", \"Background\"), $(go.Shape, \"Circle\", { fill: \"lightgray\" }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.Panel, \"Table\", $(go.RowColumnDefinition, {\n      column: 0, alignment: go.Spot.Left\n    }), $(go.TextBlock, {\n      column: 0,\n      row: 0,\n      columnSpan: 3,\n      editable: true,\n      alignment: go.Spot.Center,\n      font: \"bold 10pt sans-serif\",\n      margin: new go.Margin(4, 2)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()), $(go.Panel, \"Horizontal\", { column: 1, row: 1 }, $(go.Shape, {\n      width: 6,\n      height: 6,\n      portId: \"A\",\n      toLinkable: true,\n      fromLinkable: true,\n      cursor: 'pointer',\n      fromLinkableDuplicates: true,\n      toLinkableDuplicates: true,\n      fromLinkableSelfNode: true,\n      toLinkableSelfNode: true\n    }))));\n\n    diagram.linkTemplate = $(go.Link, { zOrder: 50 }, new go.Binding(\"layerName\", \"Foreground\"), new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 10,\n          background: 'white',\n          editable: true,\n          width: 30,\n          height: 30,\n          alignment: go.Spot.Center,\n          verticalAlignment: go.Spot.Center,\n          textAlign: 'center'\n        }, new go.Binding(\"text\", \"text\").makeTwoWay()));\n\n    return diagram;\n  }\n\n  public diagramModelChange = (changes: go.IncrementalData) => {\n    if (!changes) return;\n    const appComp = this;\n    this.state = produce(this.state, draft => {\n      // set skipsDiagramUpdate: true since GoJS already has this update\n      // this way, we don't log an unneeded transaction in the Diagram's undoManager history\n      draft.skipsDiagramUpdate = true;\n      draft.diagramNodeData = DataSyncService.syncNodeData(changes, draft.diagramNodeData, appComp.observedDiagram.model);\n      draft.diagramLinkData = DataSyncService.syncLinkData(changes, draft.diagramLinkData, appComp.observedDiagram.model);\n      draft.diagramModelData = DataSyncService.syncModelData(changes, draft.diagramModelData);\n      // If one of the modified nodes was the selected node used by the inspector, update the inspector selectedNodeData object\n      const modifiedNodeDatas = changes.modifiedNodeData;\n      if (modifiedNodeDatas && draft.selectedNodeData) {\n        for (let i = 0; i  {\n           draft.skipsDiagramUpdate = true;\n           draft.diagramNodeData = nodes;\n           draft.diagramLinkData = links;\n         }); */\n  };\n\n  public initPalette(): go.Palette {\n    const $ = go.GraphObject.make;\n    const palette = $(go.Palette);\n    initRing();\n\n    palette.padding = new go.Margin(100, 0, 0, 0);\n\n    // define the Node template\n    palette.nodeTemplate = $(go.Node, \"Horizontal\", {\n      height: 120, width: 80, selectionAdorned: false, cursor: 'grab'\n    }, $(go.Shape, \"Circle\", {\n      width: 30, height: 30\n    }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.TextBlock, {\n      margin: 2, font: \"bold 16px sans-serif\"\n    }, new go.Binding(\"text\", \"internal\")), $(go.TextBlock, { margin: 2, font: \" 11px sans-serif\" }, new go.Binding(\"text\", \"key\")),);\n\n    palette.linkTemplate = $(go.Link,\n      {\n        height: 120, selectionAdornmentTemplate: $(go.Adornment, \"Link\", $(go.Shape, {\n          isPanelMain: true, fill: null, stroke: \"deepskyblue\", strokeWidth: 0\n        }), $(go.Shape,  // the arrowhead\n          { toArrow: \"Standard\", stroke: null }))\n      },\n      {\n        routing: go.Link.AvoidsNodes, curve: go.Link.JumpOver, corner: 5, toShortLength: 4\n      }, new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n        { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n          { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n            margin: 4, background: 'white'\n          }, new go.Binding(\"text\", \"key\"))),\n\n      palette.model = new go.GraphLinksModel([  // specify the contents of the Palette\n        { key: \"Ende\", color: \"white\", internal: \"\", stroke: \"black\", figure: 'Ring' },\n        { key: \"Knoten\", color: \"white\", internal: \"\", stroke: \"black\" },\n      ], [// the Palette also has a disconnected Link, which the user can drag-and-drop\n        { key: 'Start', points: new go.List().addAll([new go.Point(10, 0), new go.Point(70, 0)]) },\n\n      ]);\n\n    return palette;\n  }\n\n  public reinitModel() {\n\n    let text = \"Bist du dir sicher?!\\nOK or Cancel.\";\n    if (confirm(text) == true) {\n      text = \"You pressed OK!\";\n      if (this.myDiagramComponent) {\n        this.loadDiagram(this.activeLevel);\n      }\n    } else {\n      text = \"You canceled!\";\n    }\n  }\n\n\n  nextDiagram(value: number) {\n    if (this.myDiagramComponent) {\n      localStorage.setItem('activeLevel', value.toString());\n      this.activeLevel = value;\n      this.task = game[value].task\n      this.myDiagramComponent.clear();\n      this.state = produce(this.state, draft => {\n        draft.skipsDiagramUpdate = false;\n        draft.diagramNodeData = game[value].nodes;\n        draft.diagramLinkData = game[value].links as any;\n      });\n    }\n  }\n\n  loadDiagram(value: number) {\n    if (value  {\n          draft.skipsDiagramUpdate = false;\n          draft.diagramNodeData = game[value].nodes;\n          draft.diagramLinkData = game[value].links as any;\n        });\n      }\n    }\n\n  }\n\n  validateDiagram() {\n\n    const wordGenerator = new WordGenerator();\n    /*const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }*/\n    //console.log(wordGenerator.generateWords(deaObject));\n\n    //console.log(wordGenerator.generateRandomWords([\"1\", \"0\"]));\n\n    //console.log(\"validate data\", this.state);\n  }\n  checkDea() {\n\n\n    if (this.activeLevel === 0) {\n      this.openDialog(true, \"\");\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n    if (!deaObject.links.find(link => link.key === \"Start\")) {\n      alert(\"Bitte füge ein StartLink hinzu\");\n      return;\n    }\n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n    const referenzautomat = game[this.activeLevel].solution;\n\n\n    let isCorrect = true;\n    let word;\n\n    for (let i = 0; i  this.highestLevel) {\n        localStorage.setItem('highestLevel', this.activeLevel.toString());\n        this.highestLevel = this.activeLevel;\n        this.score = game.levels.filter(a => a  acc + game[next].points, 0)\n      }\n      this.nextDiagram(this.activeLevel);\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n\n    const referenzautomat = game[this.activeLevel].solution;\n    for (let i = 0; i  this.highestLevel) {\n      localStorage.setItem('highestLevel', this.activeLevel.toString());\n      this.highestLevel = this.activeLevel;\n      this.score = game.levels.filter(a => a  acc + game[next].points, 0)\n    }\n    this.nextDiagram(this.activeLevel,);\n\n  }\n\n  resetGame() {\n\n    if (confirm('Bist du dir sicher, dass du alle Level und deinen Punktestand zurücksetzen möchtest?')) {\n      localStorage.setItem('activeLevel', \"0\");\n      this.activeLevel = 0;\n\n      localStorage.setItem('highestLevel', \"0\");\n      this.highestLevel = 0;\n\n      localStorage.setItem('score', \"0\");\n      this.score = 0;\n    } else {\n\n    }\n\n\n  }\n}\n\nexport interface DialogData {\n  winState: boolean;\n  onNext: () => void;\n  word: {\n    word: string;\n    vergleich: {\n      yourGraph: boolean;\n      referenzGraph: boolean;\n    }, index?: number;\n\n\n  };\n}\n\n@Component({\n  selector: 'app-dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n})\nexport class DialogDataComponent {\n  constructor(public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onNwxtLevelChanged(): void {\n    this.data.onNext();\n    this.dialogRef.close();\n\n  }\n\n\n\n}\n\n\n\n\n    \n\n    \n        Das Ergebnis ist {{data.winState ? 'richtig' : 'falsch'}}\n\n    \n         Das Wort: {{data.word.word}} wird nicht von der Sprache erkannt\n        Dein Graph liefert {{data.word.vergleich.yourGraph}} -->\n        der Referenzgraph liefert {{data.word.vergleich.referenzGraph}} -->\n        Der Fehler ist an der Stelle {{data.word.index! + 1}} im Wort \n    \n\n\n\n    Ok\n\n    nextLevel\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Das Ergebnis ist {{data.winState ? \\'richtig\\' : \\'falsch\\'}}             Das Wort: {{data.word.word}} wird nicht von der Sprache erkannt        Dein Graph liefert {{data.word.vergleich.yourGraph}} -->        der Referenzgraph liefert {{data.word.vergleich.referenzGraph}} -->        Der Fehler ist an der Stelle {{data.word.index! + 1}} im Wort         Ok    nextLevel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogDataComponent', 'selector': 'app-dialog-data-example-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
