var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.223,1,0.945]],["body/components/AppComponent.html",[0,0.381,1,1.704,2,1.689,3,0.246,4,0.195,5,1.266,6,1.524,7,1.388,8,1.388,9,0.22,10,3.964,11,1.388,12,1.782,13,1.697,14,3.295,15,1.613,16,6.455,17,1.54,18,5.866,19,0.326,20,1.054,21,6.455,22,0.568,23,0.018,24,0.957,25,1.85,26,1.326,27,3.211,28,0.787,29,4.605,30,0.503,31,0.535,32,0.272,33,0.123,34,4.605,35,3.211,36,1.545,37,3.791,38,4.605,39,2.165,40,2.976,41,2.976,42,3.211,43,3.542,44,4.605,45,2.43,46,3.964,47,2.872,48,4.605,49,4.605,50,2.165,51,2.43,52,3.095,53,4.513,54,3.791,55,5.05,56,3.524,57,3.791,58,2.587,59,3.227,60,4.605,61,1.388,62,1.769,63,1.689,64,1.388,65,1.869,66,1.388,67,0.857,68,1.388,69,1.154,70,1.613,71,1.769,72,1.102,73,1.388,74,1.154,75,1.769,76,1.052,77,1.266,78,1.154,79,1.266,80,1.154,81,1.388,82,1.154,83,1.388,84,1.154,85,1.388,86,1.154,87,1.154,88,1.388,89,1.154,90,1.388,91,1.388,92,1.266,93,1.388,94,1.102,95,1.388,96,1.102,97,1.388,98,1.102,99,1.388,100,1.052,101,1.209,102,1.769,103,1.154,104,1.388,105,1.052,106,0.535,107,1.154,108,1.209,109,1.388,110,1.388,111,0.014,112,0.014]],["title/modules/AppModule.html",[113,2.119,114,2.643]],["body/modules/AppModule.html",[0,0.415,1,1.826,3,0.196,4,0.156,9,0.176,13,0.8,23,0.019,26,1.057,30,0.851,31,0.427,52,1.937,72,1.208,74,1.688,76,1.538,80,1.688,82,1.688,87,1.688,89,1.729,94,1.611,96,1.65,98,0.879,100,1.575,101,1.325,103,1.729,105,1.419,106,0.587,111,0.012,112,0.012,114,5.444,115,1.726,116,2.664,117,3.161,118,3.161,119,3.161,120,3.161,121,4.35,122,4.35,123,2.664,124,1.937,125,1.826,126,2.824,127,3.032,128,2.836,129,3.161,130,3.671,131,2.836,132,4.346,133,3.538,134,2.573,135,3.671,136,3.671,137,3.671,138,3.671,139,3.671,140,2.824,141,3.671,142,2.824,143,3.538,144,2.372,145,3.671,146,3.671,147,3.671,148,3.161,149,3.161,150,3.884,151,2.824,152,3.262,153,3.671,154,3.161,155,5.048,156,2.062,157,5.048,158,3.884,159,3.538,160,2.87,161,4.355,162,3.671,163,3.671,164,2.373,165,2.824,166,2.824,167,3.671,168,3.671,169,2.205,170,3.671,171,3.161,172,3.884,173,3.671,174,3.671,175,2.824,176,2.372,177,3.262,178,3.671,179,4.346,180,5.048,181,3.161,182,3.671,183,3.671,184,2.205,185,3.671,186,3.032,187,2.062,188,1.826,189,3.161,190,0.964,191,3.671,192,3.671,193,3.671,194,3.671,195,3.671,196,3.671,197,3.671,198,3.671,199,3.671,200,3.671,201,3.671,202,3.671,203,3.671,204,3.161,205,3.671,206,3.671,207,3.671,208,1.215,209,0.8,210,5.048,211,4.606,212,3.161,213,3.671,214,5.048,215,3.161,216,2.573,217,3.671,218,3.161,219,4.967,220,2.824,221,3.671,222,3.671,223,1.215]],["title/modules/AppRoutingModule.html",[113,2.119,121,2.437]],["body/modules/AppRoutingModule.html",[3,0.312,4,0.248,9,0.28,23,0.018,30,0.741,31,0.68,32,0.345,33,0.156,111,0.016,112,0.016,115,2.75,121,4.385,128,3.286,131,3.811,142,5.22,143,5.023,144,3.78,209,1.275,224,5.849,225,5.849,226,5.849,227,5.849]],["title/injectables/AuthGuard.html",[161,2.643,228,1.515]],["body/injectables/AuthGuard.html",[3,0.255,4,0.202,9,0.228,14,2.683,19,0.338,22,0.741,23,0.018,28,1.026,30,0.792,31,0.555,32,0.282,33,0.127,36,1.143,67,0.877,111,0.014,112,0.014,144,3.086,158,5.299,159,4.974,160,2.375,161,4.207,164,2.245,190,1.576,204,4.112,209,1.041,219,4.112,223,1.581,228,2.411,229,2.683,230,4.112,231,3.606,232,6.565,233,1.19,234,2.39,235,5.652,236,6.565,237,1.19,238,4.776,239,7.244,240,3.879,241,4.776,242,1.505,243,1.437,244,4.776,245,6.888,246,2.509,247,6.888,248,4.776,249,6.888,250,0.946,251,4.776,252,4.776,253,2.127,254,1.825,255,3.347,256,4.776,257,2.869,258,2.018,259,4.776,260,3.086,261,4.776,262,4.776,263,2.507,264,2.869,265,4.776,266,4.776,267,4.776,268,6.003,269,4.776,270,4.776,271,4.776,272,4.776,273,4.776,274,6.565,275,6.565,276,6.003,277,4.776,278,6.003,279,6.003,280,4.776,281,4.776,282,3.086,283,3.086,284,4.776,285,4.776,286,4.776,287,4.776]],["title/modules/AuthModule.html",[113,2.119,288,2.901]],["body/modules/AuthModule.html",[3,0.314,4,0.25,9,0.282,23,0.018,30,0.745,31,0.685,32,0.348,33,0.157,111,0.016,112,0.016,115,2.77,127,3.54,128,3.31,131,3.828,186,4.093,187,3.31,288,5.242,289,5.893]],["title/components/CytoGraphComponent.html",[0,0.223,69,0.945]],["body/components/CytoGraphComponent.html",[0,0.341,1,0.922,2,1.455,3,0.196,4,0.156,5,1.39,6,1.911,7,1.109,8,1.109,9,0.176,11,1.109,12,1.746,13,1.661,19,0.26,20,0.908,22,0.851,23,0.018,25,1.477,26,1.059,28,1.245,30,0.679,31,0.428,32,0.217,33,0.098,36,0.88,61,1.109,62,1.524,63,1.455,64,1.109,65,1.71,66,1.109,67,0.909,68,1.109,69,1.559,70,1.792,71,1.524,72,0.88,73,1.109,74,0.922,75,1.524,76,0.84,77,1.011,78,0.922,79,1.011,80,0.922,81,1.109,82,0.922,83,1.109,84,0.922,85,1.109,86,0.922,87,0.922,88,1.109,89,0.922,90,1.109,91,1.109,92,1.011,93,1.109,94,0.88,95,1.109,96,0.88,97,1.109,98,0.88,99,1.109,100,0.84,101,0.966,102,1.524,103,0.922,104,1.109,105,0.84,106,0.428,107,0.922,108,0.966,109,1.109,110,1.109,111,0.012,112,0.012,123,3.047,209,0.802,233,1.002,234,2.373,237,0.729,242,1.267,243,1.21,250,1.232,258,2.136,290,5.651,291,4.747,292,2.829,293,1.102,294,3.469,295,3.266,296,3.493,297,5.94,298,5.94,299,3.036,300,4.784,301,3.888,302,4.047,303,4.352,304,4.972,305,4.352,306,3.166,307,4.784,308,4.972,309,4.358,310,4.443,311,4.018,312,3.166,313,3.888,314,3.678,315,1.941,316,3.732,317,4.352,318,4.047,319,3.542,320,3.166,321,5.354,322,3.166,323,4.352,324,5.181,325,5.055,326,5.055,327,2.839,328,4.352,329,1.263,330,4.352,331,4.352,332,5.354,333,3.678,334,2.209,335,3.678,336,3.678,337,3.166,338,4.443,339,4.352,340,4.047,341,3.542,342,3.542,343,2.829,344,2.377,345,1.554,346,2.578,347,3.166,348,1.406,349,3.166,350,1.829,351,3.166,352,2.066,353,3.166,354,2.209,355,1.455,356,1.011,357,1.554,358,3.166,359,4.352,360,3.166,361,2.829,362,2.829,363,2.578,364,2.377,365,2.829,366,3.166,367,3.166]],["title/injectables/CytoGraphService.html",[228,1.515,311,2.437]],["body/injectables/CytoGraphService.html",[3,0.18,4,0.143,9,0.162,14,1.898,19,0.239,20,0.856,22,0.78,23,0.019,24,1.147,25,2.407,26,1.726,28,1.176,30,0.521,31,0.393,32,0.199,33,0.09,47,3.241,52,1.783,54,3.566,57,4.084,67,0.696,106,0.554,111,0.011,112,0.011,208,1.984,209,1.525,223,1.118,228,1.914,229,1.898,233,0.944,234,2.547,237,1.094,242,1.194,243,1.14,246,2.415,250,1.094,254,1.291,257,2.029,290,5.383,291,4.521,296,3.1,311,3.079,319,2.368,329,1.136,348,2.767,355,1.372,356,1.31,363,2.368,368,2.599,369,4.751,370,4.751,371,4.751,372,3.665,373,5.16,374,4.102,375,4.102,376,4.102,377,3.93,378,2.909,379,4.596,380,2.514,381,2.909,382,4.102,383,2.909,384,4.102,385,2.909,386,3.868,387,4.862,388,1.734,389,2.909,390,2.909,391,3.665,392,4.102,393,4.102,394,4.102,395,4.102,396,5.646,397,4.751,398,5.16,399,5.646,400,4.102,401,6.282,402,3.756,403,3.985,404,3.367,405,4.102,406,4.102,407,3.339,408,4.611,409,1.194,410,3.6,411,4.751,412,2.909,413,5.16,414,5.441,415,4.611,416,2.909,417,4.429,418,4.596,419,2.909,420,1.734,421,2.909,422,4.751,423,2.909,424,1.172,425,1.68,426,4.102,427,2.909,428,3.868,429,2.909,430,2.909,431,2.909,432,2.909,433,2.909,434,2.909,435,2.368,436,2.909,437,4.102,438,2.909,439,2.599,440,2.599,441,2.909,442,2.909,443,2.368,444,1.505,445,2.909,446,2.029,447,2.368]],["title/classes/DEAException.html",[33,0.101,448,2.643]],["body/classes/DEAException.html",[3,0.291,4,0.231,9,0.261,19,0.386,20,1.169,22,0.89,23,0.018,24,1.627,28,1.232,32,0.322,33,0.145,52,3.434,67,0.796,111,0.015,112,0.015,231,3.909,237,1.08,242,1.366,243,1.304,387,5.814,448,4.561,449,2.875,450,4.691,451,5.814,452,5.668,453,6.508,454,6.508,455,5.449,456,5.449,457,5.449,458,4.691,459,4.691,460,5.449,461,5.449]],["title/interfaces/DeaArray.html",[462,0.678,463,1.68]],["body/interfaces/DeaArray.html",[3,0.233,4,0.185,9,0.208,19,0.471,20,1.017,22,0.699,23,0.018,24,1.547,32,0.393,33,0.116,36,1.505,39,3.13,106,0.774,111,0.013,112,0.013,190,1.748,209,1.634,283,2.816,355,1.986,380,2.299,388,2.289,409,1.419,444,1.941,446,2.618,462,1.13,463,3.073,464,1.941,465,1.941,466,2.618,467,2.816,468,3.63,469,3.13,470,3.999,471,3.876,472,2.167,473,2.674,474,1.586,475,2.167,476,1.941,477,3.054,478,3.581,479,4.064,480,3.054,481,3.968,482,2.521,483,3.054,484,2.167,485,3.054,486,2.049,487,2.167,488,3.054,489,2.299,490,3.054,491,3.054,492,3.054,493,2.816,494,2.816,495,2.816,496,2.816,497,3.054,498,3.533,499,3.054,500,1.941,501,3.054,502,3.054,503,3.659,504,3.054,505,3.054,506,3.054,507,3.659,508,3.659,509,3.659,510,3.054,511,3.054,512,3.054,513,3.054,514,3.054,515,2.816,516,3.054,517,3.968,518,3.054,519,3.401,520,2.662,521,3.18,522,3.968,523,3.054,524,3.054,525,3.054,526,3.054,527,3.054,528,3.968,529,3.054,530,3.968,531,4.302,532,2.618,533,2.816,534,2.816,535,2.167,536,3.054,537,2.816,538,3.054,539,2.816,540,2.816,541,3.054,542,2.393,543,3.054,544,3.054,545,3.054,546,3.054]],["title/components/DeaComponent.html",[0,0.223,72,0.903]],["body/components/DeaComponent.html",[0,0.235,1,0.496,2,0.916,3,0.106,4,0.135,5,0.544,6,0.655,7,0.597,8,0.597,9,0.095,11,0.597,12,1.609,13,1.526,15,0.874,17,0.835,19,0.225,20,0.571,22,0.827,23,0.019,24,1.284,25,2.481,26,1.778,27,2.27,28,1.263,30,0.702,31,0.23,32,0.117,33,0.053,35,2.79,36,1.092,37,2.576,42,1.582,43,2.446,45,1.678,46,5.181,47,2.543,50,2.509,51,1.678,52,1.678,53,1.523,54,2.576,57,2.949,58,1.786,59,2.229,61,0.597,62,0.959,63,0.916,64,0.597,65,1.255,66,0.597,67,0.73,68,0.597,69,0.496,70,1.096,71,0.959,72,1.092,73,0.597,74,0.797,75,0.959,76,0.452,77,1.374,78,0.496,79,1.096,80,0.496,81,0.597,82,0.496,83,0.597,84,0.496,85,0.597,86,0.496,87,0.496,88,0.597,89,0.496,90,0.959,91,0.597,92,0.544,93,0.597,94,0.474,95,0.597,96,0.474,97,0.597,98,0.474,99,0.597,100,0.452,101,0.52,102,0.959,103,0.496,104,0.597,105,0.452,106,0.23,107,0.496,108,0.835,109,0.597,110,0.597,111,0.007,112,0.007,154,1.704,156,1.112,190,0.52,208,1.053,209,1.164,233,0.63,234,1.451,237,0.63,242,0.999,243,0.954,250,1.342,253,1.775,254,0.757,258,2.256,291,1.279,293,0.693,296,1.112,301,2.446,302,2.793,307,3.511,309,3.931,310,3.066,311,2.949,313,3.066,315,1.045,316,1.279,318,1.387,327,1.786,329,1.303,338,3.066,344,1.279,345,2.256,348,2.412,350,2.655,352,2.998,354,2.394,356,0.874,364,1.279,372,3.511,377,2.998,379,1.387,386,1.387,402,0.985,403,2.96,404,2.564,409,1.715,410,1.189,418,1.387,420,1.158,424,1.104,425,2.901,428,2.229,435,1.387,447,1.387,451,3.845,452,4.63,458,3.431,459,1.704,473,0.795,474,1.661,484,0.985,498,2.239,515,2.055,520,0.931,521,2.564,547,1.704,548,1.383,549,3.986,550,3.18,551,3.986,552,3.986,553,3.986,554,3.986,555,3.986,556,3.986,557,4.829,558,3.986,559,3.066,560,3.986,561,3.198,562,4.564,563,2.738,564,4.564,565,3.929,566,1.661,567,3.066,568,1.786,569,3.511,570,3.511,571,3.511,572,3.986,573,3.929,574,3.929,575,3.986,576,3.929,577,1.98,578,3.23,579,3.37,580,3.18,581,1.98,582,1.98,583,1.98,584,1.98,585,2.738,586,3.929,587,1.98,588,1.704,589,1.98,590,1.98,591,1.98,592,1.98,593,2.738,594,1.98,595,1.704,596,1.98,597,1.98,598,1.98,599,1.98,600,1.98,601,1.98,602,1.98,603,1.98,604,2.738,605,1.98,606,3.066,607,1.98,608,3.066,609,1.98,610,1.98,611,3.929,612,2.564,613,2.738,614,1.98,615,2.738,616,1.98,617,1.98,618,3.986,619,3.18,620,4.564,621,1.98,622,1.98,623,3.066,624,1.98,625,3.18,626,1.98,627,1.98,628,3.431,629,1.98,630,1.189,631,1.98,632,2.738,633,1.387,634,1.523,635,1.98,636,1.98,637,1.704,638,1.704,639,1.704,640,2.446,641,1.523,642,1.704,643,3.066,644,1.704,645,1.98,646,1.98,647,1.98,648,1.98,649,2.103,650,1.98,651,1.98,652,3.986,653,5.833,654,1.98,655,1.704,656,1.98,657,1.279,658,1.98,659,1.98,660,1.98,661,1.98,662,1.523,663,1.98,664,1.98,665,3.18,666,1.523,667,3.986,668,3.18,669,1.98,670,1.387,671,1.98,672,1.98,673,1.98,674,3.18,675,3.18,676,1.98,677,1.98,678,4.999,679,3.18,680,3.18,681,3.18,682,4.564,683,1.98,684,4.564,685,1.98,686,1.98,687,2.738,688,1.98,689,1.523,690,1.98,691,1.98,692,1.98,693,1.98,694,1.98,695,1.98,696,4.106,697,2.055,698,3.929,699,2.738,700,2.738,701,2.446,702,2.446,703,2.738,704,2.446,705,2.446,706,3.511,707,3.18,708,3.929,709,4.595,710,4.564,711,1.98,712,3.18,713,4.564,714,1.416,715,1.344,716,1.344,717,1.678,718,2.229,719,1.786,720,2.446,721,2.446,722,3.18,723,2.738,724,2.738,725,2.738,726,2.738,727,3.18,728,2.738,729,2.738,730,2.738,731,3.206,732,1.98,733,2.27,734,1.523,735,2.741,736,1.704,737,1.704,738,1.523,739,2.486,740,1.112,741,3.929,742,3.23,743,1.91,744,2.394,745,3.206,746,2.738,747,1.189,748,1.982,749,1.704,750,1.704,751,1.523,752,1.523,753,1.704,754,2.949,755,2.446,756,2.446,757,1.704,758,1.704,759,1.704,760,1.189,761,1.704,762,1.91,763,1.523,764,1.704,765,1.704,766,1.704,767,1.704,768,1.704,769,1.704,770,1.704,771,2.738,772,1.704,773,1.98,774,1.189,775,1.112,776,1.704,777,3.845,778,1.279,779,1.112,780,1.523,781,1.523,782,1.523,783,1.387,784,1.523,785,1.704,786,1.189,787,1.704,788,2.738,789,1.704,790,1.189,791,1.704,792,1.704,793,2.738,794,1.704,795,1.704,796,2.738,797,1.91,798,2.738,799,3.929,800,1.704,801,1.704,802,1.523,803,1.704,804,1.704]],["title/interfaces/DeaLink.html",[462,0.678,470,2.266]],["body/interfaces/DeaLink.html",[3,0.23,4,0.182,9,0.206,19,0.469,20,1.009,22,0.818,23,0.018,24,1.565,32,0.391,33,0.115,36,1.496,39,3.114,106,0.819,111,0.013,112,0.013,190,1.739,209,1.631,283,2.78,355,2.154,380,2.27,388,2.275,409,1.407,444,1.916,446,2.584,462,1.123,463,2.95,464,1.916,465,1.916,466,2.584,467,2.78,468,3.418,469,2.022,470,3.754,471,3.51,472,3.295,473,2.883,474,1.566,475,2.139,476,1.916,477,3.015,478,3.57,479,4.038,480,3.015,481,3.934,482,2.5,483,3.015,484,2.139,485,3.015,486,2.022,487,2.139,488,3.015,489,2.27,490,3.015,491,3.015,492,3.015,493,2.78,494,2.78,495,2.78,496,2.78,497,3.015,498,3.51,499,3.015,500,1.916,501,3.015,502,3.015,503,3.628,504,3.015,505,3.015,506,3.015,507,3.628,508,3.628,509,3.628,510,3.015,511,3.015,512,3.015,513,3.015,514,3.015,515,2.78,516,3.015,517,3.934,518,3.015,519,3.372,520,2.639,521,3.153,522,3.934,523,3.015,524,3.015,525,3.015,526,3.015,527,3.015,528,3.934,529,3.015,530,3.934,531,4.281,532,2.584,533,2.78,534,2.78,535,2.139,536,3.015,537,2.78,538,3.015,539,2.78,540,2.78,541,3.015,542,2.372,543,3.015,544,3.015,545,3.015,546,3.015]],["title/modules/DeaModule.html",[113,2.119,152,2.437]],["body/modules/DeaModule.html",[3,0.271,4,0.215,9,0.243,23,0.018,30,0.847,31,0.59,32,0.3,33,0.135,69,1.843,70,1.395,72,1.76,111,0.014,112,0.014,115,2.385,116,3.289,123,3.289,124,2.677,125,2.524,127,3.744,128,2.85,131,3.501,142,4.795,144,3.279,150,4.795,151,4.795,152,4.928,186,3.744,187,2.85,291,3.279,579,4.417,642,4.368,805,4.368,806,4.368,807,4.368,808,5.074,809,4.795,810,5.074,811,5.366,812,4.368,813,4.368,814,5.366,815,4.368,816,5.366,817,4.368,818,5.366,819,4.368,820,5.366,821,4.368,822,5.366,823,4.368,824,5.366,825,3.903,826,4.368]],["title/interfaces/DeaNode.html",[462,0.678,471,2.119]],["body/interfaces/DeaNode.html",[3,0.23,4,0.183,9,0.206,19,0.469,20,1.011,22,0.773,23,0.018,24,1.581,32,0.392,33,0.115,36,1.498,39,3.118,106,0.771,111,0.013,112,0.013,190,1.741,209,1.632,243,1.346,283,2.789,355,2.068,380,2.277,388,2.279,409,1.41,444,1.922,446,2.592,462,1.125,463,2.954,464,1.922,465,1.922,466,2.592,467,2.789,468,3.421,469,2.029,470,3.379,471,3.726,472,2.146,473,2.885,474,2.414,475,3.299,476,1.922,477,3.025,478,3.573,479,4.045,480,3.025,481,3.943,482,2.505,483,3.025,484,2.146,485,3.025,486,2.029,487,2.146,488,3.025,489,2.277,490,3.025,491,3.025,492,3.025,493,2.789,494,2.789,495,2.789,496,2.789,497,3.025,498,3.516,499,3.025,500,1.922,501,3.025,502,3.025,503,3.635,504,3.025,505,3.025,506,3.025,507,3.635,508,3.635,509,3.635,510,3.025,511,3.025,512,3.025,513,3.025,514,3.025,515,2.789,516,3.025,517,3.943,518,3.025,519,3.379,520,2.645,521,3.16,522,3.943,523,3.025,524,3.025,525,3.025,526,3.025,527,3.025,528,3.943,529,3.025,530,3.943,531,4.286,532,2.592,533,2.789,534,2.789,535,2.146,536,3.025,537,2.789,538,3.025,539,2.789,540,2.789,541,3.025,542,2.377,543,3.025,544,3.025,545,3.025,546,3.025]],["title/injectables/DeaService.html",[228,1.515,579,2.266]],["body/injectables/DeaService.html",[3,0.152,4,0.12,9,0.136,14,1.595,19,0.201,22,0.827,23,0.019,24,1.523,25,1.14,26,0.817,27,1.412,28,1.122,30,0.645,31,0.33,32,0.168,33,0.076,52,3.598,67,0.808,111,0.01,112,0.01,190,1.874,208,1.953,209,1.588,223,1.953,228,1.688,229,1.595,233,0.833,242,1.386,243,1.323,246,1.912,250,1.301,257,1.705,258,2.114,315,2.639,356,1.698,379,4.135,409,1.386,420,2.012,424,2.048,425,3.073,448,1.99,451,5.322,452,5.442,474,2.518,503,1.835,557,5.08,561,4.135,563,3.617,565,4.759,579,3.004,585,3.617,586,4.759,612,3.314,628,4.759,643,5.534,644,5.771,649,2.639,657,3.232,666,2.184,670,3.505,696,2.184,714,2.462,715,1.776,716,2.114,717,2.639,718,4.48,719,3.105,720,4.253,721,4.539,827,2.444,828,4.202,829,5.528,830,5.528,831,5.528,832,4.202,833,4.202,834,4.202,835,2.839,836,2.839,837,2.839,838,2.839,839,2.839,840,4.202,841,2.839,842,2.839,843,2.839,844,4.202,845,3.232,846,2.839,847,4.202,848,2.839,849,2.839,850,2.839,851,2.184,852,2.839,853,2.839,854,2.839,855,2.839,856,2.839,857,4.155,858,4.202,859,2.839,860,5.901,861,3.711,862,4.202,863,5.002,864,4.202,865,4.202,866,4.202,867,4.202,868,5.528,869,4.202,870,2.839,871,5.002,872,5.528,873,2.839,874,2.839,875,5.528,876,4.202,877,4.202,878,2.839,879,6.704,880,2.839,881,1.595,882,2.839,883,5.002,884,5.528,885,3.617,886,2.839,887,2.444,888,4.202,889,2.839,890,5.002,891,2.839,892,2.839,893,2.839,894,5.002,895,1.264,896,6.178,897,2.839,898,2.839,899,3.617,900,4.202,901,4.202,902,2.839,903,2.839,904,2.839,905,2.839,906,2.839,907,2.715,908,4.202,909,2.715,910,2.839,911,2.36,912,2.839,913,2.839,914,2.839,915,2.839,916,2.839,917,3.321,918,2.839,919,5.002,920,2.839]],["title/classes/DemoForceDirectedLayout.html",[33,0.101,921,2.266]],["body/classes/DemoForceDirectedLayout.html",[0,0.254,3,0.118,4,0.094,5,0.957,9,0.106,12,0.795,13,0.483,15,0.61,17,0.914,19,0.246,23,0.019,24,0.723,26,1.002,28,0.379,30,0.698,31,0.405,32,0.254,33,0.114,35,2.629,36,1.749,39,2.287,40,2.249,41,1.433,42,2.136,45,1.17,47,2.056,50,2.019,51,2.567,56,2.091,58,1.246,65,0.957,67,0.324,76,0.507,77,1.453,78,1.325,79,0.957,100,0.507,101,1.128,106,0.405,108,0.582,111,0.008,112,0.008,156,1.246,160,1.731,169,3.175,184,2.091,188,1.103,190,1.594,208,1.61,209,1.564,211,2.249,223,2.387,231,1.332,233,0.69,234,2.582,237,0.439,242,0.556,243,0.531,246,0.848,250,0.439,263,0.807,264,1.332,282,2.249,293,0.483,294,2.091,299,1.332,329,0.772,334,2.58,345,2.234,348,2.02,350,1.103,355,1.237,356,2.009,357,0.937,388,2.211,402,1.731,409,0.872,420,0.807,424,1.834,444,0.988,449,1.17,462,0.399,463,2.166,465,1.55,468,2.419,469,2.485,472,2.789,473,1.725,474,0.807,475,1.103,476,1.913,478,2.917,482,2.612,486,1.043,489,1.17,500,0.988,520,1.043,535,1.103,542,0.937,568,1.955,578,2.249,612,1.246,630,1.332,714,1.55,715,1.471,716,1.471,733,1.103,739,1.103,740,1.246,743,1.332,748,1.103,760,2.091,762,1.332,774,1.332,779,2.413,790,1.332,797,1.332,845,1.433,861,1.332,881,1.246,895,0.988,917,1.332,921,2.58,922,1.246,923,3.01,924,2.439,925,2.218,926,2.218,927,2.439,928,1.554,929,1.433,930,2.091,931,1.554,932,1.554,933,3.01,934,1.554,935,1.554,936,2.567,937,1.17,938,1.433,939,2.969,940,1.554,941,1.433,942,2.249,943,1.433,944,1.554,945,2.439,946,2.439,947,1.554,948,1.554,949,1.554,950,2.439,951,1.554,952,1.554,953,3.409,954,1.554,955,2.439,956,1.554,957,1.554,958,1.554,959,1.554,960,1.554,961,1.332,962,1.332,963,1.554,964,1.554,965,1.554,966,1.554,967,3.704,968,1.554,969,1.554,970,1.554,971,1.554,972,1.554,973,1.554,974,1.433,975,1.554,976,1.554,977,1.554,978,1.554,979,1.554,980,1.554,981,1.554,982,1.554,983,2.439,984,1.554,985,1.554,986,1.17,987,1.554,988,1.554,989,1.554,990,2.249,991,1.554,992,1.554,993,1.433,994,2.439,995,1.332,996,1.554,997,1.554,998,1.554,999,1.554,1000,1.554,1001,1.554,1002,1.554,1003,3.01,1004,1.554,1005,3.01,1006,1.554,1007,3.01,1008,1.554,1009,2.249,1010,2.439,1011,1.554,1012,1.554,1013,1.554,1014,1.554,1015,1.433,1016,1.433,1017,2.439,1018,3.01,1019,1.554,1020,1.554,1021,1.554,1022,1.554,1023,1.554,1024,1.554,1025,3.01,1026,3.01,1027,1.554,1028,1.554,1029,1.554,1030,1.554,1031,2.439,1032,1.554,1033,3.01,1034,1.554,1035,2.439,1036,2.439,1037,1.554,1038,1.554,1039,1.554,1040,1.554,1041,1.554,1042,1.554,1043,1.332,1044,1.554,1045,2.439,1046,1.554,1047,1.554,1048,1.554,1049,1.554,1050,1.554,1051,1.554,1052,2.439,1053,1.554,1054,1.433,1055,2.439,1056,2.439,1057,4.377,1058,2.439,1059,2.439,1060,2.439,1061,4.256,1062,2.439,1063,2.439,1064,2.439,1065,1.554,1066,3.01,1067,1.554,1068,3.704,1069,1.554,1070,2.439,1071,3.01,1072,1.554,1073,2.775,1074,2.775,1075,1.554,1076,3.704,1077,2.439,1078,2.439,1079,1.554,1080,1.554,1081,1.554,1082,1.554,1083,1.554,1084,1.554,1085,1.554,1086,1.554,1087,2.439,1088,1.433,1089,1.554,1090,2.439,1091,2.091,1092,3.01,1093,3.01,1094,3.01,1095,3.01,1096,3.144,1097,1.554,1098,1.554,1099,1.554,1100,1.554,1101,2.775,1102,2.439,1103,1.17,1104,1.554,1105,1.554,1106,1.554,1107,1.554,1108,1.554,1109,1.554,1110,1.554,1111,1.554,1112,3.409,1113,3.704,1114,1.554,1115,2.439,1116,3.704,1117,1.554,1118,2.439,1119,1.554,1120,1.433,1121,1.554,1122,1.554,1123,1.433,1124,1.554,1125,1.433,1126,2.439,1127,1.554,1128,1.554,1129,2.439,1130,1.554,1131,1.554,1132,1.554,1133,2.439,1134,1.554,1135,1.554,1136,1.433,1137,3.01,1138,1.554,1139,1.554,1140,1.554,1141,1.554,1142,1.554,1143,1.554,1144,1.554,1145,1.332,1146,1.554,1147,1.554,1148,1.554,1149,1.554,1150,1.433,1151,1.554,1152,1.433,1153,1.554,1154,1.554,1155,1.332,1156,1.332,1157,1.433,1158,1.554,1159,1.554,1160,1.554,1161,1.554,1162,1.554,1163,3.01,1164,2.439,1165,1.554,1166,1.433,1167,1.554,1168,1.554,1169,1.433,1170,1.554,1171,1.554,1172,1.554,1173,2.439,1174,1.554,1175,3.704,1176,1.554,1177,1.554,1178,1.554,1179,2.439,1180,2.439,1181,1.554,1182,1.554,1183,1.554,1184,3.01,1185,3.01,1186,3.01,1187,1.554,1188,1.554,1189,1.554,1190,1.554,1191,1.554,1192,1.554,1193,1.433,1194,1.433,1195,1.433,1196,1.433,1197,2.249,1198,2.439,1199,2.249,1200,2.439,1201,3.704,1202,2.439,1203,2.439,1204,3.01,1205,2.439,1206,2.439,1207,2.439,1208,2.439,1209,1.554,1210,1.554,1211,1.554,1212,1.554,1213,1.554,1214,1.554,1215,1.554,1216,1.554,1217,1.554,1218,1.554,1219,2.091,1220,2.136,1221,1.554,1222,1.554,1223,1.554,1224,1.554,1225,1.433,1226,1.433,1227,2.249,1228,1.554,1229,1.554]],["title/components/DialogComponent.html",[0,0.223,74,0.945]],["body/components/DialogComponent.html",[0,0.375,1,1.114,2,1.651,3,0.237,4,0.188,5,1.222,6,1.471,7,1.34,8,1.34,9,0.213,11,1.34,12,1.776,13,1.698,15,1.577,17,1.506,19,0.315,20,1.031,22,0.784,23,0.018,28,1.146,30,0.627,31,0.517,32,0.262,33,0.118,61,1.34,62,1.729,63,1.651,64,1.34,65,1.844,66,1.34,67,0.928,68,1.34,69,1.114,70,1.577,71,1.729,72,1.064,73,1.34,74,1.682,75,1.729,76,1.016,77,1.745,78,1.782,79,1.222,80,1.114,81,1.34,82,1.114,83,1.34,84,1.114,85,1.34,86,1.114,87,1.114,88,1.34,89,1.114,90,1.34,91,1.34,92,1.222,93,1.34,94,1.064,95,1.34,96,1.064,97,1.34,98,1.064,99,1.34,100,1.016,101,1.167,102,1.729,103,1.114,104,1.34,105,1.016,106,0.517,107,1.114,108,1.167,109,1.34,110,1.34,111,0.013,112,0.013,156,2.497,160,3.336,233,1.136,234,2.588,237,1.136,242,1.114,243,1.373,250,0.881,327,2.497,329,1.031,484,2.852,532,3.445,561,4.019,633,4.019,701,4.412,702,4.412,941,2.873,942,4.487,943,2.873,990,4.335,1169,3.706,1225,3.706,1226,4.335,1227,2.873,1230,3.827,1231,6.349,1232,5.735,1233,3.827,1234,4.446,1235,4.446,1236,4.446,1237,4.446,1238,4.937,1239,5.735,1240,4.937,1241,5.735,1242,5.735,1243,5.735,1244,4.937,1245,4.937]],["title/interfaces/DialogData.html",[462,0.678,1219,2.266]],["body/interfaces/DialogData.html",[0,0.253,3,0.118,4,0.093,5,0.953,9,0.106,12,0.792,13,0.481,15,0.607,17,0.91,19,0.245,20,0.623,22,0.651,23,0.019,24,0.721,26,0.998,30,0.697,31,0.403,32,0.253,33,0.114,35,2.622,36,1.748,39,2.281,40,2.24,41,1.426,42,2.129,45,1.164,47,2.05,50,2.013,51,2.56,56,2.082,58,1.24,65,0.953,76,0.504,77,1.45,78,1.322,79,0.953,100,0.504,101,1.124,106,0.403,108,0.579,111,0.008,112,0.008,156,1.24,160,1.724,169,3.167,184,1.326,188,2.129,190,1.592,208,1.606,209,1.563,211,2.24,223,2.385,231,1.326,234,2.58,237,0.437,246,0.843,263,0.803,264,1.326,282,2.24,293,0.481,294,2.082,299,1.326,315,1.829,329,0.769,334,2.572,345,2.228,348,2.015,350,1.098,355,1.233,356,2.007,357,0.933,388,2.207,402,1.724,409,0.869,420,0.803,424,1.83,444,0.983,462,0.397,463,2.16,464,0.983,465,0.983,468,2.413,469,2.479,472,2.783,473,1.72,474,0.803,475,1.098,476,1.907,478,3.173,482,2.607,486,1.037,489,1.164,500,0.983,520,1.037,535,1.098,542,0.933,568,2.962,578,2.24,612,1.24,630,1.326,714,1.544,715,1.465,716,1.465,733,1.098,739,1.098,740,1.24,743,1.326,748,1.098,760,2.082,762,1.326,774,1.326,779,2.405,790,1.326,797,1.326,845,1.426,861,1.326,881,1.24,895,0.983,917,1.326,921,2.082,922,1.24,923,1.547,924,1.547,927,2.43,928,1.547,929,1.426,930,2.082,931,1.547,932,1.547,933,3.001,934,1.547,935,1.547,936,2.56,937,1.164,938,1.426,939,2.962,940,1.547,941,1.426,942,2.24,943,1.426,944,1.547,945,2.43,946,2.43,947,1.547,948,1.547,949,1.547,950,2.43,951,1.547,952,1.547,953,3.4,954,1.547,955,2.43,956,1.547,957,1.547,958,1.547,959,1.547,960,1.547,961,1.326,962,1.326,963,1.547,964,1.547,965,1.547,966,1.547,967,3.695,968,1.547,969,1.547,970,1.547,971,1.547,972,1.547,973,1.547,974,1.426,975,1.547,976,1.547,977,1.547,978,1.547,979,1.547,980,1.547,981,1.547,982,1.547,983,2.43,984,1.547,985,1.547,986,1.164,987,1.547,988,1.547,989,1.547,990,2.24,991,1.547,992,1.547,993,1.426,994,3.695,995,1.326,996,1.547,997,1.547,998,1.547,999,1.547,1000,1.547,1001,1.547,1002,1.547,1003,3.001,1004,1.547,1005,3.001,1006,1.547,1007,3.001,1008,1.547,1009,2.24,1010,2.43,1011,1.547,1012,1.547,1013,1.547,1014,1.547,1015,1.426,1016,1.426,1017,2.43,1018,3.001,1019,1.547,1020,1.547,1021,1.547,1022,1.547,1023,1.547,1024,1.547,1025,3.001,1026,3.001,1027,1.547,1028,1.547,1029,1.547,1030,1.547,1031,2.43,1032,1.547,1033,3.001,1034,1.547,1035,2.43,1036,2.43,1037,1.547,1038,1.547,1039,1.547,1040,1.547,1041,1.547,1042,1.547,1043,1.326,1044,1.547,1045,2.43,1046,1.547,1047,1.547,1048,1.547,1049,1.547,1050,1.547,1051,1.547,1052,2.43,1053,1.547,1054,1.426,1055,2.43,1056,2.43,1057,4.37,1058,2.43,1059,2.43,1060,2.43,1061,4.249,1062,2.43,1063,2.43,1064,2.43,1065,1.547,1066,3.001,1067,1.547,1068,3.695,1069,1.547,1070,2.43,1071,3.001,1072,1.547,1073,2.767,1074,2.767,1075,1.547,1076,3.695,1077,2.43,1078,2.43,1079,1.547,1080,1.547,1081,1.547,1082,1.547,1083,1.547,1084,1.547,1085,1.547,1086,1.547,1087,2.43,1088,1.426,1089,1.547,1090,2.43,1091,2.082,1092,3.001,1093,3.001,1094,3.001,1095,3.001,1096,3.135,1097,1.547,1098,1.547,1099,1.547,1100,1.547,1101,2.767,1102,2.43,1103,1.164,1104,1.547,1105,1.547,1106,1.547,1107,1.547,1108,1.547,1109,1.547,1110,1.547,1111,1.547,1112,3.4,1113,3.695,1114,1.547,1115,2.43,1116,3.695,1117,1.547,1118,2.43,1119,1.547,1120,1.426,1121,1.547,1122,1.547,1123,1.426,1124,1.547,1125,1.426,1126,2.43,1127,1.547,1128,1.547,1129,2.43,1130,1.547,1131,1.547,1132,1.547,1133,2.43,1134,1.547,1135,1.547,1136,1.426,1137,3.001,1138,1.547,1139,1.547,1140,1.547,1141,1.547,1142,1.547,1143,1.547,1144,1.547,1145,1.326,1146,1.547,1147,1.547,1148,1.547,1149,1.547,1150,1.426,1151,1.547,1152,1.426,1153,1.547,1154,1.547,1155,1.326,1156,1.326,1157,1.426,1158,1.547,1159,1.547,1160,1.547,1161,1.547,1162,1.547,1163,3.001,1164,2.43,1165,1.547,1166,1.426,1167,1.547,1168,1.547,1169,1.426,1170,1.547,1171,1.547,1172,1.547,1173,2.43,1174,1.547,1175,3.695,1176,1.547,1177,1.547,1178,1.547,1179,2.43,1180,2.43,1181,1.547,1182,1.547,1183,1.547,1184,3.001,1185,3.001,1186,3.001,1187,1.547,1188,1.547,1189,1.547,1190,1.547,1191,1.547,1192,1.547,1193,1.426,1194,1.426,1195,1.426,1196,1.426,1197,2.24,1198,2.43,1199,2.24,1200,2.43,1201,3.695,1202,2.43,1203,2.43,1204,3.001,1205,2.43,1206,2.43,1207,2.43,1208,2.43,1209,1.547,1210,1.547,1211,1.547,1212,1.547,1213,1.547,1214,1.547,1215,1.547,1216,1.547,1217,1.547,1218,1.547,1219,2.572,1220,2.622,1221,1.547,1222,1.547,1223,1.547,1224,1.547,1225,1.426,1226,1.426,1227,2.24,1228,1.547,1229,1.547]],["title/components/DialogDataExampleDialog.html",[0,0.223,76,0.862]],["body/components/DialogDataExampleDialog.html",[0,0.267,1,0.488,2,0.903,3,0.104,4,0.082,5,1.083,7,0.587,8,0.587,9,0.093,11,0.587,12,1.614,13,1.51,15,0.535,17,1.035,19,0.222,20,0.564,22,0.486,23,0.019,24,0.652,26,0.903,28,0.847,30,0.671,31,0.365,32,0.233,33,0.105,35,2.465,36,1.717,39,2.125,40,2.027,41,1.258,42,1.96,45,1.027,47,1.91,50,1.853,51,2.385,56,1.885,58,1.094,61,0.587,62,0.946,63,0.903,64,0.587,65,1.456,66,0.587,67,0.576,68,0.587,69,0.488,70,0.863,71,0.946,72,0.466,73,0.587,74,0.488,75,0.946,76,1.033,77,1.645,78,1.604,79,1.363,80,0.488,81,0.587,82,0.488,83,0.587,84,0.488,85,0.587,86,0.488,87,0.488,88,0.587,89,0.488,90,0.587,91,0.587,92,0.535,93,0.587,94,0.466,95,0.587,96,0.466,97,0.587,98,0.466,99,0.587,100,0.717,101,1.187,102,0.946,103,0.488,104,0.587,105,0.445,106,0.458,107,0.488,108,0.824,109,0.587,110,0.587,111,0.007,112,0.007,156,1.094,160,1.56,169,2.977,184,3.182,188,0.968,190,1.522,208,1.496,209,1.531,211,2.027,223,2.339,231,1.169,233,0.622,234,2.587,237,0.622,242,0.488,243,0.466,246,0.744,250,0.622,263,0.709,264,1.169,282,2.027,293,0.424,294,1.885,295,2.027,299,1.169,327,1.094,329,0.891,334,2.367,345,2.095,348,1.894,350,0.968,355,1.135,356,1.972,357,0.823,388,2.11,402,1.56,409,1.133,420,0.709,424,1.72,444,0.867,462,0.35,463,2.013,465,2.359,468,2.248,469,2.33,472,2.635,473,1.583,474,0.709,475,0.968,476,1.755,478,2.771,482,2.481,484,2.248,486,0.915,489,1.027,498,3.256,500,0.867,520,2.33,521,2.539,535,0.968,542,0.823,568,1.762,578,2.027,612,1.094,630,1.169,655,2.701,657,2.027,670,2.199,714,1.397,715,1.326,716,1.326,733,0.968,739,0.968,740,1.094,743,1.169,748,0.968,760,1.885,762,1.169,774,1.169,779,2.214,790,1.169,797,1.169,845,1.258,861,1.169,881,1.094,895,0.867,917,1.169,921,1.885,922,1.094,923,1.364,924,1.364,927,2.199,928,1.364,929,1.258,930,1.885,931,1.364,932,1.364,933,2.762,934,1.364,935,1.364,936,2.385,937,1.027,938,1.258,939,2.784,940,1.364,941,1.258,942,3.203,943,1.258,944,1.364,945,2.199,946,2.199,947,1.364,948,1.364,949,1.364,950,2.199,951,1.364,952,1.364,953,3.168,954,1.364,955,2.199,956,1.364,957,1.364,958,1.364,959,1.364,960,1.364,961,1.169,962,1.169,963,1.364,964,1.364,965,1.364,966,1.364,967,3.474,968,1.364,969,1.364,970,1.364,971,1.364,972,1.364,973,1.364,974,1.258,975,1.364,976,1.364,977,1.364,978,1.364,979,1.364,980,1.364,981,1.364,982,1.364,983,2.199,984,1.364,985,1.364,986,1.027,987,1.364,988,1.364,989,1.364,990,3.203,991,1.364,992,1.364,993,1.258,994,2.199,995,1.169,996,1.364,997,1.364,998,1.364,999,1.364,1000,1.364,1001,1.364,1002,1.364,1003,2.762,1004,1.364,1005,2.762,1006,1.364,1007,2.762,1008,1.364,1009,2.027,1010,2.199,1011,1.364,1012,1.364,1013,1.364,1014,1.364,1015,1.258,1016,1.258,1017,2.199,1018,2.762,1019,1.364,1020,1.364,1021,1.364,1022,1.364,1023,1.364,1024,1.364,1025,2.762,1026,2.762,1027,1.364,1028,1.364,1029,1.364,1030,1.364,1031,2.199,1032,1.364,1033,2.762,1034,1.364,1035,2.199,1036,2.199,1037,1.364,1038,1.364,1039,1.364,1040,1.364,1041,1.364,1042,1.364,1043,1.169,1044,1.364,1045,2.199,1046,1.364,1047,1.364,1048,1.364,1049,1.364,1050,1.364,1051,1.364,1052,2.199,1053,1.364,1054,1.258,1055,2.199,1056,2.199,1057,4.194,1058,2.199,1059,2.199,1060,2.199,1061,4.062,1062,2.199,1063,2.199,1064,2.199,1065,1.364,1066,2.762,1067,1.364,1068,3.474,1069,1.364,1070,2.199,1071,2.762,1072,1.364,1073,2.547,1074,2.547,1075,1.364,1076,3.474,1077,2.199,1078,2.199,1079,1.364,1080,1.364,1081,1.364,1082,1.364,1083,1.364,1084,1.364,1085,1.364,1086,1.364,1087,2.199,1088,1.258,1089,1.364,1090,2.199,1091,1.885,1092,2.762,1093,2.762,1094,2.762,1095,2.762,1096,2.921,1097,1.364,1098,1.364,1099,1.364,1100,1.364,1101,2.547,1102,2.199,1103,1.027,1104,1.364,1105,1.364,1106,1.364,1107,1.364,1108,1.364,1109,1.364,1110,1.364,1111,1.364,1112,3.168,1113,3.474,1114,1.364,1115,2.199,1116,3.474,1117,1.364,1118,2.199,1119,1.364,1120,1.258,1121,1.364,1122,1.364,1123,1.258,1124,1.364,1125,1.258,1126,2.199,1127,1.364,1128,1.364,1129,2.199,1130,1.364,1131,1.364,1132,1.364,1133,2.199,1134,1.364,1135,1.364,1136,1.258,1137,2.762,1138,1.364,1139,1.364,1140,1.364,1141,1.364,1142,1.364,1143,1.364,1144,1.364,1145,1.169,1146,1.364,1147,1.364,1148,1.364,1149,1.364,1150,1.258,1151,1.364,1152,1.258,1153,1.364,1154,1.364,1155,1.169,1156,1.169,1157,1.258,1158,1.364,1159,1.364,1160,1.364,1161,1.364,1162,1.364,1163,2.762,1164,2.199,1165,1.364,1166,1.258,1167,1.364,1168,1.364,1169,2.547,1170,1.364,1171,1.364,1172,1.364,1173,2.199,1174,1.364,1175,3.474,1176,1.364,1177,1.364,1178,1.364,1179,2.199,1180,2.199,1181,1.364,1182,1.364,1183,1.364,1184,2.762,1185,2.762,1186,2.762,1187,1.364,1188,1.364,1189,1.364,1190,1.364,1191,1.364,1192,1.364,1193,1.258,1194,1.258,1195,1.258,1196,1.258,1197,2.027,1198,2.199,1199,2.027,1200,2.199,1201,3.474,1202,2.199,1203,2.199,1204,2.762,1205,2.199,1206,2.199,1207,2.199,1208,2.199,1209,1.364,1210,1.364,1211,1.364,1212,1.364,1213,1.364,1214,1.364,1215,1.364,1216,1.364,1217,1.364,1218,1.364,1219,2.977,1220,1.96,1221,1.364,1222,1.364,1223,2.762,1224,2.199,1225,2.027,1226,2.921,1227,2.027,1228,3.168,1229,1.364,1233,1.676,1246,1.947,1247,1.947,1248,1.947,1249,1.947,1250,1.947,1251,3.138,1252,3.138,1253,3.138,1254,3.138,1255,2.701,1256,2.701,1257,2.701,1258,3.138,1259,2.701,1260,4.52,1261,3.138,1262,3.138,1263,3.138,1264,3.138,1265,3.138,1266,3.138]],["title/components/ExampleComponent.html",[0,0.223,80,0.945]],["body/components/ExampleComponent.html",[0,0.39,1,1.215,2,1.744,3,0.259,4,0.205,5,1.332,6,1.604,7,1.461,8,1.461,9,0.232,11,1.461,12,1.789,13,1.704,15,1.665,17,1.59,19,0.343,23,0.018,28,1.035,30,0.53,31,0.563,32,0.286,33,0.129,61,1.461,62,1.826,63,1.744,64,1.461,65,1.903,66,1.461,67,0.885,68,1.461,69,1.215,70,1.665,71,1.826,72,1.16,73,1.461,74,1.215,75,1.826,76,1.107,77,1.332,78,1.215,79,1.959,80,1.736,81,1.461,82,1.215,83,1.461,84,1.215,85,1.461,86,1.215,87,1.215,88,1.461,89,1.215,90,1.461,91,1.461,92,1.332,93,1.461,94,1.16,95,1.461,96,1.16,97,1.461,98,1.16,99,1.461,100,1.107,101,1.272,102,1.826,103,1.215,104,1.461,105,1.107,106,0.563,107,1.215,108,1.272,109,1.461,110,1.461,111,0.014,112,0.014,233,1.2,237,1.31,250,0.96,293,1.32,329,1.089,548,2.293,566,2.52,1267,4.172,1268,6.609,1269,6.058,1270,4.846,1271,4.846,1272,5.215]],["title/classes/ExpressionGrammarModel.html",[33,0.101,1273,1.876]],["body/classes/ExpressionGrammarModel.html",[3,0.132,4,0.105,9,0.118,19,0.175,20,0.68,22,0.849,23,0.019,24,1.6,25,2.232,26,1.812,28,1.246,32,0.304,33,0.101,36,1.576,67,0.92,106,0.599,111,0.009,112,0.009,190,1.784,208,1.84,209,1.372,223,1.523,233,0.75,234,2.473,237,0.49,242,1.578,243,1.507,250,1.327,258,3.195,260,2.973,293,0.825,329,1.053,355,1.6,356,1.041,388,2.134,409,1.724,420,1.378,424,1.314,425,1.883,449,1.305,462,0.68,487,2.564,542,1.944,649,2.72,714,1.686,715,2.66,716,1.6,717,1.998,719,3.293,775,3.428,857,2.274,895,2.049,907,2.447,909,2.447,911,3.428,986,2.428,1103,1.305,1220,2.916,1273,1.883,1274,1.598,1275,2.585,1276,3.225,1277,3.225,1278,3.225,1279,3.225,1280,3.613,1281,3.613,1282,3.786,1283,3.786,1284,3.786,1285,3.786,1286,3.786,1287,3.613,1288,3.613,1289,3.786,1290,3.786,1291,3.613,1292,4.109,1293,3.332,1294,3.613,1295,2.654,1296,3.786,1297,4.816,1298,2.473,1299,3.339,1300,3.613,1301,4.255,1302,2.473,1303,3.321,1304,2.473,1305,2.473,1306,2.473,1307,2.473,1308,2.654,1309,3.225,1310,2.473,1311,2.654,1312,2.473,1313,2.654,1314,2.473,1315,2.654,1316,2.473,1317,2.654,1318,2.473,1319,2.473,1320,2.473,1321,2.473,1322,2.654,1323,2.473,1324,2.473,1325,2.473,1326,2.473,1327,2.473,1328,2.473,1329,2.473,1330,2.473,1331,2.473,1332,2.473,1333,2.473,1334,2.654,1335,2.654,1336,2.654,1337,1.733,1338,1.733,1339,1.733,1340,1.733,1341,1.733,1342,1.733,1343,1.733,1344,1.733,1345,1.733,1346,3.225,1347,2.654,1348,3.225,1349,3.613,1350,1.733,1351,1.733,1352,1.733,1353,1.733,1354,2.447,1355,1.733,1356,1.485,1357,2.654,1358,1.733,1359,3.225,1360,3.613,1361,3.613,1362,2.654,1363,2.654,1364,2.654,1365,2.654,1366,2.654,1367,2.654,1368,2.654,1369,2.654,1370,2.654,1371,3.613,1372,1.733,1373,2.654,1374,3.225,1375,1.733,1376,1.733,1377,1.733,1378,1.733,1379,1.733,1380,1.733,1381,1.733,1382,3.225,1383,1.733,1384,2.654,1385,1.733,1386,1.733,1387,2.654,1388,1.733,1389,1.733,1390,1.733,1391,1.733,1392,1.733,1393,1.733,1394,3.225,1395,1.733,1396,1.733,1397,1.733,1398,1.733,1399,1.733,1400,1.733,1401,1.733,1402,4.109,1403,2.654,1404,1.733,1405,1.733,1406,1.733,1407,3.225,1408,1.733,1409,1.733,1410,1.733,1411,3.225,1412,1.733,1413,1.733,1414,1.733,1415,1.733,1416,1.733,1417,1.733,1418,1.733,1419,4.109,1420,2.654,1421,1.733,1422,2.654,1423,1.733,1424,1.733,1425,1.733,1426,1.733]],["title/components/FooterComponent.html",[0,0.223,82,0.945]],["body/components/FooterComponent.html",[0,0.387,1,1.196,2,1.727,3,0.255,4,0.202,5,1.311,6,1.579,7,1.438,8,1.438,9,0.228,11,1.438,12,1.786,13,1.702,15,1.649,17,1.575,19,0.338,23,0.018,27,2.983,28,1.025,30,0.521,31,0.555,32,0.282,33,0.127,36,1.142,61,1.438,62,1.809,63,1.727,64,1.438,65,1.893,66,1.438,67,0.877,68,1.438,69,1.196,70,1.649,71,1.809,72,1.142,73,1.438,74,1.196,75,1.809,76,1.09,77,1.311,78,1.196,79,1.311,80,1.196,81,1.438,82,1.726,83,1.438,84,1.196,85,1.438,86,1.196,87,1.196,88,1.438,89,1.196,90,1.438,91,1.438,92,1.311,93,1.438,94,1.142,95,1.438,96,1.142,97,1.438,98,1.142,99,1.438,100,1.09,101,1.252,102,1.809,103,1.196,104,1.438,105,1.09,106,0.555,107,1.196,108,1.252,109,1.438,110,1.438,111,0.014,112,0.014,233,1.189,237,1.3,250,0.945,293,1.308,329,1.078,345,2.016,473,1.916,548,2.277,566,2.506,734,3.67,748,2.373,754,3.083,1427,4.107,1428,6.562,1429,6.562,1430,5.999,1431,4.77,1432,4.77,1433,5.164,1434,5.164,1435,4.77]],["title/interfaces/FourTuple.html",[462,0.678,1299,2.266]],["body/interfaces/FourTuple.html",[3,0.157,4,0.125,9,0.141,19,0.208,20,0.776,22,0.773,23,0.019,24,1.587,26,0.848,32,0.332,33,0.115,36,1.647,106,0.728,111,0.01,112,0.01,190,1.852,208,1.863,209,1.446,223,1.692,234,2.049,258,2.947,260,1.904,293,0.642,315,2.278,329,0.776,355,1.471,356,1.187,388,2.049,409,1.786,420,1.572,424,1.498,425,2.147,462,0.776,464,1.312,487,2.799,542,2.16,649,3.303,714,1.923,715,2.804,716,1.825,717,2.278,719,3.517,775,3.517,857,2.594,895,2.276,907,2.79,909,2.79,911,3.802,986,1.555,1103,1.555,1220,2.799,1273,1.465,1274,1.904,1275,2.425,1276,2.065,1277,2.065,1278,2.065,1279,2.065,1280,2.065,1281,2.065,1287,2.065,1288,2.065,1291,3.026,1292,3.944,1293,2.79,1294,3.026,1295,2.065,1297,4.802,1299,3.599,1300,4.388,1301,4.374,1303,3.413,1308,2.065,1309,2.065,1311,2.065,1313,2.065,1315,2.065,1317,2.065,1322,2.065,1334,3.026,1335,3.026,1336,3.026,1337,2.065,1338,2.065,1339,2.065,1340,2.065,1341,2.065,1342,2.065,1343,2.065,1344,2.065,1345,2.065,1346,3.582,1347,3.026,1348,3.582,1349,3.944,1350,2.065,1351,2.065,1352,2.065,1353,2.065,1354,2.79,1355,2.065,1356,1.77,1357,3.026,1358,2.065,1359,3.582,1360,3.944,1361,3.944,1362,3.026,1363,3.026,1364,3.026,1365,3.026,1366,3.026,1367,3.026,1368,3.026,1369,3.026,1370,3.026,1371,3.944,1372,2.065,1373,3.026,1374,3.582,1375,2.065,1376,2.065,1377,2.065,1378,2.065,1379,2.065,1380,2.065,1381,2.065,1382,3.582,1383,2.065,1384,3.026,1385,2.065,1386,2.065,1387,3.026,1388,2.065,1389,2.065,1390,2.065,1391,2.065,1392,2.065,1393,2.065,1394,3.582,1395,2.065,1396,2.065,1397,2.065,1398,2.065,1399,2.065,1400,2.065,1401,2.065,1402,4.388,1403,3.026,1404,2.065,1405,2.065,1406,2.065,1407,3.582,1408,2.065,1409,2.065,1410,2.065,1411,3.582,1412,2.065,1413,2.065,1414,2.065,1415,2.065,1416,2.065,1417,2.065,1418,2.065,1419,4.388,1420,3.026,1421,2.065,1422,3.026,1423,2.065,1424,2.065,1425,2.065,1426,2.065]],["title/components/GrammarComponent.html",[0,0.223,84,0.945]],["body/components/GrammarComponent.html",[0,0.221,1,0.453,2,0.85,3,0.231,4,0.077,5,0.497,6,0.598,7,0.545,8,0.545,9,0.086,11,0.545,12,1.584,13,1.5,15,0.812,17,0.775,19,0.128,20,0.531,22,0.758,23,0.019,24,0.991,25,2.408,26,1.726,28,1.218,30,0.671,31,0.21,32,0.107,33,0.048,35,2.982,36,1.744,37,2.42,42,2.371,43,3.668,45,0.953,47,2.998,50,2.819,51,2.7,52,1.976,53,3.668,54,3.307,57,3.307,58,2.103,59,2.069,61,0.545,62,0.89,63,1.078,64,0.545,65,1.189,66,0.545,67,0.789,68,0.545,69,0.453,70,1.189,71,0.89,72,0.432,73,0.545,74,0.453,75,0.89,76,0.413,77,0.497,78,0.453,79,1.029,80,0.453,81,0.545,82,0.453,83,0.545,84,1.084,85,0.545,86,0.453,87,0.453,88,0.545,89,0.453,90,0.89,91,0.545,92,0.497,93,0.545,94,0.432,95,0.545,96,0.432,97,0.545,98,0.432,99,0.545,100,0.413,101,0.474,102,0.89,103,0.453,104,0.545,105,0.413,106,0.595,107,0.453,108,1.343,109,0.545,110,0.545,111,0.007,112,0.007,190,0.474,208,0.977,209,0.943,223,0.977,233,0.585,237,0.358,242,1.195,243,1.141,246,1.431,250,1.283,253,1.668,254,0.69,258,0.763,293,0.644,296,1.015,302,2.624,309,2.624,316,1.167,318,2.069,327,1.015,329,1.268,343,1.39,344,1.167,345,2.381,346,1.266,348,2.507,350,2.151,352,3.275,354,2.249,355,1.245,356,0.812,357,0.763,364,3.081,365,1.39,377,3.449,402,2.151,403,3.164,404,2.429,409,0.74,410,1.085,418,2.069,424,1.025,428,2.069,435,2.069,473,1.737,500,1.315,519,1.774,548,1.299,559,2.881,566,1.574,567,3.327,568,1.659,569,3.327,570,3.327,571,3.327,573,3.723,576,3.723,593,2.542,595,1.555,630,1.085,632,2.542,633,1.266,641,1.39,649,2.282,657,1.908,662,1.39,666,3.327,670,3.586,689,1.39,697,1.908,704,2.271,705,2.271,706,3.327,715,1.248,724,2.542,725,2.542,726,2.542,728,2.542,729,2.542,730,2.542,731,3.244,733,1.862,734,2.271,735,3.384,737,1.555,738,2.271,739,2.545,740,1.659,741,4.105,742,3.307,743,1.774,744,3.502,745,3.764,746,3.224,747,1.774,748,2.802,750,1.555,751,1.39,752,1.39,753,1.555,754,3.489,755,2.271,756,2.271,757,1.555,758,1.555,759,1.555,760,1.085,761,1.555,762,1.774,763,1.39,764,1.555,765,1.555,766,1.555,767,1.555,768,1.555,769,1.555,770,1.555,771,3.723,772,1.555,776,1.555,777,3.327,780,2.881,781,1.39,782,1.39,783,1.266,784,1.39,785,1.555,786,1.085,787,1.555,788,2.542,789,3.224,790,2.598,791,1.555,792,1.555,793,2.542,794,1.555,795,1.555,796,2.542,797,2.249,798,2.542,799,3.723,800,1.555,801,1.555,802,1.39,803,1.555,804,1.555,885,2.542,911,1.659,917,1.774,995,1.774,1009,2.795,1016,3.489,1101,1.908,1273,1.862,1297,3.081,1303,1.976,1356,2.249,1436,1.807,1437,1.555,1438,3.745,1439,3.745,1440,2.953,1441,3.723,1442,3.745,1443,3.745,1444,3.745,1445,2.953,1446,2.953,1447,3.723,1448,2.953,1449,3.723,1450,1.807,1451,2.874,1452,3.745,1453,2.598,1454,2.953,1455,2.953,1456,1.807,1457,1.807,1458,1.807,1459,2.953,1460,1.807,1461,1.807,1462,1.807,1463,2.953,1464,1.807,1465,1.807,1466,1.807,1467,1.807,1468,1.807,1469,1.807,1470,1.807,1471,1.807,1472,2.881,1473,1.807,1474,1.807,1475,1.807,1476,2.953,1477,5.117,1478,1.807,1479,4.325,1480,2.953,1481,2.953,1482,2.953,1483,1.807,1484,1.807,1485,1.807,1486,1.807,1487,2.271,1488,1.807,1489,1.807,1490,1.807,1491,1.807,1492,1.39,1493,2.271,1494,1.807,1495,1.167,1496,1.555,1497,2.271,1498,1.807,1499,1.39,1500,1.807,1501,1.807,1502,1.807,1503,1.807,1504,1.555,1505,1.807,1506,1.807,1507,1.555,1508,1.807,1509,1.555,1510,1.807,1511,1.807,1512,1.807,1513,1.807,1514,1.807,1515,1.807,1516,1.807,1517,2.953,1518,1.807,1519,1.807,1520,1.807,1521,1.807,1522,1.807,1523,1.807,1524,3.745,1525,1.807,1526,1.807,1527,1.807,1528,3.327,1529,2.953,1530,2.953,1531,4.85,1532,2.953,1533,4.325,1534,2.542,1535,3.723,1536,2.542,1537,2.953,1538,7.127,1539,5.634,1540,2.953,1541,4.105,1542,2.953,1543,2.953,1544,2.953,1545,4.325,1546,2.953,1547,2.542,1548,5.117,1549,4.325,1550,2.953,1551,2.953,1552,4.325,1553,2.953,1554,2.953,1555,4.325,1556,2.542,1557,2.953,1558,2.953,1559,2.542,1560,2.953,1561,3.723,1562,2.542,1563,2.542,1564,2.953,1565,2.953,1566,4.325,1567,2.953,1568,2.953,1569,2.953,1570,2.542,1571,2.271,1572,2.953,1573,2.542,1574,2.542,1575,2.271,1576,2.953,1577,2.953,1578,2.953,1579,2.953,1580,2.953,1581,2.953,1582,1.807,1583,2.953,1584,1.807,1585,2.953,1586,3.224,1587,1.807,1588,1.807,1589,2.953,1590,1.807,1591,2.953,1592,2.069,1593,1.807,1594,4.768,1595,3.745,1596,1.807,1597,1.807,1598,1.807,1599,1.807,1600,1.807,1601,1.807,1602,1.807,1603,1.807,1604,2.953,1605,1.807,1606,1.807,1607,1.807,1608,1.807,1609,1.807,1610,1.807,1611,1.807,1612,1.807,1613,1.807,1614,1.807,1615,2.953,1616,1.807,1617,1.807,1618,1.807,1619,1.807,1620,1.555,1621,1.555,1622,1.807,1623,3.745,1624,3.745,1625,2.953,1626,2.953,1627,2.953,1628,2.953,1629,2.953,1630,1.807,1631,1.555,1632,1.807,1633,1.555,1634,1.807,1635,1.807,1636,1.555,1637,1.807]],["title/components/GrammarGraphComponent.html",[0,0.223,86,0.945]],["body/components/GrammarGraphComponent.html",[0,0.34,1,0.916,2,1.449,3,0.195,4,0.155,5,1.383,6,1.905,7,1.102,8,1.102,9,0.175,11,1.102,12,1.745,13,1.66,19,0.259,20,0.904,22,0.85,23,0.018,25,1.468,26,1.052,28,1.244,30,0.711,31,0.425,32,0.216,33,0.097,36,0.875,61,1.102,62,1.517,63,1.449,64,1.102,65,1.705,66,1.102,67,0.906,68,1.102,69,0.916,70,1.705,71,1.517,72,0.875,73,1.102,74,0.916,75,1.517,76,0.835,77,1.005,78,0.916,79,1.005,80,0.916,81,1.102,82,0.916,83,1.102,84,0.916,85,1.102,86,1.555,87,0.916,88,1.102,89,0.916,90,1.102,91,1.102,92,1.005,93,1.102,94,0.875,95,1.102,96,0.875,97,1.102,98,0.875,99,1.102,100,0.835,101,0.959,102,1.517,103,0.916,104,1.102,105,0.835,106,0.425,107,0.916,108,0.959,109,1.102,110,1.102,111,0.012,112,0.012,123,3.037,209,0.797,233,0.997,234,2.368,237,0.724,242,1.262,243,1.204,250,1.229,258,2.127,292,2.811,293,1.097,294,3.457,295,3.252,296,3.484,297,5.929,298,5.929,299,3.023,300,4.771,301,3.871,302,4.034,303,4.332,304,4.955,305,4.332,306,3.146,307,4.771,308,4.955,309,4.346,310,4.428,312,4.332,313,3.871,315,1.928,316,3.719,317,4.332,318,4.034,319,3.527,320,3.146,321,5.339,322,3.146,323,4.332,324,5.171,327,2.827,328,4.332,329,1.261,330,4.332,331,4.332,332,5.339,334,2.195,337,3.146,338,4.428,339,4.332,340,4.346,341,3.527,342,3.527,343,2.811,344,2.361,345,1.544,346,2.561,347,3.146,348,1.397,349,3.146,350,1.817,351,3.146,352,2.053,353,3.146,354,2.195,355,1.449,356,1.005,357,1.544,358,3.146,359,4.332,360,3.146,361,2.811,362,2.811,363,2.561,364,2.361,365,2.811,366,3.146,367,3.146,548,1.268,697,2.361,1451,3.484,1495,4.742,1638,5.143,1639,3.654,1640,3.654,1641,3.654,1642,5.032,1643,3.654,1644,3.654,1645,3.527,1646,3.654]],["title/injectables/GrammarGraphService.html",[228,1.515,1451,2.119]],["body/injectables/GrammarGraphService.html",[3,0.18,4,0.143,9,0.162,14,1.898,19,0.239,20,0.856,22,0.78,23,0.019,24,1.147,25,2.407,26,1.726,28,1.176,30,0.521,31,0.393,32,0.199,33,0.09,47,3.241,52,1.783,54,3.566,57,4.084,67,0.696,106,0.554,111,0.011,112,0.011,208,1.984,209,1.525,223,1.118,228,1.914,229,1.898,233,0.944,234,2.547,237,1.094,242,1.194,243,1.14,246,2.415,250,1.094,254,1.291,257,2.029,296,3.1,319,2.368,329,1.136,348,2.767,355,1.372,356,1.31,363,2.368,368,2.599,369,4.751,370,4.751,371,4.751,372,3.665,373,5.16,374,4.102,375,4.102,376,4.102,377,3.93,378,2.909,379,4.596,380,2.514,381,2.909,382,4.102,383,2.909,384,4.102,385,2.909,386,3.868,387,4.862,388,1.734,389,2.909,390,2.909,391,3.665,392,4.102,393,4.102,394,4.102,395,4.102,396,5.646,397,4.751,398,5.16,399,5.646,400,4.102,401,6.282,402,3.756,403,3.985,404,3.367,405,4.102,406,4.102,407,3.339,408,4.611,409,1.194,410,3.6,411,4.751,412,2.909,413,5.16,414,5.441,415,4.611,416,2.909,417,4.429,418,4.596,419,2.909,420,1.734,421,2.909,422,4.751,423,2.909,424,1.172,425,1.68,426,4.102,427,2.909,428,3.868,429,2.909,430,2.909,431,2.909,432,2.909,433,2.909,434,2.909,435,2.368,436,2.909,437,4.102,438,2.909,439,2.599,440,2.599,441,2.909,442,2.909,443,2.368,444,1.505,445,2.909,446,2.029,447,2.368,1451,2.676,1495,4.521,1638,4.904]],["title/interfaces/GrammarModel.html",[462,0.678,1275,2.119]],["body/interfaces/GrammarModel.html",[3,0.157,4,0.125,9,0.141,19,0.209,20,0.777,22,0.695,23,0.019,24,1.574,26,0.849,32,0.333,33,0.115,36,1.647,106,0.595,111,0.01,112,0.01,190,1.853,208,1.864,209,1.447,223,1.693,234,2.05,258,2.948,260,1.907,293,0.643,329,0.777,355,1.473,356,1.188,388,2.05,409,1.786,420,1.573,424,1.5,425,2.15,462,0.777,464,1.314,487,2.801,542,2.162,649,2.699,714,1.925,715,2.805,716,1.827,717,2.281,719,3.519,775,3.519,857,2.596,895,2.278,907,2.793,909,2.793,911,3.519,986,1.557,1103,1.557,1220,3.115,1273,1.467,1274,1.907,1275,2.873,1276,2.068,1277,2.068,1278,2.068,1279,2.068,1280,2.068,1281,2.068,1287,2.068,1288,2.068,1291,4.201,1292,4.536,1293,3.874,1294,4.201,1295,2.068,1297,4.803,1299,3.763,1300,3.585,1301,4.375,1303,3.573,1308,2.068,1309,2.068,1311,2.068,1313,2.068,1315,2.068,1317,2.068,1322,2.068,1334,3.029,1335,3.029,1336,3.029,1337,2.068,1338,2.068,1339,2.068,1340,2.068,1341,2.068,1342,2.068,1343,2.068,1344,2.068,1345,2.068,1346,3.585,1347,3.029,1348,3.585,1349,3.947,1350,2.068,1351,2.068,1352,2.068,1353,2.068,1354,2.793,1355,2.068,1356,1.772,1357,3.029,1358,2.068,1359,3.585,1360,3.947,1361,3.947,1362,3.029,1363,3.029,1364,3.029,1365,3.029,1366,3.029,1367,3.029,1368,3.029,1369,3.029,1370,3.029,1371,3.947,1372,2.068,1373,3.029,1374,3.585,1375,2.068,1376,2.068,1377,2.068,1378,2.068,1379,2.068,1380,2.068,1381,2.068,1382,3.585,1383,2.068,1384,3.029,1385,2.068,1386,2.068,1387,3.029,1388,2.068,1389,2.068,1390,2.068,1391,2.068,1392,2.068,1393,2.068,1394,3.585,1395,2.068,1396,2.068,1397,2.068,1398,2.068,1399,2.068,1400,2.068,1401,2.068,1402,4.39,1403,3.029,1404,2.068,1405,2.068,1406,2.068,1407,3.585,1408,2.068,1409,2.068,1410,2.068,1411,3.585,1412,2.068,1413,2.068,1414,2.068,1415,2.068,1416,2.068,1417,2.068,1418,2.068,1419,4.39,1420,3.029,1421,2.068,1422,3.029,1423,2.068,1424,2.068,1425,2.068,1426,2.068]],["title/modules/GrammarModule.html",[113,2.119,1647,2.643]],["body/modules/GrammarModule.html",[3,0.263,4,0.209,9,0.236,23,0.018,30,0.849,31,0.574,32,0.291,33,0.132,70,1.685,84,1.831,86,1.831,111,0.014,112,0.014,115,2.32,116,3.233,123,3.233,124,2.604,125,2.455,127,3.681,128,2.773,131,3.442,133,3.459,148,5.275,149,4.249,150,4.714,151,4.714,186,3.681,187,2.773,344,3.19,809,4.714,811,5.275,812,4.249,813,4.249,814,5.275,815,4.249,816,5.275,817,4.249,818,5.275,819,4.249,820,5.275,821,4.249,822,5.275,823,4.249,824,5.275,825,3.797,826,4.249,1451,4.102,1453,4.387,1495,3.96,1496,4.249,1647,5.376,1648,4.249,1649,4.249,1650,4.249,1651,4.936,1652,4.936,1653,6.128,1654,4.936]],["title/injectables/GrammarService.html",[228,1.515,1453,2.266]],["body/injectables/GrammarService.html",[3,0.221,4,0.176,9,0.198,14,2.328,19,0.293,20,0.984,22,0.891,23,0.019,25,2.727,26,1.955,28,1.298,30,0.742,31,0.482,32,0.245,33,0.11,67,0.606,106,0.637,111,0.013,112,0.013,228,2.201,229,2.328,233,1.086,237,1.216,242,1.039,243,0.992,246,2.346,250,1.431,253,2.733,254,1.584,257,2.49,329,1.298,355,1.577,356,1.918,377,3.668,386,4.758,409,1.783,415,3.189,559,4.721,567,5.023,568,3.668,569,5.023,570,5.023,571,4.721,615,4.717,637,3.568,638,4.717,639,3.568,641,3.189,687,3.568,689,3.189,1303,3.68,1356,4.079,1447,5.621,1449,5.621,1453,3.291,1487,3.189,1492,3.189,1504,3.568,1655,3.189,1656,6.137,1657,6.137,1658,5.479,1659,5.479,1660,5.479,1661,4.145,1662,4.145,1663,4.145,1664,4.145,1665,4.145,1666,4.145,1667,4.145,1668,4.145,1669,6.79,1670,4.145,1671,4.145,1672,5.479,1673,4.145,1674,4.145,1675,4.145,1676,4.145,1677,4.145,1678,4.145,1679,3.568,1680,4.145,1681,4.145,1682,4.145,1683,4.145,1684,4.145,1685,4.145,1686,4.145,1687,4.145,1688,6.975,1689,5.479,1690,4.145,1691,4.145,1692,4.145,1693,6.137,1694,4.145,1695,4.145,1696,4.145,1697,4.145]],["title/interfaces/GrammarState.html",[462,0.678,1698,2.643]],["body/interfaces/GrammarState.html",[3,0.282,4,0.224,9,0.253,19,0.374,20,1.148,22,0.652,23,0.018,25,2.122,30,0.78,32,0.438,111,0.015,112,0.015,164,2.483,188,2.627,190,1.387,209,1.592,246,2.727,356,1.452,462,0.949,464,2.353,697,4.797,786,4.286,881,2.967,1273,3.177,1275,4.008,1492,4.064,1698,5.12,1699,3.702,1700,5.283,1701,5.5,1702,5.283,1703,5.283,1704,5.283,1705,5.5,1706,5.283,1707,4.914,1708,4.064,1709,4.548,1710,5.912,1711,4.064,1712,5.283,1713,5.283,1714,4.064,1715,4.548,1716,4.548,1717,5.283]],["title/components/LoginComponent.html",[0,0.223,87,0.945]],["body/components/LoginComponent.html",[0,0.389,1,1.206,2,1.736,3,0.257,4,0.204,5,1.323,6,1.592,7,1.45,8,1.45,9,0.23,11,1.45,12,1.788,13,1.703,15,1.658,17,1.583,19,0.34,23,0.018,28,1.031,30,0.526,31,0.559,32,0.284,33,0.128,61,1.45,62,1.818,63,1.736,64,1.45,65,1.898,66,1.45,67,0.881,68,1.45,69,1.206,70,1.658,71,1.818,72,1.151,73,1.45,74,1.206,75,1.818,76,1.099,77,1.323,78,1.206,79,1.323,80,1.206,81,1.45,82,1.206,83,1.45,84,1.206,85,1.45,86,1.206,87,1.731,88,1.45,89,1.206,90,1.45,91,1.45,92,1.323,93,1.45,94,1.151,95,1.45,96,1.151,97,1.45,98,1.151,99,1.45,100,1.099,101,1.263,102,1.818,103,1.206,104,1.45,105,1.099,106,0.559,107,1.206,108,1.263,109,1.45,110,1.45,111,0.014,112,0.014,212,5.945,233,1.195,237,1.305,250,0.953,293,1.314,329,1.084,548,2.286,566,2.514,1718,4.142,1719,6.587,1720,6.03,1721,4.811,1722,4.811,1723,3.182,1724,6.03,1725,6.03]],["title/components/MainPageComponent.html",[0,0.223,89,0.945]],["body/components/MainPageComponent.html",[0,0.387,1,1.193,2,1.724,3,0.254,4,0.202,5,1.308,6,1.575,7,1.435,8,1.435,9,0.228,11,1.435,12,1.786,13,1.702,15,1.647,17,1.572,19,0.337,23,0.018,28,1.024,30,0.52,31,0.553,32,0.281,33,0.127,61,1.435,62,1.806,63,1.724,64,1.435,65,1.891,66,1.435,67,0.875,68,1.435,69,1.193,70,1.647,71,1.806,72,1.139,73,1.435,74,1.193,75,1.806,76,1.087,77,1.308,78,1.193,79,1.308,80,1.193,81,1.435,82,1.193,83,1.435,84,1.193,85,1.435,86,1.193,87,1.193,88,1.435,89,1.724,90,2.277,91,1.435,92,1.308,93,1.435,94,1.139,95,1.435,96,1.139,97,1.435,98,1.139,99,1.435,100,1.087,101,1.249,102,1.806,103,1.193,104,1.435,105,1.087,106,0.553,107,1.193,108,1.249,109,1.435,110,1.435,111,0.014,112,0.014,140,5.042,233,1.187,237,1.299,250,0.943,293,1.306,329,1.076,548,2.274,566,2.504,1272,5.156,1726,5.643,1727,4.097,1728,5.922,1729,6.555,1730,5.99,1731,4.759,1732,4.759]],["title/components/MyCounterComponent.html",[0,0.223,92,1.037]],["body/components/MyCounterComponent.html",[0,0.378,1,1.133,2,1.669,3,0.241,4,0.192,5,1.243,7,1.363,8,1.363,9,0.216,11,1.363,12,1.779,13,1.694,17,1.522,19,0.32,20,1.042,22,0.558,23,0.018,28,1.193,30,0.634,31,0.526,32,0.267,33,0.12,61,1.363,62,1.748,63,1.669,64,1.363,65,1.856,66,1.363,67,0.847,68,1.363,69,1.133,70,1.594,71,1.748,72,1.082,73,1.363,74,1.133,75,1.748,76,1.033,77,1.243,78,1.133,79,1.243,80,1.133,81,1.363,82,1.133,83,1.363,84,1.133,85,1.363,86,1.133,87,1.133,88,1.363,89,1.133,90,1.363,91,1.363,92,1.856,93,1.363,94,1.082,95,1.363,96,1.082,97,1.363,98,1.082,99,1.363,100,1.033,101,1.187,102,1.748,103,1.133,104,1.363,105,1.033,106,0.526,107,1.133,108,1.187,109,1.363,110,1.363,111,0.013,112,0.013,124,3.683,233,1.149,237,1.268,240,2.386,246,1.728,250,1.268,253,2.85,254,1.728,255,4.892,329,1.15,604,3.892,786,3.844,1733,6.149,1734,6.149,1735,3.892,1736,5.798,1737,5.798,1738,4.362,1739,6.98,1740,5.798,1741,4.521,1742,4.521,1743,4.521,1744,6.751,1745,4.521,1746,2.922,1747,4.521,1748,6.4]],["title/components/NavigationComponent.html",[0,0.223,94,0.903]],["body/components/NavigationComponent.html",[0,0.373,1,1.102,2,1.639,3,0.235,4,0.186,5,1.209,6,1.455,7,1.326,8,1.326,9,0.21,11,1.326,12,1.775,13,1.69,15,1.565,17,1.495,19,0.311,20,1.023,22,0.703,23,0.018,24,0.914,28,1.079,30,0.69,31,0.511,32,0.26,33,0.117,36,1.052,61,1.326,62,1.717,63,1.639,64,1.326,65,1.836,66,1.326,67,0.923,68,1.326,69,1.102,70,1.565,71,1.717,72,1.052,73,1.326,74,1.102,75,1.717,76,1.004,77,1.209,78,1.102,79,1.209,80,1.102,81,1.326,82,1.102,83,1.326,84,1.102,85,1.326,86,1.102,87,1.102,88,1.326,89,1.102,90,1.326,91,1.326,92,1.209,93,1.326,94,1.599,95,1.326,96,1.052,97,1.326,98,1.052,99,1.326,100,1.004,101,1.154,102,1.717,103,1.102,104,1.326,105,1.004,106,0.511,107,1.102,108,1.154,109,1.326,110,1.326,111,0.013,112,0.013,164,2.067,216,4.682,218,4.902,233,1.128,237,0.871,240,3.74,242,1.102,243,1.052,250,0.871,253,2.812,254,1.68,263,1.6,264,3.42,293,1.241,329,1.023,348,1.68,357,1.858,462,0.79,548,2.191,566,2.432,731,2.641,735,2.641,736,3.785,739,2.187,744,2.641,745,2.641,747,2.641,1592,3.081,1723,2.32,1738,4.471,1746,2.841,1749,3.382,1750,4.902,1751,5.437,1752,4.902,1753,3.785,1754,5.694,1755,4.397,1756,2.641,1757,2.641,1758,2.641,1759,2.641,1760,2.641,1761,4.902,1762,4.902,1763,5.694,1764,4.902,1765,5.694,1766,4.397,1767,3.382,1768,4.397]],["title/components/ProfileComponent.html",[0,0.223,96,0.903]],["body/components/ProfileComponent.html",[0,0.379,1,1.143,2,1.678,3,0.243,4,0.193,5,1.253,6,1.508,7,1.374,8,1.374,9,0.218,11,1.374,12,1.78,13,1.695,15,1.602,17,1.53,19,0.322,20,1.047,22,0.719,23,0.018,24,0.947,28,1.098,30,0.702,31,0.53,32,0.269,33,0.121,61,1.374,62,1.757,63,1.678,64,1.374,65,1.861,66,1.374,67,1.022,68,1.374,69,1.143,70,1.602,71,1.757,72,1.091,73,1.374,74,1.143,75,1.757,76,1.041,77,1.253,78,1.143,79,1.253,80,1.143,81,1.374,82,1.143,83,1.374,84,1.143,85,1.374,86,1.143,87,1.143,88,1.374,89,1.143,90,1.374,91,1.374,92,1.253,93,1.374,94,1.091,95,1.374,96,1.621,97,1.374,98,1.091,99,1.374,100,1.041,101,1.197,102,1.757,103,1.143,104,1.374,105,1.041,106,0.53,107,1.143,108,1.197,109,1.374,110,1.374,111,0.014,112,0.014,164,2.142,216,4.745,233,1.155,237,0.903,240,3.776,242,1.143,243,1.091,250,0.903,253,2.861,254,1.742,263,1.659,293,1.27,329,1.047,357,1.926,462,0.819,548,2.229,566,2.465,1723,3.39,1738,4.151,1746,2.945,1753,3.924,1756,2.738,1757,2.738,1758,2.738,1759,2.738,1760,2.738,1764,5.017,1769,3.506,1770,5.531,1771,5.017,1772,5.828,1773,4.558,1774,3.766,1775,5.828]],["title/components/PuzzleComponent.html",[0,0.223,98,0.903]],["body/components/PuzzleComponent.html",[0,0.336,1,0.897,2,1.428,3,0.191,4,0.21,5,0.984,6,1.185,7,1.079,8,1.079,9,0.171,11,1.079,12,1.75,13,1.657,15,1.364,17,1.302,19,0.253,23,0.018,28,0.612,30,0.672,31,0.416,32,0.211,33,0.095,35,2.467,47,2.728,50,2.676,61,1.079,62,1.496,63,1.639,64,1.079,65,1.69,66,1.079,67,0.832,68,1.079,69,0.897,70,1.364,71,1.496,72,0.857,73,1.079,74,0.897,75,1.496,76,0.818,77,0.984,78,1.541,79,0.984,80,0.897,81,1.079,82,0.897,83,1.079,84,0.897,85,1.079,86,0.897,87,0.897,88,1.079,89,0.897,90,1.079,91,1.079,92,0.984,93,1.079,94,0.857,95,1.079,96,0.857,97,1.079,98,1.471,99,1.079,100,0.818,101,1.495,102,1.496,103,0.897,104,1.079,105,0.818,106,0.577,107,0.897,108,0.94,109,1.079,110,1.079,111,0.011,112,0.011,125,1.78,188,2.831,190,0.94,208,1.185,209,1.241,223,1.884,233,0.983,250,0.709,293,1.081,295,3.205,296,3.198,300,2.753,329,0.891,340,4.524,345,2.096,348,1.896,364,3.205,407,3.476,409,1.427,417,4.308,420,1.303,443,2.508,469,3.035,474,2.072,482,3.05,548,1.975,566,2.237,718,3.99,731,2.98,733,1.78,744,2.98,745,3.692,747,2.98,748,1.78,778,3.205,779,2.786,783,2.508,895,2.209,1043,2.15,1054,2.313,1091,2.15,1120,2.313,1123,2.313,1136,2.313,1145,2.15,1150,3.679,1155,2.15,1156,4.114,1293,3.679,1507,4.901,1509,3.081,1528,3.816,1571,3.816,1592,3.476,1645,3.476,1767,3.816,1776,3.081,1777,5.693,1778,4.96,1779,3.579,1780,4.96,1781,3.081,1782,3.579,1783,3.081,1784,6.147,1785,5.693,1786,4.96,1787,3.579,1788,3.579,1789,6.147,1790,5.693,1791,3.579,1792,3.579,1793,3.579,1794,3.579,1795,3.579,1796,3.579,1797,4.96,1798,3.579,1799,3.579,1800,3.579,1801,3.579,1802,3.579,1803,3.579,1804,3.579,1805,3.579,1806,3.579,1807,3.579,1808,3.579,1809,4.96,1810,3.579,1811,3.579,1812,3.579,1813,4.96,1814,4.96,1815,5.557,1816,3.579,1817,4.96,1818,4.96,1819,4.96,1820,4.96,1821,4.96,1822,3.579,1823,3.579,1824,3.579,1825,3.579,1826,4.27,1827,3.081,1828,4.27,1829,4.96,1830,3.579,1831,3.579,1832,3.081,1833,2.753,1834,4.27,1835,3.081,1836,3.081,1837,3.579,1838,3.579,1839,3.579,1840,3.579,1841,4.96,1842,4.96,1843,3.579,1844,3.579,1845,4.27,1846,3.579,1847,3.081,1848,2.753,1849,4.96]],["title/components/PuzzleGameComponent.html",[0,0.223,100,0.862]],["body/components/PuzzleGameComponent.html",[0,0.236,1,0.399,2,0.766,3,0.085,4,0.067,5,0.942,6,0.527,7,0.48,8,0.48,9,0.076,11,0.48,12,1.557,13,1.463,15,0.731,17,0.9,19,0.315,20,0.478,22,0.686,23,0.019,24,0.832,25,2.306,26,1.829,28,1.187,30,0.627,31,0.309,32,0.202,33,0.091,35,2.662,36,1.732,37,1.029,39,1.882,40,2.214,41,1.719,42,1.704,45,2.539,47,2.262,50,2.615,51,2.539,56,1.598,58,2.249,59,1.865,61,0.48,62,0.802,63,0.766,64,0.48,65,1.323,66,0.48,67,0.703,68,0.48,69,0.399,70,0.731,71,0.802,72,0.381,73,0.48,74,0.399,75,0.802,76,0.608,77,1.578,78,1.206,79,0.942,80,0.399,81,0.48,82,0.399,83,0.48,84,0.399,85,0.48,86,0.399,87,0.399,88,0.48,89,0.399,90,0.48,91,0.48,92,0.438,93,0.48,94,0.381,95,0.48,96,0.381,97,0.48,98,0.381,99,0.48,100,0.914,101,1.405,102,0.802,103,0.399,104,0.48,105,0.364,106,0.398,107,0.399,108,0.699,109,0.48,110,0.48,111,0.006,112,0.006,124,1.404,156,0.895,160,1.323,169,3.341,184,4.196,188,0.792,190,1.405,208,1.474,209,1.475,211,1.719,223,2.272,231,0.957,233,0.527,234,2.731,237,0.527,242,1.004,243,0.958,246,1.31,250,1.195,263,0.58,264,0.957,282,1.719,293,0.58,294,2.058,299,2.405,316,1.029,327,0.895,329,1.105,334,2.058,345,2.492,346,1.116,348,2.305,350,2.393,352,1.925,354,2.405,355,1.47,356,1.91,357,0.673,380,0.84,388,2.025,402,2.214,403,2.825,404,2.501,409,0.859,410,0.957,420,1.247,424,1.545,444,0.709,462,0.286,463,1.783,465,3.11,468,1.991,469,2.093,472,2.393,473,1.376,474,0.58,475,0.792,476,1.526,478,2.766,482,2.274,486,0.749,489,0.84,500,0.709,520,0.749,535,0.792,542,0.673,568,1.495,574,2.291,578,2.877,612,0.895,630,0.957,714,1.185,715,1.124,716,1.124,731,1.598,733,1.991,735,0.957,739,1.704,740,0.895,742,3.11,743,0.957,744,2.405,745,2.674,747,1.598,748,2.214,749,2.291,751,1.225,752,1.225,754,1.719,760,1.598,762,0.957,774,0.957,775,2.501,777,2.636,778,1.029,779,2.249,780,2.047,781,2.636,782,2.636,784,1.225,790,0.957,797,0.957,845,1.029,861,0.957,881,1.495,895,0.709,917,0.957,921,1.598,922,0.895,923,1.116,924,1.116,927,2.805,928,1.116,929,1.029,930,1.598,931,1.116,932,1.116,933,2.805,934,1.116,935,1.116,936,2.825,937,2.349,938,1.029,939,2.501,940,1.116,941,1.029,942,1.719,943,1.029,944,1.116,945,1.865,946,1.865,947,1.116,948,1.116,949,1.116,950,1.865,951,1.116,952,1.116,953,2.805,954,1.116,955,1.865,956,1.116,957,1.116,958,1.116,959,1.116,960,1.116,961,1.598,962,2.058,963,1.865,964,1.865,965,2.402,966,2.402,967,3.579,968,2.402,969,1.865,970,2.402,971,1.865,972,3.12,973,1.865,974,3.459,975,1.865,976,2.402,977,1.865,978,1.865,979,1.865,980,1.865,981,1.865,982,1.865,983,2.402,984,1.865,985,1.865,986,1.404,987,2.402,988,1.865,989,1.865,990,1.719,991,1.116,992,2.402,993,1.029,994,1.865,995,1.598,996,1.116,997,1.116,998,1.116,999,1.116,1000,1.116,1001,1.116,1002,1.116,1003,2.402,1004,1.116,1005,2.402,1006,1.116,1007,2.805,1008,1.116,1009,2.877,1010,1.865,1011,1.116,1012,1.116,1013,1.116,1014,1.116,1015,1.029,1016,1.029,1017,1.865,1018,2.402,1019,1.116,1020,1.116,1021,1.116,1022,1.116,1023,1.116,1024,1.116,1025,2.402,1026,2.402,1027,1.116,1028,1.116,1029,1.116,1030,1.116,1031,1.865,1032,1.116,1033,2.402,1034,2.805,1035,1.865,1036,1.865,1037,1.116,1038,1.116,1039,1.116,1040,1.116,1041,1.116,1042,1.116,1043,0.957,1044,1.116,1045,1.865,1046,1.116,1047,1.116,1048,1.116,1049,1.116,1050,1.116,1051,1.116,1052,1.865,1053,1.116,1054,2.214,1055,1.865,1056,1.865,1057,3.898,1058,1.865,1059,1.865,1060,1.865,1061,3.752,1062,1.865,1063,1.865,1064,1.865,1065,1.116,1066,2.402,1067,1.116,1068,3.12,1069,1.116,1070,1.865,1071,2.402,1072,1.116,1073,2.214,1074,2.214,1075,1.116,1076,3.12,1077,1.865,1078,1.865,1079,1.116,1080,1.116,1081,1.116,1082,1.116,1083,1.116,1084,1.116,1085,1.116,1086,1.116,1087,1.865,1088,1.029,1089,1.116,1090,1.865,1091,1.598,1092,2.402,1093,2.402,1094,2.402,1095,2.402,1096,2.587,1097,1.116,1098,1.116,1099,2.402,1100,1.116,1101,2.214,1102,1.865,1103,0.84,1104,1.116,1105,1.116,1106,1.116,1107,1.116,1108,1.116,1109,1.116,1110,1.116,1111,1.116,1112,2.805,1113,3.12,1114,1.116,1115,1.865,1116,3.12,1117,1.116,1118,1.865,1119,1.116,1120,1.029,1121,1.116,1122,1.116,1123,1.029,1124,1.116,1125,1.029,1126,1.865,1127,1.116,1128,2.805,1129,2.402,1130,1.116,1131,1.116,1132,1.116,1133,1.865,1134,1.116,1135,1.116,1136,1.029,1137,2.402,1138,1.116,1139,1.116,1140,1.116,1141,1.116,1142,1.116,1143,1.116,1144,1.116,1145,0.957,1146,1.116,1147,1.116,1148,1.116,1149,1.116,1150,1.029,1151,1.116,1152,1.029,1153,1.116,1154,1.116,1155,0.957,1156,0.957,1157,1.029,1158,1.116,1159,1.116,1160,1.116,1161,2.805,1162,1.116,1163,2.402,1164,1.865,1165,1.116,1166,1.029,1167,1.116,1168,1.116,1169,1.029,1170,1.116,1171,1.116,1172,1.865,1173,1.865,1174,1.116,1175,3.12,1176,1.116,1177,1.116,1178,1.116,1179,1.865,1180,1.865,1181,1.865,1182,1.116,1183,2.805,1184,2.402,1185,2.402,1186,2.402,1187,1.116,1188,1.116,1189,1.116,1190,2.805,1191,1.116,1192,1.116,1193,1.029,1194,1.029,1195,1.029,1196,1.029,1197,1.719,1198,1.865,1199,1.719,1200,1.865,1201,3.12,1202,1.865,1203,1.865,1204,2.402,1205,1.865,1206,1.865,1207,1.865,1208,1.865,1209,2.805,1210,1.116,1211,1.116,1212,1.116,1213,1.116,1214,1.116,1215,1.116,1216,1.116,1217,1.116,1218,1.116,1219,1.598,1220,1.704,1221,1.116,1222,1.116,1223,1.116,1224,1.116,1225,1.029,1226,1.029,1227,1.719,1228,1.116,1229,1.116,1827,2.291,1833,1.225,1845,1.371,1848,1.225,1850,2.661,1851,3.427,1852,2.661,1853,1.593,1854,2.661,1855,1.593,1856,1.593,1857,1.593,1858,1.593,1859,1.593,1860,1.593,1861,1.593,1862,1.593,1863,1.593,1864,1.593,1865,1.593,1866,1.593,1867,1.593,1868,1.593,1869,1.593,1870,1.593,1871,1.371,1872,1.593,1873,1.593,1874,1.593,1875,1.593,1876,1.593,1877,1.593,1878,2.661,1879,2.291,1880,2.661,1881,1.593,1882,1.593,1883,1.593,1884,1.593,1885,1.593,1886,1.593,1887,1.593,1888,1.593,1889,1.593,1890,1.593,1891,1.593,1892,1.593,1893,1.593,1894,2.661,1895,1.593,1896,1.593,1897,1.593,1898,1.593,1899,2.661,1900,1.593,1901,1.593,1902,2.661,1903,1.593,1904,2.661,1905,1.593,1906,1.593,1907,1.593,1908,1.593,1909,1.593]],["title/modules/PuzzleModule.html",[113,2.119,122,2.437]],["body/modules/PuzzleModule.html",[3,0.301,4,0.239,9,0.27,23,0.018,30,0.797,31,0.656,32,0.333,33,0.15,98,1.804,111,0.015,112,0.015,115,2.652,116,3.506,122,4.87,123,3.506,124,2.977,125,2.806,127,3.991,128,3.169,131,3.732,132,5.72,133,3.954,134,3.954,186,3.991,187,3.169,1910,4.857,1911,4.857,1912,5.642,1913,5.642]],["title/components/RegisterComponent.html",[0,0.223,103,0.945]],["body/components/RegisterComponent.html",[0,0.386,1,1.183,2,1.715,3,0.252,4,0.2,5,1.297,6,1.562,7,1.423,8,1.423,9,0.226,11,1.423,12,1.785,13,1.7,15,1.638,17,1.564,19,0.334,23,0.018,28,1.018,30,0.516,31,0.549,32,0.279,33,0.126,61,1.423,62,1.796,63,1.715,64,1.423,65,1.885,66,1.423,67,1.002,68,1.423,69,1.183,70,1.638,71,1.796,72,1.13,73,1.423,74,1.183,75,1.796,76,1.078,77,1.297,78,1.183,79,1.297,80,1.183,81,1.423,82,1.183,83,1.423,84,1.183,85,1.423,86,1.183,87,1.183,88,1.423,89,1.183,90,1.423,91,1.423,92,1.297,93,1.423,94,1.13,95,1.423,96,1.13,97,1.423,98,1.13,99,1.423,100,1.078,101,1.239,102,1.796,103,1.719,104,1.423,105,1.078,106,0.549,107,1.183,108,1.239,109,1.423,110,1.423,111,0.014,112,0.014,215,5.904,233,1.181,237,1.294,250,0.935,293,1.299,329,1.071,548,2.266,566,2.497,1166,3.85,1723,3.619,1774,4.432,1914,4.063,1915,6.53,1916,5.958,1917,4.72,1918,4.72,1919,5.129,1920,5.958,1921,5.958,1922,5.958,1923,5.958]],["title/classes/RuleSetInterface.html",[33,0.101,1303,1.99]],["body/classes/RuleSetInterface.html",[3,0.156,4,0.124,9,0.14,19,0.206,20,0.77,22,0.737,23,0.019,24,1.576,26,0.84,28,1.02,32,0.331,33,0.114,36,1.643,67,0.426,106,0.591,111,0.01,112,0.01,190,1.848,208,1.854,209,1.442,223,1.682,234,2.039,237,0.578,242,0.732,243,0.698,258,2.941,260,1.886,293,0.636,329,0.77,355,1.613,356,1.179,388,2.172,409,1.783,420,1.561,424,1.488,425,2.132,449,1.54,462,0.77,487,2.786,542,2.148,588,2.512,649,2.682,714,1.909,715,2.796,716,1.812,717,2.262,719,3.505,775,3.505,857,2.575,895,2.263,907,2.771,909,2.771,911,3.505,986,1.54,1103,1.54,1220,2.786,1273,1.451,1274,1.886,1275,2.408,1276,2.045,1277,2.045,1278,2.045,1279,2.045,1280,2.045,1281,2.045,1287,2.045,1288,2.045,1291,3.005,1292,4.373,1293,2.771,1294,3.005,1295,2.045,1297,4.796,1299,3.365,1300,3.562,1301,4.363,1303,3.622,1308,2.045,1309,2.045,1311,2.045,1313,2.045,1315,2.045,1317,2.045,1322,2.045,1334,3.926,1335,3.926,1336,3.926,1337,3.005,1338,2.045,1339,2.045,1340,2.045,1341,2.045,1342,2.045,1343,2.045,1344,2.045,1345,2.045,1346,3.562,1347,3.005,1348,3.562,1349,3.926,1350,2.045,1351,2.045,1352,2.045,1353,2.045,1354,2.771,1355,2.045,1356,1.753,1357,3.005,1358,2.045,1359,3.562,1360,3.926,1361,3.926,1362,3.005,1363,3.005,1364,3.005,1365,3.005,1366,3.005,1367,3.005,1368,3.005,1369,3.005,1370,3.005,1371,3.926,1372,2.045,1373,3.005,1374,3.562,1375,2.045,1376,2.045,1377,2.045,1378,2.045,1379,2.045,1380,2.045,1381,2.045,1382,3.562,1383,2.045,1384,3.005,1385,2.045,1386,2.045,1387,3.005,1388,2.045,1389,2.045,1390,2.045,1391,2.045,1392,2.045,1393,2.045,1394,3.562,1395,2.045,1396,2.045,1397,2.045,1398,2.045,1399,2.045,1400,2.045,1401,2.045,1402,4.373,1403,3.005,1404,2.045,1405,2.045,1406,2.045,1407,3.562,1408,2.045,1409,2.045,1410,2.045,1411,3.562,1412,2.045,1413,2.045,1414,2.045,1415,2.045,1416,2.045,1417,2.045,1418,2.045,1419,4.373,1420,3.005,1421,2.045,1422,3.005,1423,2.045,1424,2.045,1425,2.045,1426,2.045,1924,4.288,1925,2.512,1926,2.918,1927,2.918,1928,2.918]],["title/components/StartGameComponent.html",[0,0.223,105,0.862]],["body/components/StartGameComponent.html",[0,0.349,1,0.962,2,1.498,3,0.205,4,0.163,5,1.055,6,1.27,7,1.157,8,1.157,9,0.183,11,1.157,12,1.753,13,1.669,15,1.43,17,1.366,19,0.272,20,0.935,22,0.729,23,0.018,24,0.798,27,2.588,28,1.166,30,0.692,31,0.446,32,0.227,33,0.102,35,2.588,61,1.157,62,1.569,63,1.498,64,1.157,65,1.74,66,1.157,67,0.863,68,1.157,69,0.962,70,1.43,71,1.569,72,0.918,73,1.157,74,0.962,75,1.569,76,0.877,77,1.055,78,1.304,79,1.055,80,0.962,81,1.157,82,0.962,83,1.157,84,0.962,85,1.157,86,0.962,87,0.962,88,1.157,89,0.962,90,1.157,91,1.157,92,1.055,93,1.157,94,0.918,95,1.157,96,0.918,97,1.157,98,0.918,99,1.157,100,0.877,101,1.55,102,1.569,103,0.962,104,1.157,105,1.446,106,0.853,107,0.962,108,1.007,109,1.157,110,1.157,111,0.012,112,0.012,164,1.804,177,4.508,233,1.031,235,4.48,237,1.031,240,3.681,242,0.962,243,0.918,250,1.17,253,3.107,254,1.467,258,2.199,263,1.397,293,1.134,329,1.137,345,2.199,403,2.025,404,2.156,462,0.69,484,2.588,548,2.049,566,2.304,731,3.126,733,2.588,742,2.48,744,2.305,745,3.546,747,3.126,778,3.362,779,2.923,783,2.689,922,2.156,936,3.34,937,3.681,961,3.126,962,3.546,993,2.48,1259,4.48,1575,2.952,1592,3.647,1723,2.025,1756,2.305,1757,2.305,1758,2.305,1759,2.305,1760,2.305,1762,4.48,1767,4.003,1847,3.304,1848,4.003,1871,3.304,1929,4.89,1930,5.696,1931,5.449,1932,5.449,1933,3.838,1934,3.832,1935,5.203,1936,3.838,1937,3.838,1938,3.838,1939,2.952,1940,4.48,1941,3.304,1942,3.304,1943,3.304,1944,4.48,1945,3.304,1946,3.304,1947,3.304,1948,5.203,1949,5.203,1950,5.203,1951,3.838,1952,3.838,1953,3.304,1954,3.838,1955,3.838,1956,3.838]],["title/modules/StartGameModule.html",[113,2.119,176,2.437]],["body/modules/StartGameModule.html",[3,0.29,4,0.23,9,0.26,23,0.018,30,0.804,31,0.632,32,0.321,33,0.145,105,1.707,106,0.632,107,1.873,111,0.015,112,0.015,115,2.555,116,3.428,123,3.428,124,2.867,125,2.703,127,3.903,128,3.053,131,3.65,176,4.978,177,3.512,179,4.678,186,3.903,187,3.053,809,4.998,1929,3.808,1934,4.197,1939,4.18,1957,4.678,1958,4.678,1959,4.678,1960,5.434,1961,5.434]],["title/components/TableComponent.html",[0,0.223,107,0.945]],["body/components/TableComponent.html",[0,0.375,1,1.114,2,1.651,3,0.237,4,0.188,5,1.222,6,1.471,7,1.34,8,1.34,9,0.213,11,1.34,12,1.776,13,1.692,15,1.577,17,1.506,19,0.315,23,0.018,28,0.98,30,0.486,31,0.517,32,0.262,33,0.118,37,3.706,42,2.211,47,2.424,50,2.09,61,1.34,62,1.729,63,1.651,64,1.34,65,1.844,66,1.34,67,0.98,68,1.34,69,1.114,70,1.577,71,1.729,72,1.064,73,1.34,74,1.114,75,1.729,76,1.016,77,1.222,78,1.114,79,1.222,80,1.114,81,1.34,82,1.114,83,1.34,84,1.114,85,1.34,86,1.114,87,1.114,88,1.34,89,1.114,90,1.34,91,1.34,92,1.222,93,1.34,94,1.064,95,1.34,96,1.064,97,1.34,98,1.064,99,1.34,100,1.016,101,1.167,102,1.729,103,1.114,104,1.34,105,1.016,106,0.517,107,1.682,108,1.667,109,1.34,110,1.34,111,0.013,112,0.013,233,1.136,237,1.258,250,0.881,293,1.25,329,1.031,348,1.699,352,2.497,354,2.67,403,3.026,404,2.497,409,1.438,420,2.088,424,1.99,473,1.786,548,2.203,566,2.442,733,2.211,735,3.814,739,3.158,742,2.873,754,2.873,755,3.42,756,4.412,763,3.42,1073,2.873,1074,2.873,1433,4.937,1434,4.937,1636,3.827,1879,4.937,1962,3.827,1963,6.349,1964,5.735,1965,4.446,1966,4.446,1967,7.33,1968,5.735,1969,5.735,1970,5.735,1971,5.735,1972,5.735,1973,4.446,1974,4.446,1975,4.446,1976,5.735,1977,5.735,1978,4.446,1979,4.446,1980,4.446]],["title/interfaces/User.html",[263,1.373,462,0.678]],["body/interfaces/User.html",[0,0.38,3,0.285,4,0.226,9,0.255,12,1.22,13,1.164,15,1.468,17,1.402,19,0.378,20,1.155,22,0.904,23,0.018,24,1.605,30,0.754,31,0.621,32,0.315,33,0.142,96,1.278,111,0.015,112,0.015,164,2.51,216,3.742,240,3.64,253,2.863,254,2.041,263,2.34,293,1.164,329,0.959,357,2.257,462,0.959,464,2.378,474,2.511,548,2.231,566,1.944,1723,3.778,1738,3.45,1746,3.45,1756,3.207,1757,3.207,1758,3.207,1759,3.207,1760,3.207,1769,4.108,1770,4.597,1771,4.597,1774,4.458,1981,5.307,1982,5.307]],["title/interfaces/User-1.html",[263,1.147,409,0.79,462,0.566]],["body/interfaces/User-1.html",[0,0.367,3,0.27,4,0.214,9,0.242,12,1.155,13,1.102,15,1.39,17,1.327,19,0.358,20,1.117,22,0.891,23,0.018,24,1.593,30,0.768,31,0.588,32,0.298,33,0.135,78,1.267,105,1.155,106,0.783,111,0.014,112,0.014,164,2.376,177,3.266,237,1.002,240,3.554,253,3.213,254,1.932,258,2.628,263,2.264,293,1.102,329,0.908,462,0.908,464,2.251,474,2.452,548,2.158,566,1.84,922,2.839,936,2.667,937,2.667,961,3.036,962,3.036,1723,3.708,1756,3.036,1757,3.036,1758,3.036,1759,3.036,1760,3.036,1774,4.352,1929,3.543,1930,4.352,1931,4.352,1932,4.352,1934,3.783,1939,3.889,1940,5.354,1941,4.352,1942,4.352,1943,4.352,1944,5.354,1945,4.352,1946,4.352,1947,4.352,1981,5.181,1982,5.181]],["title/interfaces/User-2.html",[263,1.147,424,1.094,462,0.566]],["body/interfaces/User-2.html",[0,0.38,3,0.285,4,0.226,9,0.255,12,1.22,13,1.164,15,1.468,17,1.402,19,0.378,20,1.155,22,0.904,23,0.018,24,1.605,30,0.754,31,0.621,32,0.315,33,0.142,94,1.278,111,0.015,112,0.015,164,2.51,240,3.64,253,2.863,254,2.041,263,2.34,293,1.164,329,0.959,357,2.257,462,0.959,464,2.378,474,2.511,548,2.231,566,1.944,1723,3.778,1738,3.45,1746,3.45,1749,4.108,1750,4.597,1751,4.597,1752,4.597,1756,3.207,1757,3.207,1758,3.207,1759,3.207,1760,3.207,1774,4.458,1981,5.307,1982,5.307]],["title/injectables/UsersService.html",[228,1.515,1934,2.119]],["body/injectables/UsersService.html",[3,0.297,4,0.236,9,0.266,14,3.125,19,0.394,22,0.687,23,0.018,28,1.2,30,0.72,31,0.647,32,0.328,33,0.148,67,0.813,111,0.015,112,0.015,181,4.789,190,1.73,228,2.646,229,3.125,233,1.306,237,1.102,242,1.395,243,1.332,250,1.306,257,3.342,357,2.351,1934,3.701,1983,4.789,1984,7.258,1985,7.258,1986,5.563,1987,7.258,1988,5.563,1989,6.589,1990,5.563,1991,5.563,1992,5.563,1993,5.563]],["title/classes/WordChecker.html",[33,0.101,939,2.119]],["body/classes/WordChecker.html",[3,0.244,4,0.194,9,0.219,19,0.534,22,0.837,23,0.018,24,1.49,26,2.017,27,2.907,28,0.999,30,0.5,32,0.27,33,0.122,36,1.399,67,0.854,106,0.532,111,0.014,112,0.014,190,1.84,208,1.934,209,1.562,223,1.515,233,1.158,242,1.465,243,1.399,250,1.158,315,3.084,355,2.017,356,1.259,409,1.465,447,3.209,449,2.416,463,3.243,465,2.867,466,3.867,471,3.81,478,3.757,479,4.528,486,2.152,493,2.959,494,2.959,495,2.959,496,2.959,500,2.039,507,3.777,508,3.777,509,3.777,533,2.959,534,2.959,535,2.277,540,2.959,861,2.75,881,2.572,938,2.959,939,3.283,1193,2.959,1194,2.959,1195,2.959,1196,2.959,1220,2.907,1994,3.942,1995,5.845,1996,5.845,1997,5.845,1998,4.579,1999,5.845,2000,4.579,2001,4.579,2002,4.579,2003,4.579,2004,5.845,2005,4.579,2006,4.579,2007,4.579,2008,4.579,2009,4.579,2010,4.579,2011,4.579,2012,4.579,2013,4.579,2014,4.579,2015,4.579,2016,4.579,2017,4.579,2018,5.845,2019,4.579,2020,4.579,2021,4.579,2022,4.579,2023,4.579,2024,4.579]],["title/classes/WordGenerator.html",[33,0.101,476,1.68]],["body/classes/WordGenerator.html",[3,0.213,4,0.169,9,0.191,19,0.488,22,0.743,23,0.018,24,1.578,27,2.994,28,1.146,32,0.38,33,0.106,36,1.441,39,3.022,67,0.979,106,0.747,111,0.012,112,0.012,190,1.688,209,1.611,233,1.058,242,1.68,243,1.604,250,1.328,283,2.577,355,2.028,380,2.104,388,2.44,409,1.339,444,1.776,446,2.395,449,2.104,462,1.082,463,3.263,465,3.072,466,4.144,467,2.577,468,3.334,469,1.874,470,3.207,471,3.765,472,1.983,473,2.582,474,1.451,475,1.983,476,2.378,477,3.742,478,3.607,479,4.331,480,2.794,481,3.742,482,2.378,483,2.794,484,1.983,485,2.794,486,1.874,487,1.983,488,2.794,489,2.104,490,2.794,491,2.794,492,2.794,493,2.577,494,2.577,495,2.577,496,2.577,497,2.794,498,3.381,499,2.794,500,1.776,501,2.794,502,2.794,503,3.45,504,2.794,505,2.794,506,2.794,507,3.45,508,3.45,509,3.45,510,2.794,511,2.794,512,2.794,513,2.794,514,2.794,515,2.577,516,2.794,517,3.742,518,2.794,519,3.207,520,2.51,521,2.999,522,3.742,523,2.794,524,2.794,525,2.794,526,2.794,527,2.794,528,3.742,529,3.742,530,3.742,531,4.154,532,2.395,533,2.577,534,2.577,535,1.983,536,2.794,537,2.577,538,2.794,539,2.577,540,2.577,541,3.742,542,2.256,543,2.794,544,2.794,545,2.794,546,3.742,2025,5.339,2026,5.339,2027,5.339,2028,5.339,2029,5.339,2030,3.987,2031,3.987,2032,4.597,2033,3.987,2034,3.987,2035,3.987,2036,3.987]],["title/coverage.html",[2037,4.427]],["body/coverage.html",[0,0.445,1,0.856,9,0.163,10,2.939,22,0.421,23,0.018,33,0.175,36,1.901,69,0.856,72,0.817,74,0.856,76,0.78,80,0.856,82,0.856,84,0.856,86,0.856,87,0.856,89,0.856,92,0.938,94,0.817,96,0.817,98,0.817,100,0.78,103,0.856,105,0.78,107,0.856,108,0.896,111,0.011,112,0.011,126,2.626,140,2.626,161,2.392,165,2.626,166,2.626,172,3.692,177,3.101,184,3.617,188,2.387,228,2.643,230,2.939,255,2.392,263,2.02,290,3.692,291,3.101,292,3.692,311,2.206,341,2.392,342,2.392,356,0.938,368,3.692,377,1.917,448,2.392,450,2.939,462,1.277,463,1.52,465,3.2,466,3.811,467,3.891,470,2.05,471,1.917,476,1.52,547,2.939,579,2.05,606,2.626,608,2.626,623,2.626,634,2.626,640,2.626,827,2.939,851,2.626,921,2.05,922,3.696,930,2.05,936,1.801,937,1.801,939,1.917,1219,2.05,1230,2.939,1267,2.939,1273,1.698,1274,3.891,1275,1.917,1299,2.05,1303,1.801,1427,2.939,1437,2.939,1451,1.917,1453,2.05,1472,2.626,1493,2.626,1495,3.101,1497,2.626,1499,2.626,1638,3.89,1655,2.626,1698,2.392,1699,4.611,1707,3.692,1708,2.626,1711,2.626,1714,2.626,1718,2.939,1726,2.939,1727,2.939,1733,2.939,1734,2.939,1735,2.939,1749,3.692,1761,2.939,1769,3.692,1776,2.939,1914,2.939,1929,3.363,1934,1.917,1962,2.939,1983,2.939,1994,2.939,2037,2.939,2038,3.413,2039,3.413,2040,6.021,2041,4.778,2042,7.783,2043,7.798,2044,2.939,2045,7.013,2046,6.344,2047,6.759,2048,4.131,2049,4.778,2050,4.799,2051,5.55,2052,3.413,2053,2.939,2054,4.131,2055,2.939,2056,2.939,2057,3.413,2058,3.413,2059,6.344,2060,3.413,2061,2.939,2062,2.939,2063,2.939,2064,2.939,2065,2.939,2066,2.939,2067,3.413,2068,2.939,2069,4.131,2070,2.939,2071,3.413,2072,2.939,2073,2.939,2074,4.131,2075,2.939,2076,2.939,2077,5.94,2078,2.939,2079,2.939,2080,2.939,2081,2.939,2082,2.939,2083,2.939,2084,3.413]],["title/dependencies.html",[116,2.393,2085,2.425]],["body/dependencies.html",[23,0.018,31,0.612,111,0.015,112,0.015,116,2.776,129,4.53,133,4.466,134,4.466,144,3.4,159,4.466,160,3.409,164,2.996,169,3.828,171,4.53,175,4.048,187,2.956,254,2.011,340,4.804,482,2.343,561,3.688,633,3.688,825,4.048,899,4.53,1155,3.161,1156,3.161,1244,4.53,1645,3.688,1781,4.53,2086,5.262,2087,7.572,2088,5.262,2089,6.373,2090,5.262,2091,5.262,2092,5.262,2093,5.262,2094,5.262,2095,6.373,2096,6.373,2097,5.262,2098,5.262,2099,5.262,2100,5.262,2101,5.262,2102,5.262,2103,5.262,2104,5.262,2105,5.262,2106,5.262,2107,5.262,2108,5.262,2109,5.262,2110,5.262,2111,5.262,2112,5.262,2113,5.262,2114,5.262,2115,5.262,2116,5.262,2117,5.262,2118,5.262,2119,5.262,2120,5.262,2121,5.262]],["title/miscellaneous/functions.html",[2122,1.893,2123,3.904]],["body/miscellaneous/functions.html",[19,0.416,22,0.84,23,0.017,67,0.994,111,0.016,112,0.016,126,4.52,158,5.233,159,4.117,189,5.058,242,1.705,243,1.628,246,2.245,786,4.437,1699,4.117,1716,5.058,2044,5.857,2063,5.857,2122,3.529,2123,5.058,2124,5.875,2125,5.058]],["title/index.html",[19,0.223,2126,3.152,2127,3.152]],["body/index.html",[0,0.407,4,0.225,13,1.159,23,0.015,27,2.645,67,0.777,111,0.015,112,0.015,125,2.645,160,3.425,175,5.298,220,4.091,293,1.159,356,1.462,774,4.466,929,3.436,995,3.195,1015,3.436,1441,4.578,1561,4.578,1633,5.929,1728,4.578,1953,4.578,2085,4.091,2128,6.414,2129,5.318,2130,4.578,2131,5.318,2132,5.318,2133,6.414,2134,7.319,2135,7.521,2136,5.318,2137,5.318,2138,5.318,2139,5.318,2140,5.318,2141,5.318,2142,5.318,2143,5.318,2144,6.887,2145,6.887,2146,5.318,2147,7.151,2148,5.318,2149,5.318,2150,5.318,2151,5.318,2152,6.414,2153,6.414,2154,7.151,2155,6.414,2156,6.414,2157,5.318,2158,5.318,2159,5.318,2160,5.318,2161,6.414,2162,5.318,2163,5.318,2164,5.318,2165,5.318,2166,5.318,2167,4.091,2168,5.318]],["title/modules.html",[115,2.417]],["body/modules.html",[23,0.016,111,0.016,112,0.016,114,4.099,115,2.75,121,3.78,122,3.78,134,5.261,152,3.78,176,3.78,288,4.5,295,4.385,1647,4.099,1919,5.842,2169,7.506,2170,7.506,2171,7.661]],["title/overview.html",[2167,3.956]],["body/overview.html",[1,1.841,2,1.368,23,0.018,36,1.138,69,1.642,72,1.568,74,1.642,76,1.497,80,1.642,82,1.642,84,1.642,86,1.642,87,1.642,89,1.642,94,1.568,96,1.568,98,1.568,100,1.497,103,1.642,105,1.497,107,1.642,111,0.014,112,0.014,114,5.528,115,2.234,116,3.158,117,4.092,118,4.092,119,4.092,120,4.092,121,4.233,122,4.579,123,3.158,124,2.508,125,2.364,152,4.8,176,4.8,229,2.67,449,2.508,464,2.117,579,3.935,716,2.529,717,2.508,805,4.092,806,4.092,807,4.092,895,2.117,1451,3.68,1453,3.935,1647,5.291,1648,4.092,1649,4.092,1650,4.092,1910,4.092,1911,4.092,1934,3.68,1957,4.092,1958,4.092,1959,4.092,2167,3.657,2172,4.753]],["title/properties.html",[20,0.815,2085,2.425]],["body/properties.html",[20,1.099,23,0.017,111,0.016,112,0.016,2130,5.268,2173,6.119]],["title/routes.html",[143,3.604]],["body/routes.html",[23,0.016,111,0.016,112,0.016,143,4.308]],["title/miscellaneous/typealiases.html",[2122,1.893,2174,4.535]],["body/miscellaneous/typealiases.html",[19,0.428,22,0.747,23,0.017,106,0.704,111,0.016,112,0.016,1487,4.657,1655,4.657,1679,5.958,2122,3.636,2175,6.054,2176,6.054]],["title/miscellaneous/variables.html",[2122,1.893,2177,3.904]],["body/miscellaneous/variables.html",[0,0.057,4,0.251,12,0.903,19,0.069,22,0.709,23,0.019,24,0.202,25,2.684,26,1.924,27,1.169,36,1.827,39,0.457,42,1.169,45,2.352,47,2.563,50,1.858,51,1.731,55,1.494,56,0.584,63,1.528,67,0.254,78,1.683,106,0.733,111,0.004,112,0.004,125,1.169,165,1.335,166,1.335,172,2.198,188,2.321,190,1.483,208,1.662,209,1.29,220,0.748,223,1.798,246,1.092,255,1.648,315,0.513,324,1.335,341,1.216,342,1.216,345,0.733,348,1.613,350,3.08,352,1.843,355,0.5,356,1.493,361,3.248,362,3.248,377,0.975,380,0.513,388,0.354,391,4.346,402,1.632,403,2.649,407,1.648,408,3.429,409,1.912,410,0.584,417,3.959,420,2.596,424,2.614,425,1.632,439,0.748,440,4.346,443,4.296,444,1.76,449,1.508,465,0.773,468,2.857,469,2.781,472,3.696,473,3.095,474,2.713,475,3.08,476,2.635,482,0.773,484,1.169,486,2.911,487,0.484,498,2.82,500,2.078,519,1.971,520,1.343,521,2.046,531,0.628,532,1.716,537,1.846,539,1.846,606,1.335,608,1.335,611,4.322,612,3.173,613,4.322,623,1.335,634,1.335,640,1.335,643,2.198,649,2.085,657,0.628,662,4.083,696,2.198,697,1.122,698,2.46,699,0.837,700,0.837,701,0.748,702,0.748,703,0.837,704,2.198,705,0.748,706,2.802,708,0.837,709,0.837,714,2.758,715,2.295,716,2.295,717,2.463,718,4.089,719,1.605,720,3.978,721,2.198,723,0.837,735,1.412,738,0.748,739,1.421,740,2.371,748,1.421,775,1.321,778,0.628,786,0.584,802,0.748,851,1.335,857,1.412,887,2.024,911,1.321,930,1.043,936,0.916,937,0.916,974,2.728,1043,1.043,1088,2.12,1091,1.412,1096,1.122,1125,2.554,1145,1.043,1152,1.122,1157,2.728,1197,3.43,1199,0.628,1238,0.837,1240,0.837,1245,0.837,1255,0.837,1256,1.494,1257,3.402,1273,0.484,1301,1.519,1354,1.122,1472,1.335,1493,1.335,1497,1.335,1499,1.335,1528,0.748,1531,2.825,1534,1.494,1535,1.494,1536,0.837,1541,1.494,1547,0.837,1556,2.825,1559,1.494,1562,0.837,1563,2.46,1570,2.024,1571,0.748,1573,2.46,1574,0.837,1575,0.748,1586,2.46,1620,3.838,1621,0.837,1631,5.22,1638,0.681,1645,0.681,1698,1.216,1699,0.681,1701,2.024,1705,0.837,1707,2.802,1708,1.335,1709,0.837,1710,2.024,1711,1.335,1714,1.335,1715,0.837,1783,1.494,1815,5.331,1826,1.494,1828,1.494,1832,0.837,1833,2.524,1834,2.46,1835,1.494,1836,1.494,1925,1.494,2032,0.837,2041,0.837,2048,0.837,2049,0.837,2053,0.837,2054,0.837,2055,0.837,2056,0.837,2061,0.837,2062,1.494,2064,0.837,2065,0.837,2066,0.837,2068,0.837,2069,0.837,2070,1.494,2072,0.837,2073,0.837,2074,0.837,2075,1.494,2076,1.494,2077,0.837,2078,1.494,2079,3.634,2080,2.46,2081,2.024,2082,1.494,2083,3.135,2122,0.584,2125,2.46,2177,0.837,2178,4.854,2179,1.736,2180,2.351,2181,2.351,2182,1.736,2183,0.972,2184,0.972,2185,0.972,2186,0.972,2187,0.972,2188,0.972,2189,0.972,2190,1.736,2191,0.972,2192,0.972,2193,0.972,2194,0.972,2195,0.972,2196,0.972,2197,0.972,2198,0.972,2199,0.972,2200,0.972,2201,0.972,2202,0.972,2203,0.972,2204,0.972,2205,1.736,2206,0.972,2207,0.972,2208,1.736,2209,2.351,2210,0.972,2211,2.351,2212,1.736,2213,0.972,2214,0.972,2215,0.972,2216,0.972,2217,0.972,2218,0.972,2219,0.972,2220,0.972,2221,0.972,2222,0.972,2223,0.972,2224,0.972,2225,3.642,2226,0.972,2227,0.972,2228,2.351,2229,2.351,2230,1.736,2231,1.736,2232,1.736,2233,1.736,2234,0.972,2235,0.972,2236,0.972,2237,0.972,2238,1.736,2239,1.736,2240,0.972,2241,0.972,2242,0.972,2243,0.972,2244,0.972,2245,0.972,2246,0.972,2247,0.972,2248,0.972,2249,0.972,2250,0.972,2251,0.972,2252,0.972,2253,0.972,2254,0.972,2255,0.972,2256,0.972,2257,0.972,2258,0.972,2259,0.972,2260,0.972,2261,0.972,2262,0.972,2263,0.972,2264,0.972,2265,0.972,2266,0.972,2267,0.972,2268,0.972,2269,1.736,2270,0.972,2271,2.857,2272,0.972,2273,0.972,2274,1.736,2275,2.857,2276,3.952,2277,2.857,2278,3.282,2279,2.857,2280,2.857,2281,3.952,2282,2.857,2283,2.857,2284,6.856,2285,0.972,2286,0.972,2287,0.972,2288,2.351,2289,3.642,2290,2.351,2291,3.952,2292,2.857,2293,3.952,2294,0.972,2295,0.972,2296,0.972,2297,0.972,2298,0.972,2299,0.972,2300,0.972,2301,3.952,2302,0.972,2303,0.972,2304,0.972,2305,2.351,2306,2.351,2307,3.642,2308,0.972,2309,2.351,2310,2.351,2311,2.351,2312,2.351,2313,2.351,2314,2.351,2315,0.972,2316,0.972,2317,0.972,2318,0.972,2319,0.972,2320,0.972,2321,0.972,2322,0.972,2323,0.972,2324,2.351,2325,0.972,2326,2.351,2327,2.351,2328,1.736,2329,1.736,2330,1.736,2331,0.972,2332,0.972,2333,0.972,2334,0.972,2335,0.972,2336,0.972,2337,0.972,2338,0.972,2339,1.736,2340,1.736,2341,1.736,2342,2.857,2343,1.736,2344,3.282,2345,1.736,2346,1.736,2347,1.736,2348,1.736,2349,1.736,2350,1.736,2351,1.736,2352,0.972,2353,0.972,2354,1.736,2355,0.972,2356,1.736,2357,0.972,2358,1.736,2359,1.736,2360,0.972,2361,0.972,2362,0.972,2363,2.351,2364,1.736,2365,0.972,2366,1.736,2367,0.972,2368,1.736,2369,2.857,2370,0.972,2371,1.736,2372,0.972,2373,0.972,2374,1.736,2375,0.972,2376,0.972,2377,0.972,2378,1.736,2379,1.736,2380,2.857,2381,2.857,2382,1.736,2383,1.736,2384,1.736,2385,1.736,2386,1.736,2387,1.736,2388,1.736,2389,1.736,2390,1.736,2391,1.736,2392,1.736,2393,0.972,2394,0.972,2395,0.972,2396,0.972,2397,0.972,2398,0.972,2399,0.972,2400,0.972,2401,1.736,2402,0.972,2403,0.972,2404,1.736,2405,0.972,2406,0.972,2407,0.972,2408,0.972,2409,0.972,2410,3.642,2411,1.736,2412,0.972,2413,0.972,2414,0.972,2415,0.972,2416,0.972,2417,2.351,2418,1.736,2419,1.736,2420,0.972,2421,2.857,2422,0.972,2423,0.972,2424,0.972,2425,0.972,2426,0.972,2427,0.972,2428,0.972,2429,1.736,2430,1.736,2431,0.972,2432,0.972,2433,0.972,2434,0.972,2435,0.972,2436,0.972,2437,0.972,2438,0.972,2439,0.972,2440,0.972,2441,0.972,2442,0.972,2443,1.736,2444,1.736,2445,0.972,2446,0.972,2447,1.736,2448,0.972,2449,0.972,2450,0.972,2451,0.972,2452,0.972,2453,0.972,2454,0.972,2455,1.736,2456,0.972,2457,0.972,2458,0.972,2459,0.972,2460,0.972]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"interfaces/GrammarModel.html":{},"components/NavigationComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0,1",{"_index":2284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":2173,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":317,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["0.11.4",{"_index":2121,"title":{},"body":{"dependencies.html":{}}}],["0.156",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.2",{"_index":437,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["0.22",{"_index":1616,"title":{},"body":{"components/GrammarComponent.html":{}}}],["0.2s",{"_index":2335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.3px",{"_index":798,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["0.44",{"_index":1610,"title":{},"body":{"components/GrammarComponent.html":{}}}],["0.5px",{"_index":1881,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["0.6",{"_index":488,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["0.71",{"_index":1605,"title":{},"body":{"components/GrammarComponent.html":{}}}],["0.84",{"_index":768,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["0.844",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.87",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["0.8em",{"_index":1628,"title":{},"body":{"components/GrammarComponent.html":{}}}],["0.9.4",{"_index":2103,"title":{},"body":{"dependencies.html":{}}}],["0.9rem",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2050,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2060,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2058,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":2067,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":2057,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":2052,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2046,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2059,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2047,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2071,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2051,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00796b",{"_index":1589,"title":{},"body":{"components/GrammarComponent.html":{}}}],["0;\\n",{"_index":353,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["0px",{"_index":761,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["0s",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":409,"title":{"interfaces/User-1.html":{}},"body":{"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/TableComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":2100,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2105,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":1629,"title":{},"body":{"components/GrammarComponent.html":{}}}],["1.2rem",{"_index":1617,"title":{},"body":{"components/GrammarComponent.html":{}}}],["1.5",{"_index":319,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["1.5rem",{"_index":736,"title":{},"body":{"components/DeaComponent.html":{},"components/NavigationComponent.html":{}}}],["10",{"_index":895,"title":{},"body":{"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"overview.html":{}}}],["100",{"_index":739,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["100%;\\n",{"_index":349,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["1000",{"_index":380,"title":{},"body":{"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["100px",{"_index":734,"title":{},"body":{"components/DeaComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{}}}],["106px",{"_index":1632,"title":{},"body":{"components/GrammarComponent.html":{}}}],["10pt",{"_index":1072,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["110",{"_index":2300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11px",{"_index":1138,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["12.0.0",{"_index":2112,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":1133,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["1200px",{"_index":1849,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["128",{"_index":1604,"title":{},"body":{"components/GrammarComponent.html":{}}}],["12px",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{}}}],["13.2.5",{"_index":2131,"title":{},"body":{"index.html":{}}}],["13.3.9",{"_index":2089,"title":{},"body":{"dependencies.html":{}}}],["130deg",{"_index":2235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["130px",{"_index":1637,"title":{},"body":{"components/GrammarComponent.html":{}}}],["14.0.2",{"_index":2095,"title":{},"body":{"dependencies.html":{}}}],["14.1.0",{"_index":2087,"title":{},"body":{"dependencies.html":{}}}],["149px",{"_index":1886,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["15",{"_index":412,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["150px",{"_index":751,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["16px",{"_index":797,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["18.0.1",{"_index":2113,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":2172,"title":{},"body":{"overview.html":{}}}],["192",{"_index":1608,"title":{},"body":{"components/GrammarComponent.html":{}}}],["1999",{"_index":1971,"title":{},"body":{"components/TableComponent.html":{}}}],["19px",{"_index":799,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["1].offsettop",{"_index":1513,"title":{},"body":{"components/GrammarComponent.html":{}}}],["1].prevexp",{"_index":1553,"title":{},"body":{"components/GrammarComponent.html":{}}}],["1].rule",{"_index":1550,"title":{},"body":{"components/GrammarComponent.html":{}}}],["1_2",{"_index":2223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1b",{"_index":897,"title":{},"body":{"injectables/DeaService.html":{}}}],["1b2",{"_index":869,"title":{},"body":{"injectables/DeaService.html":{}}}],["1px",{"_index":404,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["1rem",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["2",{"_index":424,"title":{"interfaces/User-2.html":{}},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["2.0.5",{"_index":2108,"title":{},"body":{"dependencies.html":{}}}],["2.2.14",{"_index":2107,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2118,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":2106,"title":{},"body":{"dependencies.html":{}}}],["2.7.1",{"_index":2115,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":740,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":2209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2000",{"_index":2200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200px",{"_index":993,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["20px",{"_index":1893,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["211",{"_index":1615,"title":{},"body":{"components/GrammarComponent.html":{}}}],["220px",{"_index":1901,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["234px",{"_index":1907,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["240",{"_index":766,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["250px",{"_index":992,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["253",{"_index":767,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["26px",{"_index":1612,"title":{},"body":{"components/GrammarComponent.html":{}}}],["2_3",{"_index":2213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2_4",{"_index":2214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":741,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["2rem",{"_index":1898,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["3",{"_index":420,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["3'].map((v",{"_index":2321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.22.1",{"_index":2104,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1096,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["300",{"_index":2208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3000",{"_index":2201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300px",{"_index":784,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["30px",{"_index":2339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":791,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["33.33",{"_index":1630,"title":{},"body":{"components/GrammarComponent.html":{}}}],["360",{"_index":2419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38px",{"_index":2231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3_6",{"_index":2216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3em",{"_index":1622,"title":{},"body":{"components/GrammarComponent.html":{}}}],["3f51b5",{"_index":418,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["3px",{"_index":410,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["3rem",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":714,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["4.32.1",{"_index":2119,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":2260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4000",{"_index":2202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40px",{"_index":1895,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["45",{"_index":1609,"title":{},"body":{"components/GrammarComponent.html":{}}}],["450px",{"_index":2199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["470",{"_index":2207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["480px",{"_index":1582,"title":{},"body":{"components/GrammarComponent.html":{}}}],["4_5",{"_index":2215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":422,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["5",{"_index":715,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["5.2.0",{"_index":2101,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1088,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":1401,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["5000",{"_index":2203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500px",{"_index":752,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["50px",{"_index":802,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["5110",{"_index":1969,"title":{},"body":{"components/TableComponent.html":{}}}],["550px",{"_index":732,"title":{},"body":{"components/DeaComponent.html":{}}}],["5_6",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5_7",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5px",{"_index":435,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["5rem",{"_index":770,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["6",{"_index":716,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":2109,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":2206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["666",{"_index":1831,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["6_4",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6_7",{"_index":2217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6px",{"_index":1906,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["7",{"_index":717,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["7.5.0",{"_index":2116,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["700",{"_index":2204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["700px",{"_index":783,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"components/StartGameComponent.html":{}}}],["70px",{"_index":1884,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["70px);\\n",{"_index":347,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["7_8",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7px",{"_index":804,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["8",{"_index":425,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["8.5.1",{"_index":2111,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":1134,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["80px",{"_index":1848,"title":{},"body":{"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["8594",{"_index":711,"title":{},"body":{"components/DeaComponent.html":{}}}],["8px",{"_index":1636,"title":{},"body":{"components/GrammarComponent.html":{},"components/TableComponent.html":{}}}],["9",{"_index":857,"title":{},"body":{"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":2094,"title":{},"body":{"dependencies.html":{}}}],["90deg",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90px",{"_index":1887,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["9]/gm",{"_index":1390,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["9]\\s*[0",{"_index":1389,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["9dbaea",{"_index":2340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_expression",{"_index":1276,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_getcorrectexpression",{"_index":1280,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_getwrongexpression",{"_index":1281,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_haselementofkind",{"_index":1282,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["_haselementofkind(exp",{"_index":1308,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_hasnonterminalchar",{"_index":1283,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["_hasnonterminalchar(exp",{"_index":1311,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_hasterminalchar",{"_index":1284,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["_hasterminalchar(exp",{"_index":1313,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_isnegnumber",{"_index":1285,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["_isnegnumber(exp",{"_index":1315,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_resetanimationobject",{"_index":562,"title":{},"body":{"components/DeaComponent.html":{}}}],["_rule",{"_index":1277,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_ruleset",{"_index":1278,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_setruleset",{"_index":1286,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["_setruleset(oldexp",{"_index":1317,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_state",{"_index":2196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_valid",{"_index":1279,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["_validatereberstring",{"_index":828,"title":{},"body":{"injectables/DeaService.html":{}}}],["_validatereberstring(str",{"_index":834,"title":{},"body":{"injectables/DeaService.html":{}}}],["a.id",{"_index":896,"title":{},"body":{"injectables/DeaService.html":{}}}],["ab",{"_index":1829,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["ableitung",{"_index":1477,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ableitungen",{"_index":2370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ableitungsbaum",{"_index":1479,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ableitungsliste",{"_index":1619,"title":{},"body":{"components/GrammarComponent.html":{}}}],["absolute",{"_index":777,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["absolute;\\n",{"_index":351,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["abspielen",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acc",{"_index":1206,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["access",{"_index":281,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["accessors",{"_index":1290,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["action",{"_index":786,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarState.html":{},"components/MyCounterComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["action.user",{"_index":2197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activatedroutesnapshot",{"_index":245,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["active",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{}}}],["activelevel",{"_index":968,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["actual_component",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["add",{"_index":1561,"title":{},"body":{"components/GrammarComponent.html":{},"index.html":{}}}],["added",{"_index":1795,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["additional",{"_index":280,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["afterexp",{"_index":1336,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["afterviewinit",{"_index":1438,"title":{},"body":{"components/GrammarComponent.html":{}}}],["agree",{"_index":1921,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ah",{"_index":872,"title":{},"body":{"injectables/DeaService.html":{}}}],["ah.event",{"_index":874,"title":{},"body":{"injectables/DeaService.html":{}}}],["ah.value",{"_index":876,"title":{},"body":{"injectables/DeaService.html":{}}}],["ah.value.tostring",{"_index":884,"title":{},"body":{"injectables/DeaService.html":{}}}],["aktuelles",{"_index":1949,"title":{},"body":{"components/StartGameComponent.html":{}}}],["akzeptiert",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert(\"bitte",{"_index":1193,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{}}}],["aliases",{"_index":2175,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":754,"title":{},"body":{"components/DeaComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{}}}],["alignment",{"_index":1066,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["alle",{"_index":489,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{}}}],["allow",{"_index":278,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["already",{"_index":1104,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["als",{"_index":2278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amount",{"_index":1820,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["anfangen",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angezeigt",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2086,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2088,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":2090,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"modules/DeaModule.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":825,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2091,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["angular/material/dialog",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["angular/material/form",{"_index":812,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["angular/material/icon",{"_index":821,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["angular/material/input",{"_index":815,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["angular/material/radio",{"_index":1654,"title":{},"body":{"modules/GrammarModule.html":{}}}],["angular/material/slider",{"_index":823,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["angular/material/table",{"_index":817,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["angular/platform",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/DeaModule.html":{},"dependencies.html":{}}}],["anhängen",{"_index":522,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["animate",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animatedrulesstream",{"_index":1656,"title":{},"body":{"injectables/GrammarService.html":{}}}],["animatestep",{"_index":372,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["animatestep(str",{"_index":376,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["animation",{"_index":2369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationobject",{"_index":551,"title":{},"body":{"components/DeaComponent.html":{}}}],["animations",{"_index":1501,"title":{},"body":{"components/GrammarComponent.html":{}}}],["animationsgeschwindigkeit",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationsmodus",{"_index":1543,"title":{},"body":{"components/GrammarComponent.html":{}}}],["animieren",{"_index":1577,"title":{},"body":{"components/GrammarComponent.html":{}}}],["animiert",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["another",{"_index":1797,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["anwendbar",{"_index":1569,"title":{},"body":{"components/GrammarComponent.html":{}}}],["any).compounddraganddrop(options",{"_index":1840,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["any).isfixed",{"_index":960,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["anzahl",{"_index":497,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"index.html":{}}}],["app.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.config",{"_index":641,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["app_initializer",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomp",{"_index":1017,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["appcomp.observeddiagram.model",{"_index":1115,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["appcomp.selectednodedata",{"_index":1021,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["appcomp.state",{"_index":1023,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":114,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingmodule",{"_index":121,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstate",{"_index":1705,"title":{},"body":{"interfaces/GrammarState.html":{},"miscellaneous/variables.html":{}}}],["area",{"_index":1819,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["args",{"_index":2318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args.length",{"_index":2319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args[0",{"_index":2320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":323,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["arial",{"_index":1974,"title":{},"body":{"components/TableComponent.html":{}}}],["arr",{"_index":2032,"title":{},"body":{"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["arr.length",{"_index":544,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["arr[arr.length",{"_index":2317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr[math.floor(math.random",{"_index":543,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["array",{"_index":283,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["array.from(this._getcorrectexpression().replace",{"_index":1415,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["arrow",{"_index":1834,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["arrowhead",{"_index":1094,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["artifacts",{"_index":2148,"title":{},"body":{"index.html":{}}}],["artikel",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asw",{"_index":889,"title":{},"body":{"injectables/DeaService.html":{}}}],["async",{"_index":235,"title":{},"body":{"injectables/AuthGuard.html":{},"components/StartGameComponent.html":{}}}],["async)!.username",{"_index":1762,"title":{},"body":{"components/NavigationComponent.html":{},"components/StartGameComponent.html":{}}}],["attr(data",{"_index":796,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["auch",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auf",{"_index":538,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["aufgabe",{"_index":1878,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["ausdruck",{"_index":1531,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["ausdrucks",{"_index":1536,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["ausdrücke",{"_index":1530,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ausfuehren",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ausgabe",{"_index":707,"title":{},"body":{"components/DeaComponent.html":{}}}],["ausgabestring",{"_index":451,"title":{},"body":{"classes/DEAException.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["ausgehenden",{"_index":490,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["auswertung",{"_index":1541,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["auswählen",{"_index":501,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["auth.guard",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["authguard",{"_index":161,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"coverage.html":{}}}],["authmodule",{"_index":288,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{}}}],["auto",{"_index":1054,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["autolock",{"_index":2242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automaten",{"_index":2281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":2139,"title":{},"body":{"index.html":{}}}],["automatisch",{"_index":1559,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["autoungrabify",{"_index":2241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autounselectify",{"_index":2337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1919,"title":{},"body":{"components/RegisterComponent.html":{},"modules.html":{}}}],["await",{"_index":268,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["b",{"_index":718,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["bar",{"_index":737,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["base",{"_index":952,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["basic",{"_index":1590,"title":{},"body":{"components/GrammarComponent.html":{}}}],["bb",{"_index":2224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["becomes",{"_index":1801,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["behavior",{"_index":954,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["behaviorsubject",{"_index":386,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{}}}],["behaviorsubject('stop",{"_index":615,"title":{},"body":{"components/DeaComponent.html":{},"injectables/GrammarService.html":{}}}],["behaviorsubject(2",{"_index":1672,"title":{},"body":{"injectables/GrammarService.html":{}}}],["bei",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beim",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beliebegen",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bereits",{"_index":866,"title":{},"body":{"injectables/DeaService.html":{}}}],["bergangsfunktion",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beta1",{"_index":2102,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":1767,"title":{},"body":{"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/StartGameComponent.html":{}}}],["bewegen",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bezier",{"_index":1836,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["bist",{"_index":1162,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["bit",{"_index":1823,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["bitte",{"_index":1557,"title":{},"body":{"components/GrammarComponent.html":{}}}],["black",{"_index":402,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["bleibt",{"_index":1482,"title":{},"body":{"components/GrammarComponent.html":{}}}],["block",{"_index":1598,"title":{},"body":{"components/GrammarComponent.html":{}}}],["blue",{"_index":738,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["bold",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":1220,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{}}}],["bootstrap",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":403,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["both",{"_index":1890,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["bottom",{"_index":733,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["bottonsgroup",{"_index":1954,"title":{},"body":{"components/StartGameComponent.html":{}}}],["boundingboxoptions",{"_index":1804,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["box",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["boxselectionenabled",{"_index":2336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":885,"title":{},"body":{"injectables/DeaService.html":{},"components/GrammarComponent.html":{}}}],["browse",{"_index":2171,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/PuzzleModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/GrammarModule.html":{}}}],["browseranimationsmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/GrammarModule.html":{}}}],["browsermodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/PuzzleModule.html":{}}}],["build",{"_index":2147,"title":{},"body":{"index.html":{}}}],["bulma",{"_index":1244,"title":{},"body":{"components/DialogComponent.html":{},"dependencies.html":{}}}],["button",{"_index":771,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["c",{"_index":391,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"miscellaneous/variables.html":{}}}],["c.animate",{"_index":421,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["c.connectednodes().toarray",{"_index":394,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["c.data('label",{"_index":413,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["c.style",{"_index":406,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["calc(100",{"_index":346,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["calc(100vh",{"_index":1880,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["calc(50",{"_index":1894,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["calculating",{"_index":1807,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["call",{"_index":951,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["canactivate",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{}}}],["cancel",{"_index":1166,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{}}}],["canceled",{"_index":1171,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["canvas",{"_index":1245,"title":{},"body":{"components/DialogComponent.html":{},"miscellaneous/variables.html":{}}}],["capabilities",{"_index":2164,"title":{},"body":{"index.html":{}}}],["capp",{"_index":1882,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["case",{"_index":1800,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["catch",{"_index":909,"title":{},"body":{"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["cc",{"_index":2226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ccc",{"_index":407,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["cdnd",{"_index":1839,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["cdr",{"_index":988,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["center",{"_index":748,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["centered",{"_index":1841,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["change",{"_index":2141,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":927,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["changes",{"_index":334,"title":{},"body":{"components/CytoGraphComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["changes.modifiednodedata",{"_index":1127,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["char",{"_index":879,"title":{},"body":{"injectables/DeaService.html":{}}}],["check",{"_index":995,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"index.html":{}}}],["checkbeginning",{"_index":1995,"title":{},"body":{"classes/WordChecker.html":{}}}],["checkbeginning(dea",{"_index":1997,"title":{},"body":{"classes/WordChecker.html":{}}}],["checkdea",{"_index":1190,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["checker",{"_index":940,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["checker.ts",{"_index":1994,"title":{},"body":{"classes/WordChecker.html":{},"coverage.html":{}}}],["checker.ts:18",{"_index":2000,"title":{},"body":{"classes/WordChecker.html":{}}}],["checker.ts:5",{"_index":1998,"title":{},"body":{"classes/WordChecker.html":{}}}],["checkloginiframe",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["checkwordrekursive",{"_index":1996,"title":{},"body":{"classes/WordChecker.html":{}}}],["checkwordrekursive(dea",{"_index":1999,"title":{},"body":{"classes/WordChecker.html":{}}}],["chevron_left",{"_index":725,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["chevron_right",{"_index":729,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["child",{"_index":790,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["child(2",{"_index":793,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["child(even",{"_index":764,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["child(even){background",{"_index":1978,"title":{},"body":{"components/TableComponent.html":{}}}],["child.active::after",{"_index":801,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["children",{"_index":1509,"title":{},"body":{"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{}}}],["children[children.length",{"_index":1512,"title":{},"body":{"components/GrammarComponent.html":{}}}],["choice",{"_index":2160,"title":{},"body":{"index.html":{}}}],["chose",{"_index":1799,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["circle",{"_index":1058,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["class",{"_index":33,"title":{"classes/DEAException.html":{},"classes/DemoForceDirectedLayout.html":{},"classes/ExpressionGrammarModel.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{}}}],["class=\"ableitungsbaum",{"_index":1581,"title":{},"body":{"components/GrammarComponent.html":{}}}],["class=\"ableitungsliste",{"_index":1565,"title":{},"body":{"components/GrammarComponent.html":{}}}],["class=\"column",{"_index":1540,"title":{},"body":{"components/GrammarComponent.html":{}}}],["class=\"columns",{"_index":1545,"title":{},"body":{"components/GrammarComponent.html":{}}}],["classes",{"_index":449,"title":{},"body":{"classes/DEAException.html":{},"classes/DemoForceDirectedLayout.html":{},"classes/ExpressionGrammarModel.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["clear",{"_index":1889,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["cli",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["clientid",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["clockwise",{"_index":2415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closed",{"_index":999,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["cluster_appmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_deamodule",{"_index":805,"title":{},"body":{"modules/DeaModule.html":{},"overview.html":{}}}],["cluster_deamodule_declarations",{"_index":807,"title":{},"body":{"modules/DeaModule.html":{},"overview.html":{}}}],["cluster_deamodule_providers",{"_index":806,"title":{},"body":{"modules/DeaModule.html":{},"overview.html":{}}}],["cluster_grammarmodule",{"_index":1648,"title":{},"body":{"modules/GrammarModule.html":{},"overview.html":{}}}],["cluster_grammarmodule_declarations",{"_index":1650,"title":{},"body":{"modules/GrammarModule.html":{},"overview.html":{}}}],["cluster_grammarmodule_providers",{"_index":1649,"title":{},"body":{"modules/GrammarModule.html":{},"overview.html":{}}}],["cluster_puzzlemodule",{"_index":1910,"title":{},"body":{"modules/PuzzleModule.html":{},"overview.html":{}}}],["cluster_puzzlemodule_declarations",{"_index":1911,"title":{},"body":{"modules/PuzzleModule.html":{},"overview.html":{}}}],["cluster_startgamemodule",{"_index":1957,"title":{},"body":{"modules/StartGameModule.html":{},"overview.html":{}}}],["cluster_startgamemodule_declarations",{"_index":1959,"title":{},"body":{"modules/StartGameModule.html":{},"overview.html":{}}}],["cluster_startgamemodule_providers",{"_index":1958,"title":{},"body":{"modules/StartGameModule.html":{},"overview.html":{}}}],["code",{"_index":1441,"title":{},"body":{"components/GrammarComponent.html":{},"index.html":{}}}],["code.code",{"_index":1600,"title":{},"body":{"components/GrammarComponent.html":{}}}],["codes",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codesttring",{"_index":1472,"title":{},"body":{"components/GrammarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["col",{"_index":1625,"title":{},"body":{"components/GrammarComponent.html":{}}}],["coll",{"_index":926,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{}}}],["collapse",{"_index":1976,"title":{},"body":{"components/TableComponent.html":{}}}],["color",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":779,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["columns",{"_index":1847,"title":{},"body":{"components/PuzzleComponent.html":{},"components/StartGameComponent.html":{}}}],["columnspan",{"_index":1069,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["command",{"_index":2161,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component/footer/footer.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["component/login/login.component",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["component/main",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["component/navigation/navigation.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["component/register/register.component",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["component/table/table.component",{"_index":1961,"title":{},"body":{"modules/StartGameModule.html":{}}}],["component_template",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"overview.html":{}}}],["compound",{"_index":1781,"title":{},"body":{"components/PuzzleComponent.html":{},"dependencies.html":{}}}],["compounddraganddrop",{"_index":1780,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["conditions",{"_index":1923,"title":{},"body":{"components/RegisterComponent.html":{}}}],["config",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["configured",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm('bist",{"_index":1210,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["confirm(text",{"_index":1167,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["connect",{"_index":1745,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["console.error(msg",{"_index":461,"title":{},"body":{"classes/DEAException.html":{}}}],["console.log(\"beginn:\",word",{"_index":2003,"title":{},"body":{"classes/WordChecker.html":{}}}],["console.log(\"foundlink\",foundlink",{"_index":2021,"title":{},"body":{"classes/WordChecker.html":{}}}],["console.log(\"foundlinkslänge\",foundlinks.length",{"_index":2011,"title":{},"body":{"classes/WordChecker.html":{}}}],["console.log(\"outlinks\",outgoinglinks",{"_index":2020,"title":{},"body":{"classes/WordChecker.html":{}}}],["console.log(\"validate",{"_index":1189,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["console.log('the",{"_index":998,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["console.log(currentnode",{"_index":2006,"title":{},"body":{"classes/WordChecker.html":{}}}],["console.log(data",{"_index":1945,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["console.log(lastfedges",{"_index":433,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["console.log(this.mydiagramcomponent.diagram",{"_index":1008,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["console.log(word",{"_index":2005,"title":{},"body":{"classes/WordChecker.html":{}}}],["console.log(wordgenerator.generaterandomwords([\"1",{"_index":1188,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["console.log(wordgenerator.generatewords(deaobject",{"_index":1187,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["const",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":237,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User-1.html":{},"injectables/UsersService.html":{}}}],["constructor(cdr",{"_index":1853,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["constructor(dialog",{"_index":577,"title":{},"body":{"components/DeaComponent.html":{}}}],["constructor(dialogref",{"_index":1233,"title":{},"body":{"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{}}}],["constructor(exp",{"_index":1295,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["constructor(grammargraphservice",{"_index":1450,"title":{},"body":{"components/GrammarComponent.html":{}}}],["constructor(http",{"_index":1986,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":357,"title":{},"body":{"components/CytoGraphComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{}}}],["constructor(props",{"_index":1337,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["constructor(reberstring",{"_index":453,"title":{},"body":{"classes/DEAException.html":{}}}],["constructor(renderer",{"_index":306,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["constructor(router",{"_index":238,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(store",{"_index":1753,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{}}}],["constructor(usersservice",{"_index":1933,"title":{},"body":{"components/StartGameComponent.html":{}}}],["container",{"_index":364,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleComponent.html":{}}}],["containter",{"_index":1602,"title":{},"body":{"components/GrammarComponent.html":{}}}],["content",{"_index":731,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["contents",{"_index":1151,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["context",{"_index":2075,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":1584,"title":{},"body":{"components/GrammarComponent.html":{}}}],["corner",{"_index":1147,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["correct",{"_index":1618,"title":{},"body":{"components/GrammarComponent.html":{}}}],["correctexp",{"_index":1414,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["correctexp.join",{"_index":1424,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["correctexp.length",{"_index":1417,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["correctexp[indexofexp",{"_index":1419,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["corresponding",{"_index":949,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["count",{"_index":1738,"title":{},"body":{"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/User-2.html":{}}}],["counter",{"_index":1736,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["counter'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["counter.actions",{"_index":256,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["counter.component.html",{"_index":1737,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["counter.component.ts",{"_index":1735,"title":{},"body":{"components/MyCounterComponent.html":{},"coverage.html":{}}}],["counter.component.ts:15",{"_index":1742,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["counter.component.ts:19",{"_index":1741,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["counter.component.ts:23",{"_index":1743,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["counter.component.ts:9",{"_index":1740,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["counter.reducer",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["counter/my",{"_index":1734,"title":{},"body":{"components/MyCounterComponent.html":{},"coverage.html":{}}}],["counterreducer",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":2037,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createaction('[counter",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[general",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[grammar",{"_index":2316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdefaultreberfsm",{"_index":829,"title":{},"body":{"injectables/DeaService.html":{}}}],["createfeatureselector",{"_index":1700,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["createfeatureselector('grammar",{"_index":1713,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["createmachine",{"_index":847,"title":{},"body":{"injectables/DeaService.html":{}}}],["createrebermachine",{"_index":830,"title":{},"body":{"injectables/DeaService.html":{}}}],["createreducer",{"_index":1701,"title":{},"body":{"interfaces/GrammarState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1702,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["createselector(grammarselector",{"_index":1715,"title":{},"body":{"interfaces/GrammarState.html":{},"miscellaneous/variables.html":{}}}],["cspeed",{"_index":623,"title":{},"body":{"components/DeaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":604,"title":{},"body":{"components/DeaComponent.html":{},"components/MyCounterComponent.html":{}}}],["currentindex",{"_index":1657,"title":{},"body":{"injectables/GrammarService.html":{}}}],["currently",{"_index":265,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["currentnode",{"_index":479,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["currentnode!.figure",{"_index":2007,"title":{},"body":{"classes/WordChecker.html":{}}}],["currentnode!.id",{"_index":496,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["currentnode.figure",{"_index":485,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["currentstartlink",{"_index":533,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["currentstartlink!.to",{"_index":540,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["currentuser",{"_index":1930,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["cursor",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["curve",{"_index":1145,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["customers",{"_index":2099,"title":{},"body":{"dependencies.html":{}}}],["cy",{"_index":296,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleComponent.html":{}}}],["cyconfig",{"_index":302,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["cycontianer",{"_index":359,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["cyto",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"modules/DeaModule.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"modules/GrammarModule.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["cytographcomponent",{"_index":69,"title":{"components/CytoGraphComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"modules/DeaModule.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cytographservice",{"_index":311,"title":{"injectables/CytoGraphService.html":{}},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"coverage.html":{}}}],["cytoscape",{"_index":340,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleComponent.html":{},"dependencies.html":{}}}],["cytoscape.use",{"_index":1782,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["cytoscape.use(dagre",{"_index":1646,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["cytoscapeconfig",{"_index":606,"title":{},"body":{"components/DeaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cytoservice",{"_index":310,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["d",{"_index":2301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dagre",{"_index":1645,"title":{},"body":{"components/GrammarGraphComponent.html":{},"components/PuzzleComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["daniel",{"_index":1970,"title":{},"body":{"components/TableComponent.html":{}}}],["dar",{"_index":2282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["darkcyan",{"_index":1909,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["das",{"_index":520,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["dashed",{"_index":788,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["data",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User-1.html":{},"miscellaneous/variables.html":{}}}],["data(id",{"_index":1832,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["data(label",{"_index":2233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.winstate",{"_index":1252,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["data.word.index",{"_index":1264,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["data.word.vergleich.referenzgraph",{"_index":1262,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["data.word.vergleich.yourgraph",{"_index":1261,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["data.word.word",{"_index":1254,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["datasource",{"_index":552,"title":{},"body":{"components/DeaComponent.html":{}}}],["datasyncservice",{"_index":932,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["datasyncservice.synclinkdata(changes",{"_index":1117,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["datasyncservice.syncmodeldata(changes",{"_index":1119,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["datasyncservice.syncnodedata(changes",{"_index":1114,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["db",{"_index":2098,"title":{},"body":{"dependencies.html":{}}}],["ddd",{"_index":1977,"title":{},"body":{"components/TableComponent.html":{}}}],["dea",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/FooterComponent.html":{},"components/StartGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dea'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["dea.component",{"_index":810,"title":{},"body":{"modules/DeaModule.html":{}}}],["dea.component.html",{"_index":550,"title":{},"body":{"components/DeaComponent.html":{}}}],["dea.component.scss",{"_index":549,"title":{},"body":{"components/DeaComponent.html":{}}}],["dea.links.filter(link",{"_index":494,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["dea.links.find(link",{"_index":534,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["dea.nodes.find(node",{"_index":508,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["dea.service",{"_index":642,"title":{},"body":{"components/DeaComponent.html":{},"modules/DeaModule.html":{}}}],["dea/dea.component",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["dea/dea.module",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["deaarray",{"_index":463,"title":{"interfaces/DeaArray.html":{}},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{}}}],["deacomponent",{"_index":72,"title":{"components/DeaComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"modules/DeaModule.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["deaexception",{"_index":448,"title":{"classes/DEAException.html":{}},"body":{"classes/DEAException.html":{},"injectables/DeaService.html":{},"coverage.html":{}}}],["deaexception(str",{"_index":901,"title":{},"body":{"injectables/DeaService.html":{}}}],["dealink",{"_index":470,"title":{"interfaces/DeaLink.html":{}},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{},"coverage.html":{}}}],["deamodule",{"_index":152,"title":{"modules/DeaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeaModule.html":{},"modules.html":{},"overview.html":{}}}],["deanode",{"_index":471,"title":{"interfaces/DeaNode.html":{}},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{}}}],["deaobject",{"_index":1184,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["deaservice",{"_index":579,"title":{"injectables/DeaService.html":{}},"body":{"components/DeaComponent.html":{},"modules/DeaModule.html":{},"injectables/DeaService.html":{},"coverage.html":{},"overview.html":{}}}],["deaservice.send('b",{"_index":873,"title":{},"body":{"injectables/DeaService.html":{}}}],["deaservice.send(char",{"_index":882,"title":{},"body":{"injectables/DeaService.html":{}}}],["declarations",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{}}}],["decorators",{"_index":327,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["decrement",{"_index":1739,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["deepskyblue",{"_index":1142,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1052,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["definiert",{"_index":447,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/GrammarGraphService.html":{},"classes/WordChecker.html":{}}}],["dein",{"_index":1259,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"components/StartGameComponent.html":{}}}],["deine",{"_index":1213,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["dem",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demoforcedirectedlayout",{"_index":921,"title":{"classes/DemoForceDirectedLayout.html":{}},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"coverage.html":{}}}],["den",{"_index":531,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":116,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":498,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"components/DialogDataExampleDialog.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["des",{"_index":519,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"components/GrammarComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["desktop",{"_index":2249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deterministische",{"_index":2279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deterministischen",{"_index":2310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev",{"_index":1015,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"index.html":{}}}],["development",{"_index":2132,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["diagram",{"_index":1036,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["diagram's",{"_index":1109,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["diagram.grid.visible",{"_index":1004,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["diagram.linktemplate",{"_index":1086,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["diagram.nodetemplate",{"_index":1053,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["diagramcomponent",{"_index":933,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["diagramdivclassname",{"_index":965,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["diagramlinkdata",{"_index":979,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["diagrammodelchange",{"_index":1099,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["diagrammodeldata",{"_index":981,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["diagramnodedata",{"_index":977,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["dialog",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["dialog'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["dialog.component.html",{"_index":1232,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialog.component.scss",{"_index":1231,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialog.html",{"_index":1224,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["dialogcomponent",{"_index":74,"title":{"components/DialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogconfig",{"_index":640,"title":{},"body":{"components/DeaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dialogdata",{"_index":1219,"title":{"interfaces/DialogData.html":{}},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"coverage.html":{}}}],["dialogdataexampledialog",{"_index":76,"title":{"components/DialogDataExampleDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogref",{"_index":990,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":997,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["die",{"_index":440,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"miscellaneous/variables.html":{}}}],["diese",{"_index":1238,"title":{},"body":{"components/DialogComponent.html":{},"miscellaneous/variables.html":{}}}],["dieses",{"_index":491,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["dir",{"_index":1164,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["direction",{"_index":778,"title":{},"body":{"components/DeaComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"miscellaneous/variables.html":{}}}],["directive",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["directives",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2146,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2151,"title":{},"body":{"index.html":{}}}],["disablescroll",{"_index":341,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["disconnected",{"_index":1154,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["dispatch",{"_index":1748,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["display",{"_index":744,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["displayedcolumns",{"_index":553,"title":{},"body":{"components/DeaComponent.html":{}}}],["dist",{"_index":2150,"title":{},"body":{"index.html":{}}}],["div:nth",{"_index":1623,"title":{},"body":{"components/GrammarComponent.html":{}}}],["divider",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["docu",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["document.createelement('div",{"_index":2265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.getelementbyid('cy",{"_index":1825,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["documentation",{"_index":1761,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["dokumentation",{"_index":1534,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["don't",{"_index":1106,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["donelabel",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["double",{"_index":2211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["draft",{"_index":1025,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["draft.diagramlinkdata",{"_index":1116,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["draft.diagrammodeldata",{"_index":1118,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["draft.diagramnodedata",{"_index":1113,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["draft.diagramnodedata.findindex(nd",{"_index":1028,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["draft.diagramnodedata[idx",{"_index":1032,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["draft.selectednodedata",{"_index":1033,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["draft.skipsdiagramupdate",{"_index":1112,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["drag",{"_index":1155,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"dependencies.html":{}}}],["dragged",{"_index":1808,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["dragging",{"_index":1814,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["draggingtool.dragslink",{"_index":1039,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["draggingtool.isgridsnapenabled",{"_index":1040,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["drop",{"_index":1156,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"dependencies.html":{}}}],["dropping",{"_index":1796,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["dropsibling",{"_index":1789,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["droptarget",{"_index":1786,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["droptarget.id",{"_index":1787,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["du",{"_index":1163,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["durch",{"_index":537,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":2092,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":612,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["e').length",{"_index":904,"title":{},"body":{"injectables/DeaService.html":{}}}],["e.ausgabestring",{"_index":914,"title":{},"body":{"injectables/DeaService.html":{}}}],["e.diagram.selection.count",{"_index":1020,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["e.diagram.selection.first",{"_index":1022,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["e.preventdefault",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.reberstring",{"_index":913,"title":{},"body":{"injectables/DeaService.html":{}}}],["e1",{"_index":1601,"title":{},"body":{"components/GrammarComponent.html":{}}}],["e2e",{"_index":2158,"title":{},"body":{"index.html":{}}}],["ease",{"_index":2327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["easier",{"_index":1816,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["edge",{"_index":1828,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["edges",{"_index":2212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":1764,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{}}}],["editable",{"_index":1070,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["ein",{"_index":500,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["eindeutig",{"_index":2016,"title":{},"body":{"classes/WordChecker.html":{}}}],["eine",{"_index":1563,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["einen",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eingabe",{"_index":706,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["eingabealphabet",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eins",{"_index":1843,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["einstellung",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["el",{"_index":308,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["element",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["element.children",{"_index":1510,"title":{},"body":{"components/GrammarComponent.html":{}}}],["element.e",{"_index":712,"title":{},"body":{"components/DeaComponent.html":{}}}],["element.parentnode",{"_index":1508,"title":{},"body":{"components/GrammarComponent.html":{}}}],["element.q0",{"_index":710,"title":{},"body":{"components/DeaComponent.html":{}}}],["element.q1",{"_index":713,"title":{},"body":{"components/DeaComponent.html":{}}}],["element_data",{"_index":608,"title":{},"body":{"components/DeaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementref",{"_index":309,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["elements",{"_index":1826,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["ellipsis",{"_index":1591,"title":{},"body":{"components/GrammarComponent.html":{}}}],["email",{"_index":1723,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["enablescroll",{"_index":342,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enabletracing",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["encapsulation",{"_index":963,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["end",{"_index":774,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"index.html":{}}}],["ende",{"_index":1152,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["endliche",{"_index":2280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endlichen",{"_index":2311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoint",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endstate",{"_index":554,"title":{},"body":{"components/DeaComponent.html":{}}}],["endzustand",{"_index":905,"title":{},"body":{"injectables/DeaService.html":{}}}],["enpunkt",{"_index":483,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["entha",{"_index":2297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["ergebnis",{"_index":1251,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["erkannt",{"_index":1258,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["erkennt",{"_index":2313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erlaubt",{"_index":863,"title":{},"body":{"injectables/DeaService.html":{}}}],["erreicht",{"_index":906,"title":{},"body":{"injectables/DeaService.html":{}}}],["error",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["error(\"ausgehende",{"_index":2013,"title":{},"body":{"classes/WordChecker.html":{}}}],["error('ist",{"_index":865,"title":{},"body":{"injectables/DeaService.html":{}}}],["error('transition",{"_index":862,"title":{},"body":{"injectables/DeaService.html":{}}}],["errorsate",{"_index":369,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["errorstate",{"_index":555,"title":{},"body":{"components/DeaComponent.html":{}}}],["erscheint",{"_index":2361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erst",{"_index":2362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erstellt",{"_index":1241,"title":{},"body":{"components/DialogComponent.html":{}}}],["erzeuge",{"_index":2270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erzeugen",{"_index":1532,"title":{},"body":{"components/GrammarComponent.html":{}}}],["erzeugt",{"_index":1556,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["eval(exp",{"_index":1392,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["evaluatestring",{"_index":563,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["evaluatestring(str",{"_index":585,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["event",{"_index":324,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":321,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["example",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["example'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["example.component.css",{"_index":1268,"title":{},"body":{"components/ExampleComponent.html":{}}}],["example.component.html",{"_index":1269,"title":{},"body":{"components/ExampleComponent.html":{}}}],["example/example.component",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["examplecomponent",{"_index":80,"title":{"components/ExampleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["execute",{"_index":2155,"title":{},"body":{"index.html":{}}}],["exitonoverlayclick",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exp",{"_index":1297,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.afterexp",{"_index":1578,"title":{},"body":{"components/GrammarComponent.html":{}}}],["exp.includes('a",{"_index":1400,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.includes('o",{"_index":1406,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.includes('z",{"_index":1410,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.indexof",{"_index":1371,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.indexof('a",{"_index":1362,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.length",{"_index":1360,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.match(/[0",{"_index":1388,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.match(/\\(\\s",{"_index":1385,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.prevexp",{"_index":1580,"title":{},"body":{"components/GrammarComponent.html":{}}}],["exp.replace('a",{"_index":1405,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.replace('o",{"_index":1409,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.replace('z",{"_index":1413,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.rule",{"_index":1579,"title":{},"body":{"components/GrammarComponent.html":{}}}],["exp.substring(0",{"_index":1366,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp.substring(m",{"_index":1367,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp1",{"_index":1350,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp1.replace",{"_index":1353,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp2",{"_index":1352,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp2.split('').join",{"_index":1355,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["exp].some((r",{"_index":1394,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["expanding",{"_index":1817,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["expindex",{"_index":1334,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["exports",{"_index":227,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["expression",{"_index":1291,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["expression(exp",{"_index":1381,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["expressionchangedafterithasbeencheckederror",{"_index":1014,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["expressiongrammar",{"_index":1442,"title":{},"body":{"components/GrammarComponent.html":{}}}],["expressiongrammar.expression",{"_index":1552,"title":{},"body":{"components/GrammarComponent.html":{}}}],["expressiongrammar.ruleset.length",{"_index":1568,"title":{},"body":{"components/GrammarComponent.html":{}}}],["expressiongrammar.valid",{"_index":1551,"title":{},"body":{"components/GrammarComponent.html":{}}}],["expressiongrammar.value",{"_index":1538,"title":{},"body":{"components/GrammarComponent.html":{}}}],["expressiongrammarmodel",{"_index":1273,"title":{"classes/ExpressionGrammarModel.html":{}},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"classes/RuleSetInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expressiongrammarmodel._isnegnumber(exp",{"_index":1391,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["extends",{"_index":231,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/DEAException.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["externer",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":723,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["f2f2f2",{"_index":1979,"title":{},"body":{"components/TableComponent.html":{}}}],["fake",{"_index":1885,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["falls",{"_index":1480,"title":{},"body":{"components/GrammarComponent.html":{}}}],["falsch",{"_index":670,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{}}}],["falschen",{"_index":2358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["falscher",{"_index":1574,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["falsches",{"_index":700,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1973,"title":{},"body":{"components/TableComponent.html":{}}}],["fehler",{"_index":1263,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["fertig",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff",{"_index":2246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff4081",{"_index":428,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["fff",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":813,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["fig",{"_index":2413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fig.add(new",{"_index":2417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["figure",{"_index":475,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{}}}],["files",{"_index":2142,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1059,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["filter",{"_index":1785,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["filterone",{"_index":919,"title":{},"body":{"injectables/DeaService.html":{}}}],["final",{"_index":858,"title":{},"body":{"injectables/DeaService.html":{}}}],["finalzustaende",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":1953,"title":{},"body":{"components/StartGameComponent.html":{},"index.html":{}}}],["first_page",{"_index":724,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["firstname",{"_index":1981,"title":{},"body":{"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["firstname:string",{"_index":1758,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["flex",{"_index":745,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["fliplabel",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["float",{"_index":1888,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["folgenden",{"_index":1239,"title":{},"body":{"components/DialogComponent.html":{}}}],["font",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":1428,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["footer.component.css",{"_index":1429,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1430,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":82,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["force",{"_index":262,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["forcedirectedvertex.isfixed",{"_index":948,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["foreground",{"_index":1089,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["form",{"_index":750,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["formsmodule",{"_index":824,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["foundlink",{"_index":2018,"title":{},"body":{"classes/WordChecker.html":{}}}],["foundlink!.text?.length",{"_index":2022,"title":{},"body":{"classes/WordChecker.html":{}}}],["foundlink!.to",{"_index":2024,"title":{},"body":{"classes/WordChecker.html":{}}}],["foundlinks",{"_index":2008,"title":{},"body":{"classes/WordChecker.html":{}}}],["foundlinks[0",{"_index":2019,"title":{},"body":{"classes/WordChecker.html":{}}}],["fourtuple",{"_index":1299,"title":{"interfaces/FourTuple.html":{}},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"coverage.html":{}}}],["fromlinkable",{"_index":1081,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["fromlinkableduplicates",{"_index":1082,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["fromlinkableselfnode",{"_index":1084,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["fromport",{"_index":1047,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["frontend",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":753,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["function",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"interfaces/GrammarState.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["function(shape",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functions",{"_index":2123,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2165,"title":{},"body":{"index.html":{}}}],["füge",{"_index":1194,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{}}}],["g",{"_index":1354,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["game",{"_index":936,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["game'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["game.component",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/StartGameModule.html":{}}}],["game.component.css",{"_index":962,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["game.component.html",{"_index":961,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["game.component.ts",{"_index":922,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{}}}],["game.component.ts:111",{"_index":1856,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:17",{"_index":925,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{}}}],["game.component.ts:171",{"_index":1869,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:20",{"_index":1938,"title":{},"body":{"components/StartGameComponent.html":{}}}],["game.component.ts:21",{"_index":1935,"title":{},"body":{"components/StartGameComponent.html":{}}}],["game.component.ts:218",{"_index":1857,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:260",{"_index":1864,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:274",{"_index":1860,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:288",{"_index":1858,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:305",{"_index":1866,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:31",{"_index":1937,"title":{},"body":{"components/StartGameComponent.html":{}}}],["game.component.ts:317",{"_index":1855,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:36",{"_index":1868,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:365",{"_index":1859,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:37",{"_index":1874,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:38",{"_index":1871,"title":{},"body":{"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["game.component.ts:39",{"_index":1867,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:40",{"_index":1872,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:41",{"_index":1875,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:412",{"_index":1865,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:43",{"_index":1877,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:44",{"_index":1873,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:449",{"_index":1246,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["game.component.ts:45",{"_index":1936,"title":{},"body":{"components/StartGameComponent.html":{}}}],["game.component.ts:450",{"_index":1250,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["game.component.ts:451",{"_index":1249,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["game.component.ts:453",{"_index":1247,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["game.component.ts:457",{"_index":1248,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["game.component.ts:47",{"_index":1876,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:55",{"_index":1854,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:57",{"_index":1870,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:60",{"_index":1863,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:79",{"_index":1862,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.component.ts:87",{"_index":1861,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["game.levels.filter(a",{"_index":1205,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["game.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["game.module.ts",{"_index":1960,"title":{},"body":{"modules/StartGameModule.html":{}}}],["game/level.ts",{"_index":2066,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["game/puzzle",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"coverage.html":{}}}],["game/shapes/shape.ts",{"_index":2068,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["game/start",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"interfaces/User-1.html":{},"coverage.html":{}}}],["game/word",{"_index":466,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{}}}],["game[0].links",{"_index":980,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["game[0].nodes",{"_index":978,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["game[next].points",{"_index":1207,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["game[this.activelevel].randomwords",{"_index":1198,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["game[this.activelevel].solution",{"_index":1200,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["game[this.activelevel].task",{"_index":975,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["game[value].links",{"_index":1180,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["game[value].nodes",{"_index":1179,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["game[value].task",{"_index":1177,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["geben",{"_index":2309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gedrueckt",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gegeben",{"_index":2305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gehe",{"_index":536,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["generate",{"_index":2144,"title":{},"body":{"index.html":{}}}],["generatecorrectexpression",{"_index":1287,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["generated",{"_index":2129,"title":{},"body":{"index.html":{}}}],["generateexpression",{"_index":1445,"title":{},"body":{"components/GrammarComponent.html":{}}}],["generateexpression(iscorrect",{"_index":1455,"title":{},"body":{"components/GrammarComponent.html":{}}}],["generatenonreber",{"_index":831,"title":{},"body":{"injectables/DeaService.html":{}}}],["generatenonreberstring",{"_index":564,"title":{},"body":{"components/DeaComponent.html":{}}}],["generaterandomword",{"_index":2025,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generaterandomword(arr",{"_index":2030,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generaterandomwords",{"_index":2026,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generaterandomwords(arr",{"_index":546,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["generatereberconstruct",{"_index":832,"title":{},"body":{"injectables/DeaService.html":{}}}],["generatereberconstruct(reberstringparam",{"_index":840,"title":{},"body":{"injectables/DeaService.html":{}}}],["generatereberstring",{"_index":565,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["generateword",{"_index":2027,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generateword(dea",{"_index":529,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["generatewordrekursive",{"_index":2028,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generatewordrekursive(dea",{"_index":477,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["generatewords",{"_index":2029,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generatewords(dea",{"_index":541,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["generatewrongexpression",{"_index":1288,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["generator",{"_index":938,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{}}}],["generator.ts",{"_index":467,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{},"coverage.html":{}}}],["generator.ts:17",{"_index":2035,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generator.ts:50",{"_index":2034,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generator.ts:59",{"_index":2036,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generator.ts:70",{"_index":2031,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generator.ts:79",{"_index":2033,"title":{},"body":{"classes/WordGenerator.html":{}}}],["generatorellipsespot1",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generatorellipsespot2",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generiere",{"_index":698,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["generieren",{"_index":1560,"title":{},"body":{"components/GrammarComponent.html":{}}}],["genfsm",{"_index":833,"title":{},"body":{"injectables/DeaService.html":{}}}],["genfsm(xstate",{"_index":844,"title":{},"body":{"injectables/DeaService.html":{}}}],["geo",{"_index":2411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geo.add(fig",{"_index":2416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geo.defaultstretch",{"_index":2427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geo.spot1",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geo.spot2",{"_index":2426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getexpression",{"_index":1324,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["getgrammar",{"_index":2062,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getlastitemofarray",{"_index":2070,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getoneuser",{"_index":1984,"title":{},"body":{"injectables/UsersService.html":{}}}],["getrule",{"_index":1328,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["getruleset",{"_index":1332,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["getting",{"_index":2126,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1985,"title":{},"body":{"injectables/UsersService.html":{}}}],["getvalid",{"_index":1330,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["go",{"_index":929,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"index.html":{}}}],["go.adornment",{"_index":1141,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.binding(\"figure",{"_index":1063,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.binding(\"fill",{"_index":1062,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.binding(\"layername",{"_index":1056,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.binding(\"points",{"_index":1090,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.binding(\"stroke",{"_index":1060,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.binding(\"text",{"_index":1076,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.diagram",{"_index":1007,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.forcedirectedlayout",{"_index":944,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.geometry",{"_index":2412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.graphlinksmodel",{"_index":1045,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.graphobject.make",{"_index":1035,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.graphobject.uniform",{"_index":2428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.incrementaldata",{"_index":1100,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.link",{"_index":1087,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.link.avoidsnodes",{"_index":1144,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.link.jumpover",{"_index":1146,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.list().addall([new",{"_index":1158,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.margin(100",{"_index":1131,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.margin(4",{"_index":1075,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.node",{"_index":1026,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.palette",{"_index":1129,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.panel",{"_index":1064,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.pathfigure(w",{"_index":2414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.pathsegment(go.pathsegment.arc",{"_index":2418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.pathsegment(go.pathsegment.move",{"_index":2423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.point(10",{"_index":1159,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.point(70",{"_index":1160,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.rowcolumndefinition",{"_index":1065,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.shape",{"_index":1057,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.shape.definefiguregenerator(\"ring",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.spot(0.156",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.spot(0.844",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go.spot.center",{"_index":1071,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.spot.left",{"_index":1067,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["go.textblock",{"_index":1068,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["gojs",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"dependencies.html":{}}}],["gojsangularmodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["grab",{"_index":1136,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["grabbednode",{"_index":1784,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["grammar",{"_index":697,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"interfaces/GrammarState.html":{},"miscellaneous/variables.html":{}}}],["grammar'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["grammar.action",{"_index":1704,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["grammar.animation",{"_index":1498,"title":{},"body":{"components/GrammarComponent.html":{}}}],["grammar.component",{"_index":1652,"title":{},"body":{"modules/GrammarModule.html":{}}}],["grammar.component.html",{"_index":1440,"title":{},"body":{"components/GrammarComponent.html":{}}}],["grammar.component.scss",{"_index":1439,"title":{},"body":{"components/GrammarComponent.html":{}}}],["grammar.model",{"_index":1492,"title":{},"body":{"components/GrammarComponent.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{}}}],["grammar.service",{"_index":1496,"title":{},"body":{"components/GrammarComponent.html":{},"modules/GrammarModule.html":{}}}],["grammaractions",{"_index":1703,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["grammaranimation",{"_index":1497,"title":{},"body":{"components/GrammarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grammarcomponent",{"_index":84,"title":{"components/GrammarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"modules/GrammarModule.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["grammargraphcomponent",{"_index":86,"title":{"components/GrammarGraphComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"modules/GrammarModule.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["grammargraphconfig",{"_index":1493,"title":{},"body":{"components/GrammarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grammargraphservice",{"_index":1451,"title":{"injectables/GrammarGraphService.html":{}},"body":{"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"modules/GrammarModule.html":{},"coverage.html":{},"overview.html":{}}}],["grammarintroconfig",{"_index":1499,"title":{},"body":{"components/GrammarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grammarmodel",{"_index":1275,"title":{"interfaces/GrammarModel.html":{}},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"classes/RuleSetInterface.html":{},"coverage.html":{}}}],["grammarmodule",{"_index":1647,"title":{"modules/GrammarModule.html":{}},"body":{"modules/GrammarModule.html":{},"modules.html":{},"overview.html":{}}}],["grammarreducer",{"_index":1708,"title":{},"body":{"interfaces/GrammarState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grammarreducer(state",{"_index":1717,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["grammarselector",{"_index":1711,"title":{},"body":{"interfaces/GrammarState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grammarservice",{"_index":1453,"title":{"injectables/GrammarService.html":{}},"body":{"components/GrammarComponent.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"coverage.html":{},"overview.html":{}}}],["grammarstate",{"_index":1698,"title":{"interfaces/GrammarState.html":{}},"body":{"interfaces/GrammarState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grammatik",{"_index":1528,"title":{},"body":{"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["grammerservice",{"_index":1452,"title":{},"body":{"components/GrammarComponent.html":{}}}],["graph",{"_index":295,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleComponent.html":{},"modules.html":{}}}],["graph'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["graph.component",{"_index":826,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["graph.component.ts",{"_index":292,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"coverage.html":{}}}],["graph.component.ts:28",{"_index":336,"title":{},"body":{"components/CytoGraphComponent.html":{}}}],["graph.component.ts:29",{"_index":314,"title":{},"body":{"components/CytoGraphComponent.html":{}}}],["graph.component.ts:30",{"_index":320,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:31",{"_index":1640,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:32",{"_index":322,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:34",{"_index":1641,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:35",{"_index":325,"title":{},"body":{"components/CytoGraphComponent.html":{}}}],["graph.component.ts:37",{"_index":1642,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:40",{"_index":326,"title":{},"body":{"components/CytoGraphComponent.html":{}}}],["graph.component.ts:42",{"_index":312,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:44",{"_index":1639,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:46",{"_index":333,"title":{},"body":{"components/CytoGraphComponent.html":{}}}],["graph.component.ts:48",{"_index":1643,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["graph.component.ts:50",{"_index":335,"title":{},"body":{"components/CytoGraphComponent.html":{}}}],["graph.component.ts:52",{"_index":1644,"title":{},"body":{"components/GrammarGraphComponent.html":{}}}],["graph.service",{"_index":344,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"modules/GrammarModule.html":{}}}],["graph.service.ts",{"_index":368,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"coverage.html":{}}}],["graph.service.ts:10",{"_index":389,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph.service.ts:11",{"_index":375,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph.service.ts:15",{"_index":383,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph.service.ts:19",{"_index":381,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph.service.ts:51",{"_index":378,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph.service.ts:8",{"_index":385,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph.service.ts:9",{"_index":390,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["graph/config",{"_index":1494,"title":{},"body":{"components/GrammarComponent.html":{}}}],["graph/config.ts",{"_index":2055,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["graph/cyto",{"_index":291,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"modules/DeaModule.html":{},"coverage.html":{}}}],["graph/grammar",{"_index":1495,"title":{},"body":{"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"modules/GrammarModule.html":{},"coverage.html":{}}}],["graphdarstellung",{"_index":2312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphen",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["green",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["grid",{"_index":1837,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["group",{"_index":772,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["grow",{"_index":1627,"title":{},"body":{"components/GrammarComponent.html":{}}}],["gueltigen",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h3",{"_index":1611,"title":{},"body":{"components/GrammarComponent.html":{}}}],["halign",{"_index":2232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hallo",{"_index":1948,"title":{},"body":{"components/StartGameComponent.html":{}}}],["halten",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["harder",{"_index":1824,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["haschanged",{"_index":1357,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["haserror",{"_index":890,"title":{},"body":{"injectables/DeaService.html":{}}}],["hat",{"_index":2302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haupt",{"_index":1892,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["headline",{"_index":769,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["height",{"_index":345,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"miscellaneous/variables.html":{}}}],["height:40px",{"_index":1900,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["hello",{"_index":1490,"title":{},"body":{"components/GrammarComponent.html":{}}}],["help",{"_index":1633,"title":{},"body":{"components/GrammarComponent.html":{},"index.html":{}}}],["helvetica",{"_index":1975,"title":{},"body":{"components/TableComponent.html":{}}}],["herleitung",{"_index":1576,"title":{},"body":{"components/GrammarComponent.html":{}}}],["hidden",{"_index":1595,"title":{},"body":{"components/GrammarComponent.html":{}}}],["hideator",{"_index":1883,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["hier",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["highestlevel",{"_index":970,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["highscore",{"_index":1967,"title":{},"body":{"components/TableComponent.html":{}}}],["hint",{"_index":1842,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["hinzu",{"_index":1196,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{}}}],["history",{"_index":1111,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["hit",{"_index":1818,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["hm",{"_index":650,"title":{},"body":{"components/DeaComponent.html":{}}}],["home",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/NavigationComponent.html":{}}}],["horizontal",{"_index":1078,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["hostlistener",{"_index":337,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["hostlistener('mouseenter",{"_index":328,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["hostlistener('mouseleave",{"_index":330,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["hostlisteners",{"_index":305,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["html",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["http",{"_index":1989,"title":{},"body":{"injectables/UsersService.html":{}}}],["http://localhost:4200",{"_index":2138,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/your_url",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:8080/auth",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":1987,"title":{},"body":{"injectables/UsersService.html":{}}}],["httpclientmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["https://js.cytoscape.org/#eles.boundingbox",{"_index":1806,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["icon",{"_index":1585,"title":{},"body":{"components/GrammarComponent.html":{}}}],["id",{"_index":474,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["id:string",{"_index":1756,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["identifier",{"_index":2038,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":1027,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["if(!deaobject.links.find(link",{"_index":1192,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["if(dea.links.filter(link",{"_index":2001,"title":{},"body":{"classes/WordChecker.html":{}}}],["if(foundlinks.length",{"_index":2012,"title":{},"body":{"classes/WordChecker.html":{}}}],["if(value",{"_index":1182,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["ignore",{"_index":362,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"miscellaneous/variables.html":{}}}],["im",{"_index":1265,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["img",{"_index":1955,"title":{},"body":{"components/StartGameComponent.html":{}}}],["immer",{"_index":935,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["implementiert",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":293,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"interfaces/GrammarModel.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"index.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"modules/DeaModule.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{}}}],["important",{"_index":762,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["imports",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{}}}],["includelabels",{"_index":1811,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["includeoverlays",{"_index":1810,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["includes(correctexp[indexofexp",{"_index":1423,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["increment",{"_index":255,"title":{},"body":{"injectables/AuthGuard.html":{},"components/MyCounterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index:3",{"_index":1899,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["indexofexp",{"_index":1416,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["infinity",{"_index":1539,"title":{},"body":{"components/GrammarComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["init",{"_index":1658,"title":{},"body":{"injectables/GrammarService.html":{}}}],["init(rules",{"_index":1660,"title":{},"body":{"injectables/GrammarService.html":{}}}],["initdiagram",{"_index":1034,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["initial",{"_index":855,"title":{},"body":{"injectables/DeaService.html":{}}}],["initialausgabestring",{"_index":586,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["initialize",{"_index":947,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["initializekeycloak",{"_index":2044,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initializekeycloak(keycloak",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["initialstate",{"_index":1707,"title":{},"body":{"interfaces/GrammarState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initoptions",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["initpalette",{"_index":1128,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["initring",{"_index":930,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":941,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["inject(mat_dialog_data",{"_index":1225,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["injectable",{"_index":228,"title":{"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":229,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inline",{"_index":1583,"title":{},"body":{"components/GrammarComponent.html":{}}}],["innen",{"_index":1896,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["input",{"_index":338,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["inputs",{"_index":301,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["inspector",{"_index":1018,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["instance",{"_index":384,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["instanceof",{"_index":282,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["int",{"_index":1613,"title":{},"body":{"components/GrammarComponent.html":{}}}],["interface",{"_index":462,"title":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"interfaces/DialogData.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"classes/WordGenerator.html":{},"coverage.html":{}}}],["interfaces",{"_index":464,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"interfaces/DialogData.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"overview.html":{}}}],["internal",{"_index":1137,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["interpret",{"_index":848,"title":{},"body":{"injectables/DeaService.html":{}}}],["interpret(xstate).ontransition(listener).start",{"_index":854,"title":{},"body":{"injectables/DeaService.html":{}}}],["interval",{"_index":637,"title":{},"body":{"components/DeaComponent.html":{},"injectables/GrammarService.html":{}}}],["interval(5000",{"_index":688,"title":{},"body":{"components/DeaComponent.html":{}}}],["interval(speed[v",{"_index":1681,"title":{},"body":{"injectables/GrammarService.html":{}}}],["interval(speed[val",{"_index":1684,"title":{},"body":{"injectables/GrammarService.html":{}}}],["intro",{"_index":662,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["intro.config",{"_index":635,"title":{},"body":{"components/DeaComponent.html":{}}}],["intro.js",{"_index":633,"title":{},"body":{"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/GrammarComponent.html":{},"dependencies.html":{}}}],["intro.setoptions(grammarintroconfig).start",{"_index":1519,"title":{},"body":{"components/GrammarComponent.html":{}}}],["intro.setoptions(introjsconfig).start",{"_index":663,"title":{},"body":{"components/DeaComponent.html":{}}}],["introjs",{"_index":632,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["introjsconfig",{"_index":634,"title":{},"body":{"components/DeaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["intuitiv",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inv",{"_index":2205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isaccessallowed",{"_index":236,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["isaccessallowed(route",{"_index":244,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["iscorrect",{"_index":917,"title":{},"body":{"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["isexpressionvalid",{"_index":1289,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["isexpressionvalid(exp",{"_index":1322,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["ispanelmain",{"_index":1092,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["ist",{"_index":484,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/StartGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["items",{"_index":780,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["j",{"_index":1359,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["jaadari",{"_index":1434,"title":{},"body":{"components/FooterComponent.html":{},"components/TableComponent.html":{}}}],["jeder",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":545,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["js",{"_index":2096,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1794,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["jsonwebtoken",{"_index":2110,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":747,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["kann",{"_index":1570,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["kanten",{"_index":2014,"title":{},"body":{"classes/WordChecker.html":{}}}],["karma",{"_index":2157,"title":{},"body":{"index.html":{}}}],["kein",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keine",{"_index":1555,"title":{},"body":{"components/GrammarComponent.html":{}}}],["key",{"_index":472,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["keyboardnavigation",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycloak",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["keycloak.init",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["keycloakangularmodule",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["keycloakauthguard",{"_index":232,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["keycloakservice",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["keyframes",{"_index":2328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyframes([style",{"_index":2332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":2078,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["keys[e.keycode",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":1309,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["kind.indexof(r",{"_index":1397,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["knoten",{"_index":1153,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["kopiert",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["korrekt",{"_index":666,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/GrammarComponent.html":{}}}],["korrekten",{"_index":2355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["korrektes",{"_index":699,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["l",{"_index":2283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l1",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":443,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":789,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["last_page",{"_index":730,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["lastfedges",{"_index":430,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["lastfedges[0].data",{"_index":442,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["lastfedges[0].style",{"_index":436,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["lastfedges[1].data('label",{"_index":445,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["lastfedges[1].style",{"_index":438,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["lastname",{"_index":1982,"title":{},"body":{"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["lastname:string",{"_index":1759,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["lastnode",{"_index":370,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["layout",{"_index":1043,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":352,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["level",{"_index":937,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["leveln",{"_index":1212,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["levelreducer",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["levels",{"_index":2315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["li",{"_index":1903,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["li.active",{"_index":1908,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["liefert",{"_index":1260,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["lightblue",{"_index":1897,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["lightgoldenrodyellow",{"_index":803,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["lightgray",{"_index":743,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["lightgrey",{"_index":1956,"title":{},"body":{"components/StartGameComponent.html":{}}}],["lightpink",{"_index":1844,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["lightseagreen",{"_index":1902,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["lightslategrey",{"_index":1846,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["line",{"_index":1833,"title":{},"body":{"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["linecolor",{"_index":401,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["link",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["link.from",{"_index":495,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["link.key",{"_index":535,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["link.to",{"_index":2002,"title":{},"body":{"classes/WordChecker.html":{}}}],["link?.text?.includes(word[0",{"_index":2010,"title":{},"body":{"classes/WordChecker.html":{}}}],["linkfromportidproperty",{"_index":1046,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["linkingtool.isunconnectedlinkvalid",{"_index":1038,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["linkkeyproperty",{"_index":1051,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["links",{"_index":468,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["linktext",{"_index":511,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["linktext.length",{"_index":517,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["linktext[0",{"_index":524,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["linktext[randomlinktext",{"_index":523,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["linktoportidproperty",{"_index":1048,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["list",{"_index":1827,"title":{},"body":{"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["listelement",{"_index":1443,"title":{},"body":{"components/GrammarComponent.html":{}}}],["listener",{"_index":845,"title":{},"body":{"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["literal",{"_index":315,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"interfaces/DialogData.html":{},"interfaces/FourTuple.html":{},"components/GrammarGraphComponent.html":{},"classes/WordChecker.html":{},"miscellaneous/variables.html":{}}}],["loaddiagram",{"_index":1850,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["loaddiagram(value",{"_index":1181,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["loadnextlevel",{"_index":1851,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["localstorage.getitem(\"highestlevel",{"_index":2198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.setitem('activelevel",{"_index":1173,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["localstorage.setitem('highestlevel",{"_index":1202,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["localstorage.setitem('highestlevel',\"0",{"_index":1217,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["localstorage.setitem('score",{"_index":1218,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["log",{"_index":264,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/NavigationComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["login",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["login.component.css",{"_index":1719,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1720,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":87,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":1765,"title":{},"body":{"components/NavigationComponent.html":{}}}],["loop",{"_index":2225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lt",{"_index":2298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["länge",{"_index":2303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m",{"_index":1361,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["main",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["mainpagecomponent",{"_index":89,"title":{"components/MainPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1813,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["makenetwork",{"_index":923,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["makenetwork(coll",{"_index":924,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["man",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manuelle",{"_index":1535,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{}}}],["markiert",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maryam",{"_index":1972,"title":{},"body":{"components/TableComponent.html":{}}}],["master",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["mat",{"_index":1596,"title":{},"body":{"components/GrammarComponent.html":{}}}],["mat_dialog_data",{"_index":943,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["matbuttonmodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["matbuttontogglemodule",{"_index":818,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["match",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["matchdoubled",{"_index":1387,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["matching",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":578,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["matdialogmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":942,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["material",{"_index":1243,"title":{},"body":{"components/DialogComponent.html":{}}}],["matformfieldmodule",{"_index":811,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["math.floor(math.random",{"_index":503,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/WordGenerator.html":{}}}],["math.max(rad",{"_index":2422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.random",{"_index":487,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":1402,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["mathematische",{"_index":1529,"title":{},"body":{"components/GrammarComponent.html":{}}}],["maticonmodule",{"_index":820,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["matinputmodule",{"_index":814,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["matradiomodule",{"_index":1653,"title":{},"body":{"modules/GrammarModule.html":{}}}],["matrows",{"_index":556,"title":{},"body":{"components/DeaComponent.html":{}}}],["matslidermodule",{"_index":822,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["mattablemodule",{"_index":816,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["max",{"_index":318,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["maximal",{"_index":2304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mehre",{"_index":514,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["menu",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["method",{"_index":946,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["methods",{"_index":233,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["middle",{"_index":758,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["min",{"_index":316,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["miscellaneous",{"_index":2122,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":532,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"components/DialogComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":2251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":1016,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["model",{"_index":1044,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["modern",{"_index":2248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modes",{"_index":1444,"title":{},"body":{"components/GrammarComponent.html":{}}}],["modified",{"_index":1121,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["modifiednodedatas",{"_index":1126,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["module",{"_index":113,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{}},"body":{}}],["modules",{"_index":115,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{},"modules.html":{},"overview.html":{}}}],["modus",{"_index":1547,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["mongo",{"_index":2097,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":2166,"title":{},"body":{"index.html":{}}}],["mouseenter",{"_index":297,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["mouseleave",{"_index":298,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["mousewheel",{"_index":2267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg",{"_index":387,"title":{},"body":{"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"injectables/GrammarGraphService.html":{}}}],["mycountercomponent",{"_index":92,"title":{"components/MyCounterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["mydiagramcomponent",{"_index":987,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["möchtest",{"_index":1216,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["müssen",{"_index":2015,"title":{},"body":{"classes/WordChecker.html":{}}}],["n",{"_index":887,"title":{},"body":{"injectables/DeaService.html":{},"miscellaneous/variables.html":{}}}],["n+3",{"_index":1624,"title":{},"body":{"components/GrammarComponent.html":{}}}],["n.s",{"_index":888,"title":{},"body":{"injectables/DeaService.html":{}}}],["n0",{"_index":2342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n1",{"_index":2343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n2",{"_index":2344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n3",{"_index":2345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n4",{"_index":2346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n5",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nach",{"_index":2363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nachfolgenden",{"_index":2277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["najima",{"_index":1433,"title":{},"body":{"components/FooterComponent.html":{},"components/TableComponent.html":{}}}],["name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nasty",{"_index":1952,"title":{},"body":{"components/StartGameComponent.html":{}}}],["navbar",{"_index":1768,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navbarsupportedcontent",{"_index":1766,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigate",{"_index":2137,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1750,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/User-2.html":{}}}],["navigation'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["navigation.component.css",{"_index":1751,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/User-2.html":{}}}],["navigation.component.html",{"_index":1752,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/User-2.html":{}}}],["navigationcomponent",{"_index":94,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User-2.html":{},"coverage.html":{},"overview.html":{}}}],["nd",{"_index":1031,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["nd.id",{"_index":1029,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["need",{"_index":2162,"title":{},"body":{"index.html":{}}}],["nestjs/cli",{"_index":2093,"title":{},"body":{"dependencies.html":{}}}],["net",{"_index":955,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["net.vertexes.each(vertex",{"_index":957,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["new",{"_index":356,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newparentnode",{"_index":1792,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["newstring",{"_index":868,"title":{},"body":{"injectables/DeaService.html":{}}}],["newstring.filter((a",{"_index":920,"title":{},"body":{"injectables/DeaService.html":{}}}],["newstring.push",{"_index":883,"title":{},"body":{"injectables/DeaService.html":{}}}],["newstring.reduce((a",{"_index":886,"title":{},"body":{"injectables/DeaService.html":{}}}],["nextdiagram",{"_index":1852,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["nextdiagram(value",{"_index":1172,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["nextlabel",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nextlevel",{"_index":1266,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["nextlinkelement",{"_index":505,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["nextlinkelement!.to",{"_index":510,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["nextnode",{"_index":877,"title":{},"body":{"injectables/DeaService.html":{}}}],["nextnodeelement",{"_index":507,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["ng",{"_index":2135,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1009,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["ngclass]=\"{correct",{"_index":1537,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ngmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{}}}],["ngonchanges",{"_index":299,"title":{},"body":{"components/CytoGraphComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["ngonchanges(changes",{"_index":331,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["ngoninit",{"_index":566,"title":{},"body":{"components/DeaComponent.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["ngonspeedchange",{"_index":1446,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ngonspeedchange(v",{"_index":1459,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ngrx/store",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"interfaces/GrammarState.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"dependencies.html":{}}}],["nicht",{"_index":657,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["noch",{"_index":1554,"title":{},"body":{"components/GrammarComponent.html":{}}}],["node",{"_index":482,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node.data.id",{"_index":1030,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["node.id",{"_index":509,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["node.isselected",{"_index":950,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["node1",{"_index":395,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node1.animate",{"_index":416,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node1.id",{"_index":399,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node1.style",{"_index":400,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node2",{"_index":397,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node2.animate",{"_index":426,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node2.id",{"_index":414,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["node2.style",{"_index":405,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["nodedimensionsincludelabels",{"_index":2338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodekeyproperty",{"_index":1050,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["nodes",{"_index":469,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":781,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["normal",{"_index":2333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notes",{"_index":492,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["nowrap",{"_index":1593,"title":{},"body":{"components/GrammarComponent.html":{}}}],["null",{"_index":388,"title":{},"body":{"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":355,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["number.parsefloat(result",{"_index":1393,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["nur",{"_index":439,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":2341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["o",{"_index":1301,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["ob",{"_index":481,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["object",{"_index":1125,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":253,"title":{},"body":{"injectables/AuthGuard.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["observeddiagram",{"_index":976,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["oder",{"_index":1562,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["ok",{"_index":1169,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["older",{"_index":2245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oldexp",{"_index":1319,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["oldexp.slice",{"_index":1351,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["on(grammaractions.getgrammar",{"_index":1709,"title":{},"body":{"interfaces/GrammarState.html":{},"miscellaneous/variables.html":{}}}],["on(increment",{"_index":2195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onbegin",{"_index":1447,"title":{},"body":{"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["onchanges",{"_index":294,"title":{},"body":{"components/CytoGraphComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["one",{"_index":1120,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["onend",{"_index":567,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["oninit",{"_index":548,"title":{},"body":{"components/DeaComponent.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["onmanualexpressionchange",{"_index":1448,"title":{},"body":{"components/GrammarComponent.html":{}}}],["onmanualexpressionchange(exp",{"_index":1463,"title":{},"body":{"components/GrammarComponent.html":{}}}],["onnext",{"_index":568,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{},"components/PuzzleGameComponent.html":{}}}],["onnext(shouldnotstop",{"_index":593,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["onnoclick",{"_index":1226,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["onnwxtlevelchanged",{"_index":1228,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["onpause",{"_index":569,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["onplay",{"_index":570,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["onprevious",{"_index":571,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["onreset",{"_index":1449,"title":{},"body":{"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["onstart",{"_index":572,"title":{},"body":{"components/DeaComponent.html":{}}}],["onstop",{"_index":573,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["onwheel",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opacity",{"_index":408,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"miscellaneous/variables.html":{}}}],["opendialog",{"_index":574,"title":{},"body":{"components/DeaComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["opendialog(check",{"_index":989,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["optional",{"_index":243,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"components/DeaComponent.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1783,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["orphan",{"_index":1790,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["out",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"components/PuzzleComponent.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outgoinglinks",{"_index":493,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["outgoinglinks.filter(link",{"_index":2009,"title":{},"body":{"classes/WordChecker.html":{}}}],["outgoinglinks.length",{"_index":504,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["outgoinglinks[randomlinknumber",{"_index":506,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["outgoinglinks[randomlinknumber].text.split",{"_index":512,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["outline",{"_index":1891,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["output",{"_index":339,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["outputs",{"_index":303,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["outside",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["outthreshold",{"_index":1822,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["over",{"_index":1809,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["overflow",{"_index":1594,"title":{},"body":{"components/GrammarComponent.html":{}}}],["overlay",{"_index":785,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["override",{"_index":945,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["overthreshold",{"_index":1812,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["overview",{"_index":2167,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":721,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":2085,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":735,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["padding:12px",{"_index":1435,"title":{},"body":{"components/FooterComponent.html":{}}}],["page",{"_index":1728,"title":{},"body":{"components/MainPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["page.component",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.css",{"_index":1729,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.html",{"_index":1730,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts",{"_index":1727,"title":{},"body":{"components/MainPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":1732,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:8",{"_index":1731,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page/main",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["palette",{"_index":967,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["palette.linktemplate",{"_index":1139,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["palette.model",{"_index":1149,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["palette.nodetemplate",{"_index":1132,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["palette.padding",{"_index":1130,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["palettedivclassname",{"_index":966,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["palettenodedata",{"_index":984,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["parameters",{"_index":242,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":1507,"title":{},"body":{"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{}}}],["parent.scrolltop",{"_index":1511,"title":{},"body":{"components/GrammarComponent.html":{}}}],["parseint(localstorage.getitem('activelevel",{"_index":969,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["parseint(localstorage.getitem('highestlevel",{"_index":971,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["parseint(localstorage.getitem('score",{"_index":973,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["passive",{"_index":2268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":1724,"title":{},"body":{"components/LoginComponent.html":{}}}],["path",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["pause",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause_circle_filled",{"_index":728,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["pipe",{"_index":1682,"title":{},"body":{"injectables/GrammarService.html":{}}}],["pkcemethod",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["platform",{"_index":2159,"title":{},"body":{"index.html":{}}}],["play_circle_filled",{"_index":726,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["pointer",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["points",{"_index":1157,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["portid",{"_index":1079,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["position",{"_index":350,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["pre",{"_index":1599,"title":{},"body":{"components/GrammarComponent.html":{}}}],["present",{"_index":285,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["preserved",{"_index":1802,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["preset",{"_index":2240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pressed",{"_index":1168,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["prettier",{"_index":2114,"title":{},"body":{"dependencies.html":{}}}],["preventdefault",{"_index":2079,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["preventdefault(e",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preventdefaultforscrollkeys",{"_index":2080,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prevevent",{"_index":875,"title":{},"body":{"injectables/DeaService.html":{}}}],["prevexp",{"_index":1335,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["previouselements",{"_index":371,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["prevlabel",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":258,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["proceed",{"_index":279,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["produce",{"_index":934,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["produce(appcomp.state",{"_index":1024,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["produce(this.state",{"_index":1102,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["production",{"_index":2269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{}}}],["profile'},{'name",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["profile.component.css",{"_index":1770,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/User.html":{}}}],["profile.component.html",{"_index":1771,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/User.html":{}}}],["profile/profile.component",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecomponent",{"_index":96,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":2128,"title":{},"body":{"index.html":{}}}],["prop",{"_index":982,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"properties.html":{}}}],["props",{"_index":1925,"title":{},"body":{"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["props?.afterexp",{"_index":1345,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["props?.expindex",{"_index":1339,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["props?.prevexp",{"_index":1343,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["props?.rule",{"_index":1341,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["protected",{"_index":259,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["providedin",{"_index":257,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":809,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"modules/StartGameModule.html":{}}}],["prüfe",{"_index":513,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["public",{"_index":234,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{}}}],["punkte",{"_index":1879,"title":{},"body":{"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{}}}],["puzzle",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["puzzle'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["puzzle.component",{"_index":1913,"title":{},"body":{"modules/PuzzleModule.html":{}}}],["puzzle.component.css",{"_index":1777,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["puzzle.component.html",{"_index":1778,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["puzzle/puzzle.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["puzzle/puzzle.module",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["puzzlecomponent",{"_index":98,"title":{"components/PuzzleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["puzzlegamecomponent",{"_index":100,"title":{"components/PuzzleGameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["puzzlemodule",{"_index":122,"title":{"modules/PuzzleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PuzzleModule.html":{},"modules.html":{},"overview.html":{}}}],["q",{"_index":709,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["q0",{"_index":611,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["q1",{"_index":613,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["querylist",{"_index":618,"title":{},"body":{"components/DeaComponent.html":{}}}],["r",{"_index":911,"title":{},"body":{"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["r.nativeelement.id",{"_index":680,"title":{},"body":{"components/DeaComponent.html":{}}}],["rad",{"_index":2410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rad).close",{"_index":2420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rad2",{"_index":2421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rad2).close",{"_index":2424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radio",{"_index":1597,"title":{},"body":{"components/GrammarComponent.html":{}}}],["random",{"_index":499,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["randomgenchar",{"_index":851,"title":{},"body":{"injectables/DeaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["randomgenchar(...object.keys(nextnode).filter((a",{"_index":880,"title":{},"body":{"injectables/DeaService.html":{}}}],["randomgeneratedarray",{"_index":1197,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["randomlinknumber",{"_index":502,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["randomlinktext",{"_index":518,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["randomwords",{"_index":2291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rang",{"_index":1968,"title":{},"body":{"components/TableComponent.html":{}}}],["rdm",{"_index":894,"title":{},"body":{"injectables/DeaService.html":{}}}],["read",{"_index":620,"title":{},"body":{"components/DeaComponent.html":{}}}],["readme",{"_index":1436,"title":{},"body":{"components/GrammarComponent.html":{}}}],["readonly",{"_index":260,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["realm",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["reber",{"_index":696,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"miscellaneous/variables.html":{}}}],["reberconstruct",{"_index":557,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["reberconstruct.map((a",{"_index":893,"title":{},"body":{"injectables/DeaService.html":{}}}],["reberstring",{"_index":452,"title":{},"body":{"classes/DEAException.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["reberstringparam",{"_index":842,"title":{},"body":{"injectables/DeaService.html":{}}}],["reberstringparam.substring(1",{"_index":915,"title":{},"body":{"injectables/DeaService.html":{}}}],["reberstringparam[0",{"_index":916,"title":{},"body":{"injectables/DeaService.html":{}}}],["reberwort",{"_index":651,"title":{},"body":{"components/DeaComponent.html":{}}}],["rectangle",{"_index":2234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["red",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["redirectto",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["redirecturi",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{}}}],["reducer",{"_index":2063,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":1716,"title":{},"body":{"interfaces/GrammarState.html":{},"miscellaneous/functions.html":{}}}],["reduziert",{"_index":1572,"title":{},"body":{"components/GrammarComponent.html":{}}}],["reference",{"_index":2168,"title":{},"body":{"index.html":{}}}],["referenzautomat",{"_index":1199,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["referenzgraph",{"_index":1223,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["regel",{"_index":1566,"title":{},"body":{"components/GrammarComponent.html":{}}}],["regeln",{"_index":2367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["register.component.css",{"_index":1915,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1916,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":103,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reinitmodel",{"_index":1161,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["relative",{"_index":749,"title":{},"body":{"components/DeaComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["relinkingtool.isunconnectedlinkvalid",{"_index":1041,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["relinkingtool.portgravity",{"_index":1042,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["reload",{"_index":2140,"title":{},"body":{"index.html":{}}}],["remember",{"_index":1725,"title":{},"body":{"components/LoginComponent.html":{}}}],["removed",{"_index":1803,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["render",{"_index":300,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleComponent.html":{}}}],["renderer",{"_index":313,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["renderer2",{"_index":307,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["rendertablerows",{"_index":575,"title":{},"body":{"components/DeaComponent.html":{}}}],["repeat",{"_index":1533,"title":{},"body":{"components/GrammarComponent.html":{}}}],["require",{"_index":2076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":275,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiredroles",{"_index":276,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiredroles.every((role",{"_index":286,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiredroles.length",{"_index":284,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["reset",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/DeaModule.html":{},"modules/GrammarModule.html":{},"components/MyCounterComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{},"overview.html":{}}}],["resetanimation",{"_index":373,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["resetgame",{"_index":1209,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["result",{"_index":542,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordGenerator.html":{}}}],["resultat",{"_index":1567,"title":{},"body":{"components/GrammarComponent.html":{}}}],["results",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"interfaces/GrammarState.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":250,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["reverse",{"_index":1575,"title":{},"body":{"components/GrammarComponent.html":{},"components/StartGameComponent.html":{},"miscellaneous/variables.html":{}}}],["reverser",{"_index":1546,"title":{},"body":{"components/GrammarComponent.html":{}}}],["rgba(0",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(128",{"_index":1603,"title":{},"body":{"components/GrammarComponent.html":{}}}],["rgba(211",{"_index":1614,"title":{},"body":{"components/GrammarComponent.html":{}}}],["rgba(238",{"_index":765,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["rgba(251",{"_index":1607,"title":{},"body":{"components/GrammarComponent.html":{}}}],["richtig",{"_index":1253,"title":{},"body":{"components/DialogDataExampleDialog.html":{}}}],["richtigen",{"_index":2357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["right",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["rightwords",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ring",{"_index":486,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":274,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["route",{"_index":249,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["route.data['roles",{"_index":277,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["router",{"_index":239,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["routermodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DeaModule.html":{}}}],["routermodule.forroot",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":226,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":247,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["routes",{"_index":143,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing",{"_index":1143,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["routing.module",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":225,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":760,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["rows",{"_index":1838,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["rule",{"_index":1292,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule.afterexp",{"_index":1377,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule.expindex",{"_index":1379,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule.prevexp",{"_index":1378,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule.rule.split('').reverse().join('').replace",{"_index":1380,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule1",{"_index":1363,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule1.afterexp",{"_index":1368,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule1.expindex",{"_index":1364,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule1.prevexp",{"_index":1365,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rule1.rule",{"_index":1369,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rules",{"_index":1356,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"classes/RuleSetInterface.html":{}}}],["rules.length",{"_index":1548,"title":{},"body":{"components/GrammarComponent.html":{}}}],["rules.map((rule",{"_index":1376,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rules.push(rule1",{"_index":1370,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rules.reverse",{"_index":1375,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rules[rules.length",{"_index":1549,"title":{},"body":{"components/GrammarComponent.html":{}}}],["ruleset",{"_index":1294,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["rulesetinterface",{"_index":1303,"title":{"classes/RuleSetInterface.html":{}},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"classes/RuleSetInterface.html":{},"coverage.html":{}}}],["run",{"_index":2134,"title":{},"body":{"index.html":{}}}],["running",{"_index":2152,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":254,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":639,"title":{},"body":{"components/DeaComponent.html":{},"injectables/GrammarService.html":{}}}],["s",{"_index":643,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"miscellaneous/variables.html":{}}}],["s*/gm",{"_index":1386,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["s256",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["same",{"_index":1805,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["sans",{"_index":1073,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{}}}],["scaffolding",{"_index":2143,"title":{},"body":{"index.html":{}}}],["scale(0.8",{"_index":1587,"title":{},"body":{"components/GrammarComponent.html":{}}}],["scale(7",{"_index":1606,"title":{},"body":{"components/GrammarComponent.html":{}}}],["schaue",{"_index":525,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["schritt",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["score",{"_index":972,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["scroll",{"_index":1621,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["se",{"_index":393,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["se[0",{"_index":396,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["se[1",{"_index":398,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["sei",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sein",{"_index":2017,"title":{},"body":{"classes/WordChecker.html":{}}}],["seite",{"_index":2433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selected",{"_index":1122,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["selectednodedata",{"_index":1124,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["selectfetauregrammar",{"_index":1712,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["selectgrammarselector",{"_index":1714,"title":{},"body":{"interfaces/GrammarState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectionadorned",{"_index":1135,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["selectionadornmenttemplate",{"_index":1140,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["selectnode",{"_index":304,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"miscellaneous/variables.html":{}}}],["self",{"_index":773,"title":{},"body":{"components/DeaComponent.html":{}}}],["serif",{"_index":1074,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{}}}],["serve",{"_index":2136,"title":{},"body":{"index.html":{}}}],["server",{"_index":2133,"title":{},"body":{"index.html":{}}}],["service",{"_index":899,"title":{},"body":{"injectables/DeaService.html":{},"dependencies.html":{}}}],["service.send('b",{"_index":918,"title":{},"body":{"injectables/DeaService.html":{}}}],["service.send(char",{"_index":908,"title":{},"body":{"injectables/DeaService.html":{}}}],["service.stop",{"_index":910,"title":{},"body":{"injectables/DeaService.html":{}}}],["set",{"_index":1103,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{}}}],["setexpression(exp",{"_index":1326,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["setinstance",{"_index":374,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["setinstance(instance",{"_index":382,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["settimeout",{"_index":415,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{}}}],["shape",{"_index":1091,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["shapes/shape",{"_index":931,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["shared/dialog/dialog.component",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/DeaComponent.html":{}}}],["shared/exceptions/deaexception",{"_index":853,"title":{},"body":{"injectables/DeaService.html":{}}}],["shared/helpers/helpers",{"_index":852,"title":{},"body":{"injectables/DeaService.html":{}}}],["shouldnotstop",{"_index":595,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["showbullets",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showbuttons",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showgrid",{"_index":1002,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["showoneuser",{"_index":1931,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["showuser",{"_index":1932,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["sibling",{"_index":1798,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["siblings",{"_index":1791,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["sicher",{"_index":1211,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["sicher?!\\nok",{"_index":1165,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["sides",{"_index":1821,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["sie",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["siehe",{"_index":722,"title":{},"body":{"components/DeaComponent.html":{}}}],["sig",{"_index":1300,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["simplechanges",{"_index":332,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["sind",{"_index":446,"title":{},"body":{"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/GrammarGraphService.html":{},"classes/WordGenerator.html":{}}}],["size",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["sizing",{"_index":1626,"title":{},"body":{"components/GrammarComponent.html":{}}}],["skipsdiagramupdate",{"_index":983,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["slider",{"_index":776,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["smode",{"_index":1544,"title":{},"body":{"components/GrammarComponent.html":{}}}],["solid",{"_index":742,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["solution",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solved",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"modules/DeaModule.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"modules/GrammarModule.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"modules/PuzzleModule.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["source.pipe(takewhile",{"_index":692,"title":{},"body":{"components/DeaComponent.html":{}}}],["sowohl",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":1592,"title":{},"body":{"components/GrammarComponent.html":{},"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/StartGameComponent.html":{}}}],["spec\\.ts",{"_index":2194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specifies",{"_index":1793,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["specify",{"_index":1150,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["speed",{"_index":377,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speed1}}s",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed2}}s",{"_index":2331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed[this.speed",{"_index":672,"title":{},"body":{"components/DeaComponent.html":{}}}],["sprache",{"_index":1257,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../config.ts",{"_index":2188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../counter.actions.ts",{"_index":2190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../counter.reducer.ts",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../grammar.action.ts",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../grammar.animation.ts",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../grammar.reducer.ts",{"_index":2125,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../grammar.service.ts",{"_index":2176,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../helpers.ts",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../intro.config.ts",{"_index":2192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../introjs.ts",{"_index":2189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../level.ts",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shape.ts",{"_index":2191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../table.config.ts",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":224,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth.guard.ts",{"_index":230,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:11",{"_index":241,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/auth.guard.ts:20",{"_index":248,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/auth/auth.module.ts",{"_index":289,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/component/footer/footer.component.ts",{"_index":1427,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/component/footer/footer.component.ts:12",{"_index":1432,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/component/footer/footer.component.ts:8",{"_index":1431,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/component/login/login.component.ts",{"_index":1718,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/component/login/login.component.ts:12",{"_index":1722,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/component/login/login.component.ts:8",{"_index":1721,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/component/main",{"_index":1726,"title":{},"body":{"components/MainPageComponent.html":{},"coverage.html":{}}}],["src/app/component/navigation/navigation.component.ts",{"_index":1749,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/User-2.html":{},"coverage.html":{}}}],["src/app/component/navigation/navigation.component.ts:19",{"_index":1754,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/component/navigation/navigation.component.ts:25",{"_index":1755,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/component/register/register.component.ts",{"_index":1914,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/component/register/register.component.ts:12",{"_index":1918,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/component/register/register.component.ts:8",{"_index":1917,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/component/table/table.component.ts",{"_index":1962,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/component/table/table.component.ts:12",{"_index":1966,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/component/table/table.component.ts:8",{"_index":1965,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/counter.actions.ts",{"_index":2048,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/counter.reducer.ts",{"_index":2049,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/dea/cyto",{"_index":290,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"coverage.html":{}}}],["src/app/dea/dea.component.ts",{"_index":547,"title":{},"body":{"components/DeaComponent.html":{},"coverage.html":{}}}],["src/app/dea/dea.component.ts:101",{"_index":587,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:111",{"_index":594,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:126",{"_index":602,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:142",{"_index":598,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:162",{"_index":599,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:166",{"_index":592,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:181",{"_index":600,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:191",{"_index":597,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:20",{"_index":614,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:209",{"_index":596,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:21",{"_index":609,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:213",{"_index":583,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:22",{"_index":607,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:23",{"_index":624,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:24",{"_index":629,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:25",{"_index":627,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:26",{"_index":622,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:27",{"_index":605,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:28",{"_index":626,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:29",{"_index":616,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:30",{"_index":617,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:32",{"_index":582,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:33",{"_index":581,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:36",{"_index":621,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:37",{"_index":580,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:40",{"_index":610,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:66",{"_index":591,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:70",{"_index":601,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:74",{"_index":603,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:79",{"_index":590,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:88",{"_index":589,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.component.ts:97",{"_index":584,"title":{},"body":{"components/DeaComponent.html":{}}}],["src/app/dea/dea.module.ts",{"_index":808,"title":{},"body":{"modules/DeaModule.html":{}}}],["src/app/dea/dea.service.ts",{"_index":827,"title":{},"body":{"injectables/DeaService.html":{},"coverage.html":{}}}],["src/app/dea/dea.service.ts:106",{"_index":835,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:11",{"_index":846,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:136",{"_index":838,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:15",{"_index":837,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:151",{"_index":841,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:33",{"_index":836,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:44",{"_index":843,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/dea.service.ts:78",{"_index":839,"title":{},"body":{"injectables/DeaService.html":{}}}],["src/app/dea/intro.config.ts",{"_index":2053,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/dea/table.config.ts",{"_index":2054,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/example/example.component.ts",{"_index":1267,"title":{},"body":{"components/ExampleComponent.html":{},"coverage.html":{}}}],["src/app/example/example.component.ts:12",{"_index":1271,"title":{},"body":{"components/ExampleComponent.html":{}}}],["src/app/example/example.component.ts:8",{"_index":1270,"title":{},"body":{"components/ExampleComponent.html":{}}}],["src/app/grammar/cyto",{"_index":1638,"title":{},"body":{"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/grammar/grammar.animation.ts",{"_index":2056,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/grammar/grammar.component.ts",{"_index":1437,"title":{},"body":{"components/GrammarComponent.html":{},"coverage.html":{}}}],["src/app/grammar/grammar.component.ts:104",{"_index":1469,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:108",{"_index":1466,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:112",{"_index":1464,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:20",{"_index":1483,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:21",{"_index":1478,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:22",{"_index":1473,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:23",{"_index":1475,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:24",{"_index":1474,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:25",{"_index":1488,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:26",{"_index":1486,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:27",{"_index":1485,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:28",{"_index":1489,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:29",{"_index":1484,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:31",{"_index":1454,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:35",{"_index":1458,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:41",{"_index":1457,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:54",{"_index":1460,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:59",{"_index":1456,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:72",{"_index":1471,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:77",{"_index":1465,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:81",{"_index":1468,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:85",{"_index":1461,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:89",{"_index":1462,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:93",{"_index":1470,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.component.ts:97",{"_index":1467,"title":{},"body":{"components/GrammarComponent.html":{}}}],["src/app/grammar/grammar.model.ts",{"_index":1274,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"coverage.html":{}}}],["src/app/grammar/grammar.model.ts:13",{"_index":1926,"title":{},"body":{"classes/RuleSetInterface.html":{}}}],["src/app/grammar/grammar.model.ts:14",{"_index":1928,"title":{},"body":{"classes/RuleSetInterface.html":{}}}],["src/app/grammar/grammar.model.ts:15",{"_index":1927,"title":{},"body":{"classes/RuleSetInterface.html":{}}}],["src/app/grammar/grammar.model.ts:16",{"_index":1924,"title":{},"body":{"classes/RuleSetInterface.html":{}}}],["src/app/grammar/grammar.model.ts:164",{"_index":1333,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:168",{"_index":1327,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:181",{"_index":1316,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:188",{"_index":1323,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:208",{"_index":1312,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:212",{"_index":1314,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:216",{"_index":1310,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:220",{"_index":1306,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:249",{"_index":1307,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:276",{"_index":1320,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:281",{"_index":1321,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:34",{"_index":1298,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:35",{"_index":1305,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:36",{"_index":1302,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:46",{"_index":1304,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:47",{"_index":1296,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:63",{"_index":1325,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:67",{"_index":1329,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:71",{"_index":1331,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.model.ts:75",{"_index":1318,"title":{},"body":{"classes/ExpressionGrammarModel.html":{}}}],["src/app/grammar/grammar.module.ts",{"_index":1651,"title":{},"body":{"modules/GrammarModule.html":{}}}],["src/app/grammar/grammar.service.ts",{"_index":1655,"title":{},"body":{"injectables/GrammarService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/grammar/grammar.service.ts:14",{"_index":1671,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:15",{"_index":1670,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:16",{"_index":1675,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:17",{"_index":1673,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:18",{"_index":1674,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:19",{"_index":1659,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:27",{"_index":1661,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:31",{"_index":1666,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:50",{"_index":1665,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:54",{"_index":1668,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:60",{"_index":1664,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:72",{"_index":1667,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:80",{"_index":1662,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/grammar.service.ts:84",{"_index":1663,"title":{},"body":{"injectables/GrammarService.html":{}}}],["src/app/grammar/slice/grammar.action.ts",{"_index":2061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/grammar/slice/grammar.reducer.ts",{"_index":1699,"title":{},"body":{"interfaces/GrammarState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/grammar/utils/helpers.ts",{"_index":2064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/grammar/utils/introjs.ts",{"_index":2065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/my",{"_index":1733,"title":{},"body":{"components/MyCounterComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts",{"_index":1769,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts:19",{"_index":1772,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:25",{"_index":1773,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/puzzle",{"_index":465,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/puzzle/puzzle.component.ts",{"_index":1776,"title":{},"body":{"components/PuzzleComponent.html":{},"coverage.html":{}}}],["src/app/puzzle/puzzle.component.ts:12",{"_index":1779,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["src/app/puzzle/puzzle.module.ts",{"_index":1912,"title":{},"body":{"modules/PuzzleModule.html":{}}}],["src/app/shared/dialog/dialog.component.ts",{"_index":1230,"title":{},"body":{"components/DialogComponent.html":{},"coverage.html":{}}}],["src/app/shared/dialog/dialog.component.ts:11",{"_index":1237,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/dialog/dialog.component.ts:12",{"_index":1236,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/dialog/dialog.component.ts:15",{"_index":1235,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/dialog/dialog.component.ts:9",{"_index":1234,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/shared/exceptions/deaexception.ts",{"_index":450,"title":{},"body":{"classes/DEAException.html":{},"coverage.html":{}}}],["src/app/shared/exceptions/deaexception.ts:2",{"_index":456,"title":{},"body":{"classes/DEAException.html":{}}}],["src/app/shared/exceptions/deaexception.ts:3",{"_index":455,"title":{},"body":{"classes/DEAException.html":{}}}],["src/app/shared/exceptions/deaexception.ts:4",{"_index":454,"title":{},"body":{"classes/DEAException.html":{}}}],["src/app/shared/helpers/helpers.ts",{"_index":2069,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/start",{"_index":1929,"title":{},"body":{"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"interfaces/User-1.html":{},"coverage.html":{}}}],["src/app/users.service.ts",{"_index":1983,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/users.service.ts:11",{"_index":1991,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:15",{"_index":1990,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:7",{"_index":1988,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/environments/environment.prod.ts",{"_index":2072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/helpers.ts",{"_index":2077,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":702,"title":{},"body":{"components/DeaComponent.html":{},"components/DialogComponent.html":{},"miscellaneous/variables.html":{}}}],["stand",{"_index":1214,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["standard",{"_index":953,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["start",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User-1.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["start_1",{"_index":2222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["starte",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":2127,"title":{"index.html":{}},"body":{}}],["starten",{"_index":705,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["startet",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startexp",{"_index":1372,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["startgame",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["startgamecomponent",{"_index":105,"title":{"components/StartGameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{},"overview.html":{}}}],["startgamemodule",{"_index":176,"title":{"modules/StartGameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StartGameModule.html":{},"modules.html":{},"overview.html":{}}}],["startlink",{"_index":1195,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{}}}],["starttour",{"_index":576,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["startwith",{"_index":1676,"title":{},"body":{"injectables/GrammarService.html":{}}}],["state",{"_index":246,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/MyCounterComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.changed",{"_index":864,"title":{},"body":{"injectables/DeaService.html":{}}}],["state.grammar",{"_index":1710,"title":{},"body":{"interfaces/GrammarState.html":{},"miscellaneous/variables.html":{}}}],["state.url",{"_index":271,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["state.value",{"_index":860,"title":{},"body":{"injectables/DeaService.html":{}}}],["statelistener",{"_index":849,"title":{},"body":{"injectables/DeaService.html":{}}}],["statemachine",{"_index":628,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["statements",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":856,"title":{},"body":{"injectables/DeaService.html":{}}}],["statetype",{"_index":1679,"title":{},"body":{"injectables/GrammarService.html":{},"miscellaneous/typealiases.html":{}}}],["static",{"_index":986,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{}}}],["steht",{"_index":2296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stelle",{"_index":655,"title":{},"body":{"components/DeaComponent.html":{},"components/DialogDataExampleDialog.html":{}}}],["stellen",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["steps",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["steuerung",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stop",{"_index":1487,"title":{},"body":{"components/GrammarComponent.html":{},"injectables/GrammarService.html":{},"miscellaneous/typealiases.html":{}}}],["stop')).subscribe",{"_index":694,"title":{},"body":{"components/DeaComponent.html":{}}}],["stop_circle_filled",{"_index":727,"title":{},"body":{"components/DeaComponent.html":{}}}],["store",{"_index":240,"title":{},"body":{"injectables/AuthGuard.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["store/rootreducer",{"_index":1706,"title":{},"body":{"interfaces/GrammarState.html":{}}}],["stored",{"_index":2149,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["str",{"_index":379,"title":{},"body":{"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"injectables/GrammarGraphService.html":{}}}],["str.slice",{"_index":898,"title":{},"body":{"injectables/DeaService.html":{}}}],["str].filter((s",{"_index":903,"title":{},"body":{"injectables/DeaService.html":{}}}],["stream",{"_index":1747,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["stringsausgabe",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringsauswertung",{"_index":2360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stroke",{"_index":1061,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["strokewidth",{"_index":1093,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["style",{"_index":417,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["stylesheet",{"_index":1830,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["subject",{"_index":1669,"title":{},"body":{"injectables/GrammarService.html":{}}}],["subscribe",{"_index":1687,"title":{},"body":{"injectables/GrammarService.html":{}}}],["subscribe((data",{"_index":1944,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["success",{"_index":1588,"title":{},"body":{"components/GrammarComponent.html":{}}}],["suche",{"_index":530,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["super(msg",{"_index":457,"title":{},"body":{"classes/DEAException.html":{}}}],["super(router",{"_index":261,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["super.makenetwork(coll",{"_index":956,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["support",{"_index":2169,"title":{},"body":{"modules.html":{}}}],["supportspassive",{"_index":2081,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":2170,"title":{},"body":{"modules.html":{}}}],["sweep",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switchmap",{"_index":1677,"title":{},"body":{"injectables/GrammarService.html":{}}}],["switchmap((val",{"_index":1683,"title":{},"body":{"injectables/GrammarService.html":{}}}],["t",{"_index":719,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["tabelle",{"_index":708,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["table.component.css",{"_index":1963,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.html",{"_index":1964,"title":{},"body":{"components/TableComponent.html":{}}}],["table.config",{"_index":636,"title":{},"body":{"components/DeaComponent.html":{}}}],["tablecomponent",{"_index":107,"title":{"components/TableComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"components/TableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemain",{"_index":558,"title":{},"body":{"components/DeaComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2084,"title":{},"body":{"coverage.html":{}}}],["takewhile",{"_index":638,"title":{},"body":{"components/DeaComponent.html":{},"injectables/GrammarService.html":{}}}],["tap",{"_index":1678,"title":{},"body":{"injectables/GrammarService.html":{}}}],["tap((n",{"_index":1686,"title":{},"body":{"injectables/GrammarService.html":{}}}],["target",{"_index":1815,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["targets",{"_index":1788,"title":{},"body":{"components/PuzzleComponent.html":{}}}],["task",{"_index":974,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["td",{"_index":755,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/TableComponent.html":{}}}],["td:nth",{"_index":794,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["tech",{"_index":701,"title":{},"body":{"components/DeaComponent.html":{},"components/DialogComponent.html":{},"miscellaneous/variables.html":{}}}],["teilbar",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teilwort",{"_index":2299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["terminalzeichen",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terms",{"_index":1922,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["teste",{"_index":480,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["testing",{"_index":2163,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2154,"title":{},"body":{"index.html":{}}}],["testy",{"_index":1951,"title":{},"body":{"components/StartGameComponent.html":{}}}],["text",{"_index":473,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["text\").maketwoway",{"_index":1077,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["textalign",{"_index":1098,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["th",{"_index":756,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/TableComponent.html":{}}}],["th:nth",{"_index":792,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["thema",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["theorie",{"_index":703,"title":{},"body":{"components/DeaComponent.html":{},"miscellaneous/variables.html":{}}}],["this._expression",{"_index":1348,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._getcorrectexpression",{"_index":1425,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._getwrongexpression",{"_index":1426,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._hasnonterminalchar(exp",{"_index":1399,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._resetanimationobject",{"_index":674,"title":{},"body":{"components/DeaComponent.html":{}}}],["this._rule",{"_index":1347,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r",{"_index":1358,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.a.length",{"_index":1403,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.a[r",{"_index":1404,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.o.includes(correctexp[indexofexp",{"_index":1421,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.o.length",{"_index":1407,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.o[math.round(math.random",{"_index":1420,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.o[r",{"_index":1408,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.z.includes(correctexp[indexofexp",{"_index":1418,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.z.length",{"_index":1411,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.z[math.round(math.random",{"_index":1422,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.r.z[r",{"_index":1412,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.sig.indexof(r",{"_index":1396,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.start",{"_index":1398,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._rule.v.indexof(r",{"_index":1395,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._ruleset",{"_index":1374,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._setruleset(exp",{"_index":1384,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._valid",{"_index":1349,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this._validatereberstring(str",{"_index":912,"title":{},"body":{"injectables/DeaService.html":{}}}],["this.activelevel",{"_index":1175,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.activelevel.tostring",{"_index":1203,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.afterexp",{"_index":1344,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.animal",{"_index":1000,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.animatedrulesstream.next",{"_index":1694,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.animatedrulesstream.next(this.rules",{"_index":1697,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.animatedrulesstream.next(this.rules.slice(0",{"_index":1695,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.animatestep",{"_index":683,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.animationobject.current",{"_index":678,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.ausgabestring",{"_index":459,"title":{},"body":{"classes/DEAException.html":{},"components/DeaComponent.html":{}}}],["this.authenticated",{"_index":267,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.cdr.detectchanges",{"_index":1012,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.checkwordrekursive(dea",{"_index":2004,"title":{},"body":{"classes/WordChecker.html":{}}}],["this.count",{"_index":1746,"title":{},"body":{"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/User-2.html":{}}}],["this.createdefaultreberfsm",{"_index":870,"title":{},"body":{"injectables/DeaService.html":{}}}],["this.createrebermachine",{"_index":871,"title":{},"body":{"injectables/DeaService.html":{}}}],["this.currentindex",{"_index":1688,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.currentuser",{"_index":1940,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["this.cy",{"_index":363,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{}}}],["this.cy.edges().toarray",{"_index":392,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.cy.userzoomingenabled(false",{"_index":366,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["this.cyconfig",{"_index":365,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["this.cytoservice.animatestep(this.reberconstruct[this.animationobject.current].trans",{"_index":671,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.cytoservice.errorsate.subscribe((v",{"_index":647,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.cytoservice.resetanimation",{"_index":685,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.cytoservice.setinstance(this.cy",{"_index":367,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["this.data.onnext",{"_index":1229,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.deaservice.createdefaultreberfsm",{"_index":660,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.deaservice.createrebermachine",{"_index":646,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.deaservice.evaluatestring(str",{"_index":673,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.deaservice.generatenonreber",{"_index":669,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.deaservice.generatereberconstruct(reberstring",{"_index":676,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.deaservice.generatereberstring",{"_index":664,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.dialog.open(dialogcomponent",{"_index":661,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.dialog.open(dialogdataexampledialog",{"_index":991,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.dialogref.close",{"_index":1227,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.endstate.next('start",{"_index":691,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.endstate.next('stop",{"_index":684,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.endstate.value",{"_index":693,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.errorsate.next",{"_index":411,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.errorstate",{"_index":648,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.evaluatestring(reberstring",{"_index":665,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.expindex",{"_index":1338,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.expression",{"_index":1346,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.expressiongrammar.expression",{"_index":1527,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.expressiongrammar.generatecorrectexpression",{"_index":1515,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.expressiongrammar.generatewrongexpression",{"_index":1516,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.generatereberstring",{"_index":891,"title":{},"body":{"injectables/DeaService.html":{}}}],["this.generatewordrekursive(dea",{"_index":528,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["this.genfsm(this.createrebermachine",{"_index":859,"title":{},"body":{"injectables/DeaService.html":{}}}],["this.genfsm(xstate",{"_index":900,"title":{},"body":{"injectables/DeaService.html":{}}}],["this.grammerservice.animatedrulesstream.subscribe((v",{"_index":1503,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.init(this.expressiongrammar.ruleset",{"_index":1517,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onbegin",{"_index":1522,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onend",{"_index":1523,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onnext",{"_index":1520,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onpause",{"_index":1526,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onplay",{"_index":1525,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onprevious",{"_index":1521,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.onreset",{"_index":1524,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.speed.next(v",{"_index":1514,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.grammerservice.state.subscribe((v",{"_index":1502,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.highestlevel",{"_index":1201,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.http.get(\"http://localhost:3000/user",{"_index":1992,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.get(\"http://localhost:3000/user/current",{"_index":1993,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.isexpressionvalid(exp",{"_index":1383,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.isexpressionvalid(oldexp",{"_index":1373,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.keycloak.loaduserprofile",{"_index":273,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.keycloak.login",{"_index":269,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.lastnode",{"_index":427,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.lastnode.animate",{"_index":434,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.lastnode.connectededges(`edge[source",{"_index":431,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.lastnode.id()}\"]`).toarray",{"_index":432,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.level",{"_index":1941,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["this.listelement",{"_index":1505,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.listelement.nativeelement",{"_index":1506,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.loaddiagram(this.activelevel",{"_index":1170,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.loadnextlevel.bind(this",{"_index":996,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.matrows.foreach((r",{"_index":686,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.msg",{"_index":460,"title":{},"body":{"classes/DEAException.html":{}}}],["this.mydiagramcomponent",{"_index":1005,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.mydiagramcomponent.clear",{"_index":1178,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.mydiagramcomponent.diagram",{"_index":1006,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.mydiagramcomponent?.diagram",{"_index":1011,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.mydiagramcomponent?.diagram.adddiagramlistener('changedselection",{"_index":1019,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.nextdiagram(this.activelevel",{"_index":1208,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.observeddiagram",{"_index":1010,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.onbegin",{"_index":1518,"title":{},"body":{"components/GrammarComponent.html":{}}}],["this.onend",{"_index":1690,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.onnext",{"_index":1691,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.onnext(true",{"_index":695,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.onreset",{"_index":1696,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.onstart",{"_index":668,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.onstop",{"_index":690,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.opendialog(true",{"_index":1191,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.prevexp",{"_index":1342,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.previouselements.push(c",{"_index":423,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.previouselements.push(node1",{"_index":419,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.previouselements.push(node2",{"_index":429,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["this.reberconstruct",{"_index":667,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.reberconstruct.length",{"_index":653,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.reberconstruct[this.animationobject.current].trans",{"_index":679,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.reberstring",{"_index":458,"title":{},"body":{"classes/DEAException.html":{},"components/DeaComponent.html":{}}}],["this.reberstring.length",{"_index":654,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.reberstring.slice",{"_index":656,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.reberstring.substring",{"_index":652,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.render",{"_index":358,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["this.renderer.addclass(r.nativeelement",{"_index":681,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.renderer.addclass(this.tablemain.nativeelement",{"_index":675,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.renderer.removeclass(r.nativeelement",{"_index":682,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.renderer.removeclass(this.tablemain.nativeelement",{"_index":677,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.renderer.selectrootelement('#cy",{"_index":360,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["this.roles.includes(role",{"_index":287,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.rule",{"_index":1340,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.rules",{"_index":1504,"title":{},"body":{"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["this.rules.length",{"_index":1689,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.score",{"_index":1204,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.showoneuser",{"_index":1947,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["this.speed",{"_index":689,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["this.speed.subscribe((v",{"_index":1680,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.state",{"_index":1101,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["this.state.diagramlinkdata",{"_index":1186,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.state.diagramnodedata",{"_index":1185,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.state.next('start",{"_index":1692,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.state.next('stop",{"_index":1693,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.state.value",{"_index":1685,"title":{},"body":{"injectables/GrammarService.html":{}}}],["this.store.dispatch(increment",{"_index":272,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.store.select('count",{"_index":1760,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["this.store.select('level",{"_index":1942,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["this.task",{"_index":1176,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["this.timer",{"_index":687,"title":{},"body":{"components/DeaComponent.html":{},"injectables/GrammarService.html":{}}}],["this.toggleservice",{"_index":659,"title":{},"body":{"components/DeaComponent.html":{}}}],["this.usersservice.getoneuser",{"_index":1946,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["this.usersservice.getuser",{"_index":1943,"title":{},"body":{"components/StartGameComponent.html":{},"interfaces/User-1.html":{}}}],["this.value",{"_index":1382,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["this.xstate",{"_index":645,"title":{},"body":{"components/DeaComponent.html":{}}}],["throw",{"_index":861,"title":{},"body":{"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{}}}],["timer",{"_index":559,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"injectables/GrammarService.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["toarrow",{"_index":1095,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["todo",{"_index":1744,"title":{},"body":{"components/MyCounterComponent.html":{}}}],["toggle",{"_index":819,"title":{},"body":{"modules/DeaModule.html":{},"modules/GrammarModule.html":{}}}],["toggleservice",{"_index":560,"title":{},"body":{"components/DeaComponent.html":{}}}],["tolinkable",{"_index":1080,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["tolinkableduplicates",{"_index":1083,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["tolinkableselfnode",{"_index":1085,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["tool0",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool1",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool2",{"_index":2359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool3",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool4",{"_index":2368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool5",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool6",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tools",{"_index":1240,"title":{},"body":{"components/DialogComponent.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":354,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{}}}],["toport",{"_index":1049,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["toshortlength",{"_index":1148,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["tour",{"_index":704,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["tr.active",{"_index":787,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["tr.active::after",{"_index":795,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["tr.mat",{"_index":759,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["tr:hover",{"_index":1980,"title":{},"body":{"components/TableComponent.html":{}}}],["tr:last",{"_index":800,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["tr:nth",{"_index":763,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/TableComponent.html":{}}}],["trans",{"_index":644,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{}}}],["transaction",{"_index":1108,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["transform",{"_index":1586,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["transition",{"_index":902,"title":{},"body":{"injectables/DeaService.html":{}}}],["transition(':enter",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':leave",{"_index":2334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translate(11px",{"_index":1634,"title":{},"body":{"components/GrammarComponent.html":{}}}],["translatey",{"_index":2329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(0",{"_index":2330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"components/DialogComponent.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["triangle",{"_index":1835,"title":{},"body":{"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["trigger(`onvisible${v",{"_index":2322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/CytoGraphService.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":907,"title":{},"body":{"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{}}}],["ts",{"_index":361,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarGraphComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2117,"title":{},"body":{"dependencies.html":{}}}],["tuple",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tutorial",{"_index":1950,"title":{},"body":{"components/StartGameComponent.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"classes/DEAException.html":{},"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"injectables/DeaService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"interfaces/GrammarState.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"injectables/UsersService.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2174,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["tätigen",{"_index":1564,"title":{},"body":{"components/GrammarComponent.html":{}}}],["uebergaenge",{"_index":441,"title":{},"body":{"injectables/CytoGraphService.html":{},"injectables/GrammarGraphService.html":{}}}],["unauthenticated",{"_index":266,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["und",{"_index":444,"title":{},"body":{"injectables/CytoGraphService.html":{},"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"injectables/GrammarGraphService.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":881,"title":{},"body":{"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"interfaces/GrammarState.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{}}}],["undomanager",{"_index":1110,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["undomanager.isenabled",{"_index":1037,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["ungerade",{"_index":2295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":2153,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":251,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["unneeded",{"_index":1107,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["unten",{"_index":1904,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["update",{"_index":1003,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["url",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["urltree",{"_index":252,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["use",{"_index":2145,"title":{},"body":{"index.html":{}}}],["used",{"_index":1123,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["user",{"_index":263,"title":{"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}},"body":{"injectables/AuthGuard.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleGameComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{},"coverage.html":{}}}],["userlevel",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["username",{"_index":1774,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["username:string",{"_index":1757,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StartGameComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["userpanningenabled",{"_index":2243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users.service",{"_index":1939,"title":{},"body":{"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"interfaces/User-1.html":{}}}],["usersservice",{"_index":1934,"title":{"injectables/UsersService.html":{}},"body":{"components/StartGameComponent.html":{},"modules/StartGameModule.html":{},"interfaces/User-1.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["utils/helpers",{"_index":343,"title":{},"body":{"components/CytoGraphComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{}}}],["utils/introjs",{"_index":1500,"title":{},"body":{"components/GrammarComponent.html":{}}}],["v",{"_index":649,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"interfaces/GrammarModel.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["v.msg",{"_index":658,"title":{},"body":{"components/DeaComponent.html":{}}}],["valid",{"_index":1293,"title":{},"body":{"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleComponent.html":{},"classes/RuleSetInterface.html":{}}}],["validatediagram",{"_index":1183,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["valign",{"_index":2230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"injectables/DeaService.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"classes/WordChecker.html":{},"miscellaneous/variables.html":{}}}],["value.tostring",{"_index":1174,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["var",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CytoGraphComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"components/FooterComponent.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{}}}],["variable",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2177,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vergleich",{"_index":1221,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["version",{"_index":2130,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertex",{"_index":959,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["vertex.node",{"_index":958,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["vertical",{"_index":757,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["verticalalignment",{"_index":1097,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["via",{"_index":2156,"title":{},"body":{"index.html":{}}}],["view",{"_index":1763,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewchild",{"_index":630,"title":{},"body":{"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["viewchild('listelement",{"_index":1476,"title":{},"body":{"components/GrammarComponent.html":{}}}],["viewchild('mydiagram",{"_index":985,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["viewchild('tablemain",{"_index":625,"title":{},"body":{"components/DeaComponent.html":{}}}],["viewchildren",{"_index":631,"title":{},"body":{"components/DeaComponent.html":{}}}],["viewchildren('matrows",{"_index":619,"title":{},"body":{"components/DeaComponent.html":{}}}],["viewencapsulation",{"_index":928,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["viewencapsulation.none",{"_index":964,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["void",{"_index":329,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/ExampleComponent.html":{},"classes/ExpressionGrammarModel.html":{},"components/FooterComponent.html":{},"interfaces/FourTuple.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"interfaces/GrammarModel.html":{},"injectables/GrammarService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MyCounterComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/RegisterComponent.html":{},"classes/RuleSetInterface.html":{},"components/StartGameComponent.html":{},"components/TableComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"interfaces/User-2.html":{}}}],["von",{"_index":1256,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"miscellaneous/variables.html":{}}}],["vor",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vorhanden",{"_index":516,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["vorname",{"_index":1775,"title":{},"body":{"components/ProfileComponent.html":{}}}],["w",{"_index":1631,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["warning",{"_index":1542,"title":{},"body":{"components/GrammarComponent.html":{}}}],["way",{"_index":1105,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["weight",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["weiter",{"_index":1571,"title":{},"body":{"components/GrammarComponent.html":{},"components/PuzzleComponent.html":{},"miscellaneous/variables.html":{}}}],["welches",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["werden",{"_index":1573,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["wheat",{"_index":1635,"title":{},"body":{"components/GrammarComponent.html":{}}}],["wheel",{"_index":2266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wheelevent",{"_index":2082,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wheelopt",{"_index":2083,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["whenever",{"_index":1001,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["white",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{},"miscellaneous/variables.html":{}}}],["whitesmoke",{"_index":782,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["width",{"_index":348,"title":{},"body":{"components/CytoGraphComponent.html":{},"injectables/CytoGraphService.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/GrammarGraphComponent.html":{},"injectables/GrammarGraphService.html":{},"components/NavigationComponent.html":{},"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["wiederholen",{"_index":1920,"title":{},"body":{"components/RegisterComponent.html":{}}}],["wiki",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.addeventlistener('dommousescroll",{"_index":2244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.addeventlistener('keydown",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.addeventlistener('touchmove",{"_index":2250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.addeventlistener(wheelevent",{"_index":2247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.location.origin",{"_index":270,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["window.removeeventlistener('dommousescroll",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.removeeventlistener('keydown",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.removeeventlistener('touchmove",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.removeeventlistener(wheelevent",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstate",{"_index":994,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["wird",{"_index":1255,"title":{},"body":{"components/DialogDataExampleDialog.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":1013,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["womit",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["worauf",{"_index":526,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["word",{"_index":478,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"classes/WordGenerator.html":{}}}],["word.substring(1",{"_index":2023,"title":{},"body":{"classes/WordChecker.html":{}}}],["wordchecker",{"_index":939,"title":{"classes/WordChecker.html":{}},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordChecker.html":{},"coverage.html":{}}}],["worden",{"_index":1242,"title":{},"body":{"components/DialogComponent.html":{}}}],["wordgenerator",{"_index":476,"title":{"classes/WordGenerator.html":{}},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{},"classes/WordGenerator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wordgenerator.generaterandomwords([\"0",{"_index":2314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wordgenerator.generaterandomwords([\"1",{"_index":2292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wordgenerator.generatewords",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["words",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":1272,"title":{},"body":{"components/ExampleComponent.html":{},"components/MainPageComponent.html":{}}}],["world",{"_index":1491,"title":{},"body":{"components/GrammarComponent.html":{}}}],["wort",{"_index":521,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"components/DialogDataExampleDialog.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["wortes",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrap",{"_index":746,"title":{},"body":{"components/DeaComponent.html":{},"components/GrammarComponent.html":{}}}],["wrapper",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/DeaComponent.html":{},"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/GrammarComponent.html":{},"components/PuzzleGameComponent.html":{}}}],["wrongreberstring",{"_index":892,"title":{},"body":{"injectables/DeaService.html":{}}}],["wurde",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wörter",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":720,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"miscellaneous/variables.html":{}}}],["xstate",{"_index":561,"title":{},"body":{"components/DeaComponent.html":{},"injectables/DeaService.html":{},"components/DialogComponent.html":{},"dependencies.html":{}}}],["xstate.states[ah.value.tostring()].config.on",{"_index":878,"title":{},"body":{"injectables/DeaService.html":{}}}],["xstate/lib/interpreter",{"_index":850,"title":{},"body":{"injectables/DeaService.html":{}}}],["y",{"_index":1620,"title":{},"body":{"components/GrammarComponent.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":588,"title":{},"body":{"components/DeaComponent.html":{},"classes/RuleSetInterface.html":{}}}],["yourgraph",{"_index":1222,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["z",{"_index":775,"title":{},"body":{"components/DeaComponent.html":{},"classes/ExpressionGrammarModel.html":{},"interfaces/FourTuple.html":{},"interfaces/GrammarModel.html":{},"components/PuzzleGameComponent.html":{},"classes/RuleSetInterface.html":{},"miscellaneous/variables.html":{}}}],["zeichen",{"_index":515,"title":{},"body":{"interfaces/DeaArray.html":{},"components/DeaComponent.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["zeigt",{"_index":539,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{},"miscellaneous/variables.html":{}}}],["zeigt(to",{"_index":527,"title":{},"body":{"interfaces/DeaArray.html":{},"interfaces/DeaLink.html":{},"interfaces/DeaNode.html":{},"classes/WordGenerator.html":{}}}],["zeilen",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zeit",{"_index":1481,"title":{},"body":{"components/GrammarComponent.html":{}}}],["zone.js",{"_index":2120,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/CytoGraphComponent.html":{},"modules/DeaModule.html":{},"components/GrammarGraphComponent.html":{},"modules/GrammarModule.html":{},"modules/PuzzleModule.html":{},"modules/StartGameModule.html":{},"overview.html":{}}}],["zoomen",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zorder",{"_index":1055,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["zu",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zudem",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zuende",{"_index":867,"title":{},"body":{"injectables/DeaService.html":{}}}],["zuerst",{"_index":1558,"title":{},"body":{"components/GrammarComponent.html":{}}}],["zuf&auml;lligen",{"_index":2356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zufaelliges",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zum",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zur",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zur&uuml;ck",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zurueck",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zurück",{"_index":1905,"title":{},"body":{"components/PuzzleGameComponent.html":{}}}],["zurücksetzen",{"_index":1215,"title":{},"body":{"classes/DemoForceDirectedLayout.html":{},"interfaces/DialogData.html":{},"components/DialogDataExampleDialog.html":{},"components/PuzzleGameComponent.html":{}}}],["zusammenhang",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zustaende",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zustandsmenge",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zwei",{"_index":1845,"title":{},"body":{"components/PuzzleComponent.html":{},"components/PuzzleGameComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DEA'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DEA';\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .divider {\n    margin: 0 12px;\n  }\n  \n  .menu-link {\n    cursor: pointer;\n    font-size: 0.9rem;\n    margin-right: 12px;\n  }\n  \n  .active {\n    color: rgba(0, 0, 0, 0.87);\n    background-color: white;\n  }\n  \n  .error-box .red {\n    color: red;\n    font-weight: bold;\n  }\n  \n  .error-box .green {\n    color: green;\n    font-weight: bold;\n  }\n\n  .wrapper-dea {\n    margin: 1rem 3rem;\n  }\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nAppModule -->\n\nDialogComponent->AppModule\n\n\n\n\n\nDialogDataExampleDialog\n\nDialogDataExampleDialog\n\nAppModule -->\n\nDialogDataExampleDialog->AppModule\n\n\n\n\n\nExampleComponent\n\nExampleComponent\n\nAppModule -->\n\nExampleComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainPageComponent\n\nMainPageComponent\n\nAppModule -->\n\nMainPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nPuzzleGameComponent\n\nPuzzleGameComponent\n\nAppModule -->\n\nPuzzleGameComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nPuzzleModule\n\nPuzzleModule\n\nAppModule -->\n\nPuzzleModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DialogComponent\n                        \n                        \n                            DialogDataExampleDialog\n                        \n                        \n                            ExampleComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MainPageComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            PuzzleGameComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            PuzzleModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './component/footer/footer.component';\nimport { NavigationComponent } from './component/navigation/navigation.component';\nimport { MainPageComponent } from './component/main-page/main-page.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './component/login/login.component';\nimport { RegisterComponent } from './component/register/register.component';\nimport { DeaComponent } from './dea/dea.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DeaModule } from './dea/dea.module';\nimport { DialogComponent } from './shared/dialog/dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { KeycloakAngularModule, KeycloakService } from 'keycloak-angular';\nimport { AuthGuard } from './auth.guard';\nimport { StoreModule } from '@ngrx/store';\nimport { counterReducer, levelReducer } from './counter.reducer';\nimport { GojsAngularModule } from \"gojs-angular\";\n\n\n\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { ProfileComponent } from './profile/profile.component'; // Angular CLI environment\nimport { StartGameModule } from './start-game/start-game.module';\nimport { StartGameComponent } from './start-game/start-game.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PuzzleComponent } from './puzzle/puzzle.component';\nimport { PuzzleModule } from './puzzle/puzzle.module';\nimport { DialogDataExampleDialog, PuzzleGameComponent } from './puzzle-game/puzzle-game.component';\nimport { ExampleComponent } from './example/example.component';\nimport { CommonModule } from '@angular/common';\n\nfunction initializeKeycloak(keycloak: KeycloakService) {\n  return () =>\n    keycloak.init({\n      config: {\n        url: 'http://localhost:8080/auth',\n        realm: 'master',\n        clientId: 'puzzle-frontend',\n      },\n      initOptions: {\n\n        pkceMethod: 'S256',\n        // must match to the configured value in keycloak\n        redirectUri: 'http://localhost:4200/your_url',\n        // this will solved the error\n        checkLoginIframe: false\n      }\n    });\n}\n\n\nconst appRoutes: Routes = [\n  { path: '', component: StartGameComponent },\n  { path: 'login', redirectTo: '/startgame' },\n  { path: 'register', component: RegisterComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'docu', component: MainPageComponent },\n\n  {\n    path: 'home',\n    component: StartGameComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'startgame',\n    component: PuzzleGameComponent,\n    canActivate: [AuthGuard]\n  },\n\n  {\n    path: 'test',\n    component: DeaComponent,\n    canActivate: [AuthGuard]\n  },\n\n  { path: '**', component: StartGameComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    DialogDataExampleDialog,\n    FooterComponent,\n    MainPageComponent,\n    LoginComponent,\n    RegisterComponent,\n    DialogComponent,\n    ProfileComponent,\n    PuzzleGameComponent,\n    ExampleComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatButtonModule,\n    CommonModule,\n    //DeaModule,\n    PuzzleModule,\n    MatDialogModule,\n    HttpClientModule,\n    KeycloakAngularModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true } // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        KeycloakAuthGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                isAccessAllowed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store, keycloak: KeycloakService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keycloak\n                                                  \n                                                        \n                                                                    KeycloakService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        isAccessAllowed\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAccessAllowed(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\nimport { Store } from '@ngrx/store';\nimport { increment } from './counter.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard extends KeycloakAuthGuard {\n  constructor(\n    router: Router,\n    private store: Store,\n    protected readonly keycloak: KeycloakService\n  ) {\n    super(router, keycloak);\n  }\n\n  public async isAccessAllowed(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n\n    // Force the user to log in if currently unauthenticated.\n    if (!this.authenticated) {\n      await this.keycloak.login({\n        redirectUri: window.location.origin + state.url\n      });\n    }else{\n      this.store.dispatch(increment({ user: await this.keycloak.loadUserProfile() }));\n\n\n    }\n\n    // Get the roles required from the route.\n    const requiredRoles = route.data['roles'];\n\n    // Allow the user to proceed if no additional roles are required to access the route.\n    if (!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\n      return true;\n    }\n\n    // Allow the user to proceed if all the required roles are present.\n    return requiredRoles.every((role) => this.roles.includes(role));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CytoGraphComponent.html":{"url":"components/CytoGraphComponent.html","title":"component - CytoGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CytoGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dea/cyto-graph/cyto-graph.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cyto-graph\n            \n\n\n            \n                styles\n                 +  +  +  + \n            \n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseEnter\n                            \n                            \n                                mouseLeave\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                render\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cyConfig\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectNode\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, el: ElementRef, cytoService: CytoGraphService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cytoService\n                                                  \n                                                        \n                                                                        CytoGraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cyConfig\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { min: 0.1, max: 1.5 }\n                    \n                \n                        \n                            \n                                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectNode\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:32\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        mouseenter\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseenter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:35\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseleave\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseleave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:40\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mouseEnter\n                        \n                    \n                \n            \n            \n                \nmouseEnter()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseenter', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseLeave\n                        \n                    \n                \n            \n            \n                \nmouseLeave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        render\n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/cyto-graph/cyto-graph.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport * as cytoscape from 'cytoscape';\nimport { disableScroll, enableScroll } from '../../../utils/helpers';\nimport { CytoGraphService } from './cyto-graph.service';\n\n@Component({\n  selector: 'app-cyto-graph',\n  template: '',\n  styles: [\n    '#cy { height: calc(100% - 70px);\\n' +\n      '        width: 100%;\\n' +\n      '        position: absolute;\\n' +\n      '        left: 0;\\n' +\n      '        top: 0; }',\n  ],\n})\nexport class CytoGraphComponent implements OnChanges {\n  cy!: any;\n  @Input() public cyConfig: any;\n  @Input() public zoom: { min: number; max: number } = { min: 0.1, max: 1.5 };\n\n  @Output() selectNode: EventEmitter = new EventEmitter();\n\n  @HostListener('mouseenter', ['$event'])\n  mouseEnter(): void {\n    disableScroll();\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  mouseLeave(): void {\n    enableScroll();\n  }\n\n  constructor(private renderer: Renderer2, private el: ElementRef, private cytoService: CytoGraphService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.render();\n  }\n\n  public render(): void {\n    const cyContianer = this.renderer.selectRootElement('#cy');\n\n    // @ts-ignore\n    this.cy = cytoscape({\n      container: cyContianer,\n      ...this.cyConfig,\n    });\n\n    this.cy.userZoomingEnabled(false);\n    this.cytoService.setInstance(this.cy);\n  }\n}\n\n    \n\n\n    \n             +  +  +  + \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CytoGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CytoGraphService.html":{"url":"injectables/CytoGraphService.html","title":"injectable - CytoGraphService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CytoGraphService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dea/cyto-graph/cyto-graph.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cy\n                            \n                            \n                                errorSate\n                            \n                            \n                                lastNode\n                            \n                            \n                                previousElements\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animateStep\n                            \n                            \n                                    Public\n                                resetAnimation\n                            \n                            \n                                    Public\n                                setInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        animateStep\n                        \n                    \n                \n            \n            \n                \n                    \n                    animateStep(str: string, speed: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    speed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1000\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetAnimation\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAnimation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    setInstance(instance: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorSate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({ state: false, msg: '' })\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastNode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/cyto-graph/cyto-graph.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CytoGraphService {\n  cy: any;\n  previousElements: any = [];\n  lastNode: any = null;\n  errorSate = new BehaviorSubject({ state: false, msg: '' });\n\n  constructor() {}\n\n  public setInstance(instance: any): void {\n    this.cy = instance;\n  }\n\n  public resetAnimation() {\n    for (const c of this.cy.edges().toArray()) {\n      const se = c.connectedNodes().toArray();\n      const node1 = se[0] && se[0];\n      const node2 = se[1] ? se[1] : se[0];\n\n      if (node1.id() !== 'start') {\n        node1.style({\n          lineColor: 'black',\n          color: 'black',\n          'border-width': '1px',\n          'border-color': 'black',\n        });\n      }\n      node2.style({\n        lineColor: 'black',\n        'border-width': '1px',\n        color: 'black',\n        'border-color': 'black',\n      });\n      c.style({\n        lineColor: '#ccc',\n        opacity: 1,\n        width: '3px',\n        color: 'black',\n        'border-color': 'black',\n      });\n    }\n\n    this.errorSate.next({ state: false, msg: '' });\n  }\n\n  public animateStep(str: string, speed = 1000): void {\n    speed = speed / 15;\n\n    if (str !== 'error') {\n      this.errorSate.next({ state: false, msg: '' });\n      for (const c of this.cy.edges().toArray()) {\n        const se = c.connectedNodes().toArray();\n        const node1 = se[0] && se[0];\n        const node2 = se[1] ? se[1] : se[0];\n\n        if (node1.id() + c.data('label') + node2.id() !== str) {\n          setTimeout(() => {\n            if (node1.id() !== 'start') {\n              node1.style({\n                lineColor: 'black',\n                color: 'black',\n                'border-width': '1px',\n                'border-color': 'black',\n              });\n            }\n            node2.style({\n              lineColor: 'black',\n              'border-width': '1px',\n              color: 'black',\n              'border-color': 'black',\n            });\n            c.style({\n              lineColor: '#ccc',\n              opacity: 1,\n              width: '3px',\n              color: 'black',\n              'border-color': 'black',\n            });\n          }, speed / 1.5);\n        }\n\n        setTimeout(() => {\n          if (node1.id() + c.data('label') + node2.id() === str) {\n            node1.animate({\n              style: {\n                lineColor: '#3f51b5',\n                color: '#3f51b5',\n                'border-color': '#3f51b5',\n              },\n            });\n            this.previousElements.push(node1);\n          }\n        }, speed / 3);\n\n        setTimeout(() => {\n          if (node1.id() + c.data('label') + node2.id() === str) {\n            c.animate({\n              style: {\n                lineColor: '#3f51b5',\n                width: '4px',\n                color: '#3f51b5',\n                'border-color': '#3f51b5',\n              },\n            });\n            this.previousElements.push(c);\n          }\n        }, (speed * 2) / 3);\n\n        setTimeout(() => {\n          if (node1.id() + c.data('label') + node2.id() === str) {\n            if (node2.id() === '8') {\n              node2.animate({\n                style: {\n                  lineColor: 'green',\n                  'border-width': '4px',\n                  color: 'green',\n                  'border-color': 'green',\n                },\n              });\n            } else {\n              this.lastNode = node2;\n              node2.animate({\n                style: {\n                  lineColor: '#ff4081',\n                  'border-width': '4px',\n                  color: '#ff4081',\n                  'border-color': '#ff4081',\n                },\n              });\n            }\n            this.previousElements.push(node2);\n          }\n        }, +speed);\n      }\n    } else {\n      const lastFEdges = this.lastNode.connectedEdges(`edge[source = \"${this.lastNode.id()}\"]`).toArray();\n      console.log(lastFEdges);\n\n      this.lastNode.animate({\n        style: {\n          lineColor: 'red',\n          'border-width': '5px',\n          color: 'red',\n          'border-color': 'red',\n        },\n      });\n\n      lastFEdges[0].style({\n        lineColor: 'green',\n        opacity: 0.2,\n        width: '3px',\n        color: 'black',\n        'border-color': 'black',\n      });\n\n      lastFEdges[1].style({\n        lineColor: 'green',\n        width: '3px',\n        opacity: 0.2,\n        color: 'black',\n        'border-color': 'black',\n      });\n\n      this.errorSate.next({\n        state: true,\n        msg: `Nur die Uebergaenge ${lastFEdges[0].data(\n          'label'\n        )} und ${lastFEdges[1].data('label')} sind definiert.`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DEAException.html":{"url":"classes/DEAException.html","title":"class - DEAException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DEAException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/Exceptions/DEAException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ausgabeString\n                            \n                            \n                                msg\n                            \n                            \n                                reberString\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reberString: string, ausgabeString: string, msg: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/Exceptions/DEAException.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reberString\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ausgabeString\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ausgabeString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/Exceptions/DEAException.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        msg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/Exceptions/DEAException.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reberString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/Exceptions/DEAException.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DEAException extends Error {\n  reberString: string;\n  ausgabeString: string;\n  msg: string;\n\n  constructor(reberString: string, ausgabeString: string, msg: string) {\n    super(msg);\n    this.reberString = reberString;\n    this.ausgabeString = ausgabeString;\n    this.msg = msg;\n\n    console.error(msg);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeaArray.html":{"url":"interfaces/DeaArray.html","title":"interface - DeaArray","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeaArray\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/word-generator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:         DeaLink[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DeaLink[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:         DeaNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DeaNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeaLink {\n    key: number | \"Start\", from: number, to: number, text: string\n}\n\nexport interface DeaNode {\n    id: number, text: string, figure?: string\n}\n\nexport interface DeaArray {\n    nodes: DeaNode[],\n    links: DeaLink[]\n}\n\nexport class WordGenerator {\n\n    generateWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number): string | null {\n        if (index > 1000) {\n            return null;\n        }\n        // If (Teste ob Node Enpunkt ist)\n        if (currentNode.figure === \"Ring\" && Math.random() > 0.6) {\n            return word;\n        }\n        //Alle ausgehenden Links dieses Notes\n        const outgoingLinks = dea.links.filter(link => link.from === currentNode!.id);\n        //Anzahl der Links\n        //Random ein Link auswählen\n        const randomLinkNumber = Math.floor(Math.random() * outgoingLinks.length);\n        const nextlinkElement = outgoingLinks[randomLinkNumber];\n        const nextNodeElement = dea.nodes.find(node => node.id === nextlinkElement!.to);\n\n        const LinkText = outgoingLinks[randomLinkNumber].text.split(\",\");\n\n        //Prüfe ob mehre Zeichen vorhanden sind(,)\n        if (LinkText.length > 1) {\n            const randomLinkText = Math.floor(Math.random() * LinkText.length);\n            //Text des Links in das Wort anhängen\n            word += LinkText[randomLinkText];\n        } else {\n            //Text des Links in das Wort anhängen\n            word += LinkText[0];\n        }\n\n        //Schaue worauf der Link zeigt(to)\n        return this.generateWordRekursive(dea, word, nextNodeElement!, index + 1)\n    }\n\n\n    generateWord(dea: DeaArray): string | null {\n        //Suche den Link mit \"Start\"\n        const word = \"\";\n        const currentStartLink = dea.links.find(link => link.key === \"Start\");\n        //Gehe durch den Array und suche den Node auf den der Start Link zeigt \n        const currentNode = dea.nodes.find(node => node.id === currentStartLink!.to);\n        return this.generateWordRekursive(dea, word, currentNode!, 0)\n    };\n\n    generateWords(dea: DeaArray): string[] {\n        const result: string[] = [];\n        for (let i = 0; i  arr[Math.floor(Math.random() * arr.length)])\n         .join(\"\");\n}             \n    \n\n      generateRandomWords(arr): string[] {\n        const result: string[] = [];\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeaComponent.html":{"url":"components/DeaComponent.html","title":"component - DeaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dea/dea.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dea\n            \n\n            \n                styleUrls\n                ./dea.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dea.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationObject\n                            \n                            \n                                cyConfig\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                endState\n                            \n                            \n                                errorState\n                            \n                            \n                                matRows\n                            \n                            \n                                reberConstruct\n                            \n                            \n                                speed\n                            \n                            \n                                tableMain\n                            \n                            \n                                timer\n                            \n                            \n                                toggleService\n                            \n                            \n                                xState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _resetAnimationObject\n                            \n                            \n                                animateStep\n                            \n                            \n                                evaluateString\n                            \n                            \n                                generateNonReberString\n                            \n                            \n                                generateReberString\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onEnd\n                            \n                            \n                                onNext\n                            \n                            \n                                onPause\n                            \n                            \n                                onPlay\n                            \n                            \n                                onPrevious\n                            \n                            \n                                onStart\n                            \n                            \n                                onStop\n                            \n                            \n                                openDialog\n                            \n                            \n                                renderTableRows\n                            \n                            \n                                startTour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ausgabeString\n                            \n                            \n                                reberString\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, renderer: Renderer2, deaService: DeaService, cytoService: CytoGraphService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dea/dea.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deaService\n                                                  \n                                                        \n                                                                        DeaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cytoService\n                                                  \n                                                        \n                                                                        CytoGraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ausgabeString\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/dea/dea.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reberString\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/dea/dea.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _resetAnimationObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    _resetAnimationObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animateStep\n                        \n                    \n                \n            \n            \n                \nanimateStep()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        evaluateString\n                        \n                    \n                \n            \n            \n                \nevaluateString(str: any, initialAusgabeString?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    initialAusgabeString\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateNonReberString\n                        \n                    \n                \n            \n            \n                \ngenerateNonReberString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateReberString\n                        \n                    \n                \n            \n            \n                \ngenerateReberString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEnd\n                        \n                    \n                \n            \n            \n                \nonEnd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNext\n                        \n                    \n                \n            \n            \n                \nonNext(shouldNotStop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    shouldNotStop\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPause\n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPlay\n                        \n                    \n                \n            \n            \n                \nonPlay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPrevious\n                        \n                    \n                \n            \n            \n                \nonPrevious()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStart\n                        \n                    \n                \n            \n            \n                \nonStart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStop\n                        \n                    \n                \n            \n            \n                \nonStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTableRows\n                        \n                    \n                \n            \n            \n                \nrenderTableRows()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTour\n                        \n                    \n                \n            \n            \n                \nstartTour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : { current: -1 }\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cyConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : cytoscapeConfig\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ELEMENT_DATA\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['q0', 'e', 'q1']\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('stop')\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matRows\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren('matRows', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reberConstruct\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CSPEED\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableMain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('tableMain', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StateMachine\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dea/dea.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, OnInit, QueryList, Renderer2, ViewChild, ViewChildren } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../shared/dialog/dialog.component';\nimport * as introJS from 'intro.js';\nimport { introJsConfig } from './intro.config';\nimport { cytoscapeConfig, ELEMENT_DATA } from './table.config';\nimport { StateMachine } from 'xstate';\nimport { BehaviorSubject, interval, Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\nimport { CytoGraphService } from './cyto-graph/cyto-graph.service';\nimport { dialogConfig, CSPEED, SPEED } from '../app.config';\nimport { DeaService } from './dea.service';\n\n@Component({\n  selector: 'app-dea',\n  templateUrl: './dea.component.html',\n  styleUrls: ['./dea.component.scss'],\n})\nexport class DeaComponent implements OnInit {\n  displayedColumns: string[] = ['q0', 'e', 'q1'];\n  dataSource = ELEMENT_DATA;\n  cyConfig = cytoscapeConfig;\n  speed = CSPEED;\n  xState: StateMachine;\n  toggleService!: any;\n  reberConstruct: { id: string; s: string; trans: string }[] = [];\n  animationObject: any = { current: -1 };\n  timer!: Observable;\n  endState = new BehaviorSubject('stop');\n  errorState: any;\n\n  @Input() reberString = '';\n  @Input() ausgabeString = '';\n\n  @ViewChildren('matRows', { read: ElementRef })\n  matRows!: QueryList;\n  @ViewChild('tableMain', { read: ElementRef }) tableMain!: ElementRef;\n\n  constructor(\n    public dialog: MatDialog,\n    private renderer: Renderer2,\n    private deaService: DeaService,\n    private cytoService: CytoGraphService\n  ) {\n    this.xState = this.deaService.createReberMachine();\n    this.cytoService.errorSate.subscribe((v) => {\n      this.errorState = {\n        ...v,\n        hm: `Das Reberwort ${this.reberString.substring(\n          0,\n          this.reberConstruct.length - 1\n        )}${this.reberString.substring(\n          this.reberConstruct.length - 1,\n          this.reberConstruct.length\n        )}${this.reberString.substring(\n          this.reberConstruct.length,\n          this.reberString.length\n        )} ist an der Stelle ${this.reberString.slice(\n          this.reberConstruct.length - 1,\n          this.reberConstruct.length\n        )} nicht definiert. ${v.msg}`,\n      };\n    });\n  }\n\n  ngOnInit(): void {\n    this.toggleService = this.deaService.createDefaultReberFSM();\n  }\n\n  openDialog(): void {\n    this.dialog.open(DialogComponent, dialogConfig);\n  }\n\n  startTour(): void {\n    const intro = introJS();\n    intro.setOptions(introJsConfig).start();\n  }\n\n  generateReberString(): void {\n    const { reberConstruct, reberString } = this.deaService.generateReberString();\n    this.evaluateString(reberString, 'Korrekt');\n    this.reberString = reberString;\n    this.reberConstruct = reberConstruct;\n\n    this.onStart();\n  }\n\n  generateNonReberString(): void {\n    const { reberConstruct, reberString } = this.deaService.generateNonReber();\n\n    this.reberConstruct = reberConstruct;\n    this.evaluateString(reberString, 'Falsch');\n    this.reberString = reberString;\n    this.onStart();\n  }\n\n  animateStep() {\n    this.cytoService.animateStep(this.reberConstruct[this.animationObject.current].trans, SPEED[this.speed]);\n  }\n\n  evaluateString(str: any, initialAusgabeString?: string): void {\n    const { reberString, ausgabeString } = this.deaService.evaluateString(str, initialAusgabeString);\n\n    this._resetAnimationObject();\n    this.reberString = reberString;\n    this.ausgabeString = ausgabeString;\n    this.renderer.addClass(this.tableMain.nativeElement, 'active');\n    this.reberConstruct = this.deaService.generateReberConstruct(reberString);\n  }\n\n  onNext(shouldNotStop = false): void {\n    this.renderer.removeClass(this.tableMain.nativeElement, 'active');\n\n    if (this.animationObject.current  {\n      const id = this.reberConstruct[this.animationObject.current].trans;\n\n      if (id === 'error') {\n        return;\n      }\n\n      if (id === r.nativeElement.id) {\n        this.renderer.addClass(r.nativeElement, 'active');\n      } else {\n        this.renderer.removeClass(r.nativeElement, 'active');\n      }\n    });\n  }\n\n  onPrevious(): void {\n    if (this.animationObject.current  {\n      this.renderer.removeClass(r.nativeElement, 'active');\n      if (this.reberConstruct[this.animationObject.current].trans === r.nativeElement.id) {\n        this.renderer.addClass(r.nativeElement, 'active');\n      } else {\n        this.renderer.removeClass(r.nativeElement, 'active');\n      }\n    });\n    this.animateStep();\n    this.endState.next('stop');\n  }\n\n  onStop(): void {\n    this._resetAnimationObject();\n    this.cytoService.resetAnimation();\n    this.renderer.addClass(this.tableMain.nativeElement, 'active');\n    this.matRows.forEach((r) => {\n      this.renderer.removeClass(r.nativeElement, 'active');\n    });\n    this.endState.next('stop');\n  }\n\n  onPlay(): void {\n    this.timer = interval(5000 / this.speed);\n    const source = this.timer;\n\n    if (this.animationObject.current === this.reberConstruct.length - 1) {\n      this.onStop();\n    }\n\n    this.endState.next('start');\n\n    source.pipe(takeWhile(() => this.endState.value !== 'stop')).subscribe(() => {\n      this.onNext(true);\n      if (this.animationObject.current === this.reberConstruct.length - 1) {\n        this.endState.next('stop');\n      }\n    });\n  }\n\n  onPause(): void {\n    this.endState.next('stop');\n  }\n\n  private _resetAnimationObject() {\n    this.animationObject.current = -1;\n  }\n}\n\n    \n\n    \n        DEA (Reber Grammar)\n\n  \n    \n      Generiere korrektes Reber-Wort\n    \n    \n      Generiere falsches Reber-Wort\n    \n  \n  \n    \n      Tech-Stack\n    \n    Theorie\n    \n      Tour starten!\n    \n  \n\n\n  \n    Eingabe\n    \n      \n        Eingabe der Zeichen\n        \n      \n\n      \n        Ausgabe\n        \n      \n    \n    \n    \n      \n        \n          Tabelle ()\n        \n      \n      \n        Q\n        \n          {{ element.q0 === \"1\" ? \"&#8594; 1\" : element.q0 }}\n        \n      \n      \n        ∑\n        {{ element.e }}\n      \n      \n        Q\n        \n          {{ element.q1 === \"8\" ? \"* 8\" : element.q1 }}\n        \n      \n\n      \n      \n    \n  \n\n  \n    \n      Q = {{ \"{ 1, 2, 3, 4, 5, 6, 7, 8 }\" }}\n      ∑ = {{ \"{ B, T, S, V, X, P, E }\" }}\n      δ = siehe Tabelle\n      q0 = {{ \"{ 1 }\" }}\n      F = {{ \"{ 8 }\" }}\n    \n    \n      \n        first_page\n        chevron_left\n        play_circle_filled\n        stop_circle_filled\n        pause_circle_filled\n        chevron_right\n        last_page\n      \n    \n    \n    \n      \n      \n      speed\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./dea.component.scss\n                \n                .main-content {\n  height: 550px;\n  margin-bottom: 100px;\n  padding: 0 1.5rem;\n}\n\n.left-bar {\n  background-color: blue;\n  height: 100%;\n  width: 20%;\n}\n\n.container {\n  border: 2px solid lightgray;\n  display: flex;\n  flex: 1;\n  flex-wrap: wrap;\n  justify-content: center;\n  position: relative;\n}\n\n.example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.example-full-width {\n  width: 100%;\n}\n\ntable {\n  width: 100%;\n  text-align: center;\n}\n\ntd,\nth {\n  vertical-align: middle;\n}\n\ntr.mat-row {\n  height: 0px !important;\n}\n\ntr:nth-child(even) {\n  background-color: rgba(238, 240, 253, 0.84);\n}\n\n.headline {\n  margin-bottom: 5rem;\n}\n\n.button-group {\n  align-self: flex-end;\n  z-index: 100;\n}\n\n.slider-wrapper {\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.cy-wrapper {\n  display: none;\n  background: whitesmoke;\n  width: 700px;\n  height: 300px;\n  border: 1px solid black;\n}\n\n.overlay {\n  border: 1px solid #3f51b5;\n  position: absolute;\n  left: 2px;\n  top: 2px;\n  padding: 5px;\n}\n\n.action-button {\n  margin-left: 12px;\n}\n\n.green {\n  color: green;\n}\n\n.red {\n  color: red;\n}\n\ntr.active {\n  border: 2px dashed #ff4081;\n\n  &:last-child {\n    border: 3px dashed green;\n  }\n}\nth,\ntd {\n  padding: 0 !important;\n  width: 33%;\n}\n\nth:nth-child(2),\ntd:nth-child(2) {\n  border-right: 1px solid lightgray;\n}\n\ntr.active::after {\n  content: attr(data-after-content);\n  background-color: #ff4081;\n  margin-left: -16px;\n  margin-top: 0.3px;\n  width: 19px;\n  height: 19px;\n  position: absolute;\n  font-size: 12px;\n  color: white;\n}\n\ntr:last-child.active::after {\n  content: attr(data-after-content);\n  background-color: green;\n  margin-left: -16px;\n  margin-top: 0.3px;\n  width: 19px;\n  height: 19px;\n  position: absolute;\n  font-size: 12px;\n  color: white;\n}\n\n.error-box {\n  position: absolute;\n  bottom: -50px;\n  left: 0;\n  border: 1px solid red;\n  background-color: lightgoldenrodyellow;\n  padding: 7px;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'DEA (Reber Grammar)            Generiere korrektes Reber-Wort              Generiere falsches Reber-Wort                  Tech-Stack        Theorie          Tour starten!            Eingabe                  Eingabe der Zeichen                            Ausgabe                                                  Tabelle ()                            Q                  {{ element.q0 === \"1\" ? \"→ 1\" : element.q0 }}                            ∑        {{ element.e }}                    Q                  {{ element.q1 === \"8\" ? \"* 8\" : element.q1 }}                                            Q = {{ \"{ 1, 2, 3, 4, 5, 6, 7, 8 }\" }}      ∑ = {{ \"{ B, T, S, V, X, P, E }\" }}      δ = siehe Tabelle      q0 = {{ \"{ 1 }\" }}      F = {{ \"{ 8 }\" }}                      first_page        chevron_left        play_circle_filled        stop_circle_filled        pause_circle_filled        chevron_right        last_page                                    speed          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeaLink.html":{"url":"interfaces/DeaLink.html","title":"interface - DeaLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeaLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/word-generator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     number | \"Start\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | \"Start\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeaLink {\n    key: number | \"Start\", from: number, to: number, text: string\n}\n\nexport interface DeaNode {\n    id: number, text: string, figure?: string\n}\n\nexport interface DeaArray {\n    nodes: DeaNode[],\n    links: DeaLink[]\n}\n\nexport class WordGenerator {\n\n    generateWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number): string | null {\n        if (index > 1000) {\n            return null;\n        }\n        // If (Teste ob Node Enpunkt ist)\n        if (currentNode.figure === \"Ring\" && Math.random() > 0.6) {\n            return word;\n        }\n        //Alle ausgehenden Links dieses Notes\n        const outgoingLinks = dea.links.filter(link => link.from === currentNode!.id);\n        //Anzahl der Links\n        //Random ein Link auswählen\n        const randomLinkNumber = Math.floor(Math.random() * outgoingLinks.length);\n        const nextlinkElement = outgoingLinks[randomLinkNumber];\n        const nextNodeElement = dea.nodes.find(node => node.id === nextlinkElement!.to);\n\n        const LinkText = outgoingLinks[randomLinkNumber].text.split(\",\");\n\n        //Prüfe ob mehre Zeichen vorhanden sind(,)\n        if (LinkText.length > 1) {\n            const randomLinkText = Math.floor(Math.random() * LinkText.length);\n            //Text des Links in das Wort anhängen\n            word += LinkText[randomLinkText];\n        } else {\n            //Text des Links in das Wort anhängen\n            word += LinkText[0];\n        }\n\n        //Schaue worauf der Link zeigt(to)\n        return this.generateWordRekursive(dea, word, nextNodeElement!, index + 1)\n    }\n\n\n    generateWord(dea: DeaArray): string | null {\n        //Suche den Link mit \"Start\"\n        const word = \"\";\n        const currentStartLink = dea.links.find(link => link.key === \"Start\");\n        //Gehe durch den Array und suche den Node auf den der Start Link zeigt \n        const currentNode = dea.nodes.find(node => node.id === currentStartLink!.to);\n        return this.generateWordRekursive(dea, word, currentNode!, 0)\n    };\n\n    generateWords(dea: DeaArray): string[] {\n        const result: string[] = [];\n        for (let i = 0; i  arr[Math.floor(Math.random() * arr.length)])\n         .join(\"\");\n}             \n    \n\n      generateRandomWords(arr): string[] {\n        const result: string[] = [];\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeaModule.html":{"url":"modules/DeaModule.html","title":"module - DeaModule","body":"\n                   \n\n\n\n\n    Modules\n    DeaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DeaModule\n\n\n\ncluster_DeaModule_providers\n\n\n\ncluster_DeaModule_declarations\n\n\n\n\nCytoGraphComponent\n\nCytoGraphComponent\n\n\n\nDeaModule\n\nDeaModule\n\nDeaModule -->\n\nCytoGraphComponent->DeaModule\n\n\n\n\n\nDeaComponent\n\nDeaComponent\n\nDeaModule -->\n\nDeaComponent->DeaModule\n\n\n\n\n\nDeaService\n\nDeaService\n\nDeaModule -->\n\nDeaService->DeaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dea/dea.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CytoGraphComponent\n                        \n                        \n                            DeaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DeaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DeaComponent } from './dea.component';\nimport { RouterModule } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FormsModule } from '@angular/forms';\nimport { CytoGraphComponent } from './cyto-graph/cyto-graph.component';\nimport { DeaService } from './dea.service';\n\n@NgModule({\n  declarations: [DeaComponent, CytoGraphComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatSliderModule,\n  ],\n  providers: [DeaService],\n})\nexport class DeaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeaNode.html":{"url":"interfaces/DeaNode.html","title":"interface - DeaNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeaNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/word-generator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            figure\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        figure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        figure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeaLink {\n    key: number | \"Start\", from: number, to: number, text: string\n}\n\nexport interface DeaNode {\n    id: number, text: string, figure?: string\n}\n\nexport interface DeaArray {\n    nodes: DeaNode[],\n    links: DeaLink[]\n}\n\nexport class WordGenerator {\n\n    generateWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number): string | null {\n        if (index > 1000) {\n            return null;\n        }\n        // If (Teste ob Node Enpunkt ist)\n        if (currentNode.figure === \"Ring\" && Math.random() > 0.6) {\n            return word;\n        }\n        //Alle ausgehenden Links dieses Notes\n        const outgoingLinks = dea.links.filter(link => link.from === currentNode!.id);\n        //Anzahl der Links\n        //Random ein Link auswählen\n        const randomLinkNumber = Math.floor(Math.random() * outgoingLinks.length);\n        const nextlinkElement = outgoingLinks[randomLinkNumber];\n        const nextNodeElement = dea.nodes.find(node => node.id === nextlinkElement!.to);\n\n        const LinkText = outgoingLinks[randomLinkNumber].text.split(\",\");\n\n        //Prüfe ob mehre Zeichen vorhanden sind(,)\n        if (LinkText.length > 1) {\n            const randomLinkText = Math.floor(Math.random() * LinkText.length);\n            //Text des Links in das Wort anhängen\n            word += LinkText[randomLinkText];\n        } else {\n            //Text des Links in das Wort anhängen\n            word += LinkText[0];\n        }\n\n        //Schaue worauf der Link zeigt(to)\n        return this.generateWordRekursive(dea, word, nextNodeElement!, index + 1)\n    }\n\n\n    generateWord(dea: DeaArray): string | null {\n        //Suche den Link mit \"Start\"\n        const word = \"\";\n        const currentStartLink = dea.links.find(link => link.key === \"Start\");\n        //Gehe durch den Array und suche den Node auf den der Start Link zeigt \n        const currentNode = dea.nodes.find(node => node.id === currentStartLink!.to);\n        return this.generateWordRekursive(dea, word, currentNode!, 0)\n    };\n\n    generateWords(dea: DeaArray): string[] {\n        const result: string[] = [];\n        for (let i = 0; i  arr[Math.floor(Math.random() * arr.length)])\n         .join(\"\");\n}             \n    \n\n      generateRandomWords(arr): string[] {\n        const result: string[] = [];\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeaService.html":{"url":"injectables/DeaService.html","title":"injectable - DeaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dea/dea.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _validateReberString\n                            \n                            \n                                createDefaultReberFSM\n                            \n                            \n                                createReberMachine\n                            \n                            \n                                evaluateString\n                            \n                            \n                                generateNonReber\n                            \n                            \n                                generateReberConstruct\n                            \n                            \n                                generateReberString\n                            \n                            \n                                genFSM\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _validateReberString\n                        \n                    \n                \n            \n            \n                \n                    \n                    _validateReberString(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { ausgabeString: any; reberString: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createDefaultReberFSM\n                        \n                    \n                \n            \n            \n                \ncreateDefaultReberFSM()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createReberMachine\n                        \n                    \n                \n            \n            \n                \ncreateReberMachine()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        evaluateString\n                        \n                    \n                \n            \n            \n                \nevaluateString(str: any, initialAusgabeString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    initialAusgabeString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateNonReber\n                        \n                    \n                \n            \n            \n                \ngenerateNonReber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { reberString: any; reberConstruct: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateReberConstruct\n                        \n                    \n                \n            \n            \n                \ngenerateReberConstruct(reberStringParam: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reberStringParam\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateReberString\n                        \n                    \n                \n            \n            \n                \ngenerateReberString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genFSM\n                        \n                    \n                \n            \n            \n                \ngenFSM(xState: StateMachine, listener: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dea/dea.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    xState\n                                    \n                                            StateMachine\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createMachine, interpret, StateMachine } from 'xstate';\nimport { StateListener } from 'xstate/lib/interpreter';\nimport { randomGenChar } from '../shared/helpers/helpers';\nimport { DEAException } from '../shared/Exceptions/DEAException';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeaService {\n  genFSM(xState: StateMachine, listener: any) {\n    return interpret(xState).onTransition(listener).start();\n  }\n\n  createReberMachine() {\n    return createMachine({\n      id: 'reber-dea',\n      initial: '1',\n      states: {\n        1: { on: { B: '2', '*': '9' } },\n        2: { on: { T: '3', P: '4', '*': '9' } },\n        3: { on: { S: '3', X: '6', '*': '9' } },\n        4: { on: { T: '4', V: '5', '*': '9' } },\n        5: { on: { P: '6', V: '7', '*': '9' } },\n        6: { on: { X: '4', S: '7', '*': '9' } },\n        7: { on: { E: '8', '*': '9' } },\n        8: { type: 'final' },\n        9: { type: 'final' },\n      },\n    });\n  }\n\n  createDefaultReberFSM() {\n    return this.genFSM(this.createReberMachine(), (state) => {\n      if (state.value === '9') {\n        throw new Error('Transition nicht erlaubt');\n      }\n      if (state.value === '8' && !state.changed) {\n        throw new Error('Ist bereits zuende');\n      }\n    });\n  }\n\n  generateReberString(): { reberString: any; reberConstruct: any } {\n    const newString = [{ id: '2', s: 'B', trans: '1B2' }];\n    const deaService = this.createDefaultReberFSM();\n    const xState = this.createReberMachine();\n    let ah = deaService.send('B');\n\n    while (ah.event !== 8) {\n      const prevEvent = ah.value;\n      const nextNode: any = xState.states[ah.value.toString()].config.on;\n\n      if (nextNode) {\n        const char = randomGenChar(...Object.keys(nextNode).filter((a) => a !== '*'));\n\n        if (char !== undefined) {\n          ah = deaService.send(char);\n          newString.push({\n            id: ah.value.toString(),\n            s: char,\n            trans: prevEvent + char + ah.value.toString(),\n          });\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    return {\n      reberString: newString.reduce((a, n) => a + n.s, ''),\n      reberConstruct: newString,\n    };\n  }\n\n  generateNonReber() {\n    const asw = ['B', 'T', 'P', 'S', 'X', 'V', 'B', 'T', 'P', 'S', 'X', 'E'];\n    let hasError = false;\n    const { reberConstruct } = this.generateReberString();\n\n    const wrongReberString = reberConstruct.map((a: any) => {\n      const rdm = Math.floor(Math.random() * 10);\n      if (a.id === '2') {\n        return a;\n      }\n\n      if (rdm > 3) {\n        hasError = true;\n      }\n\n      if (!hasError && a.id === '8') {\n        return { id: a.id, s: 'P', trans: '1B' };\n      }\n\n      return { id: a.id, s: rdm  a + n.s, ''),\n      reberConstruct,\n    };\n  }\n\n  private _validateReberString(str: string) {\n    const xState = this.createReberMachine();\n    let ausgabeString;\n\n    if (str.slice(-1) === 'E') {\n      ausgabeString = 'Korrekt';\n    }\n\n    const service = this.genFSM(xState, (state) => {\n      if (state.value === '9') {\n        throw new DEAException(str, 'Falsch', 'Transition nicht erlaubt');\n      }\n\n      if ([...str].filter((s) => s === 'E').length > 1) {\n        throw new DEAException(str, 'Falsch', 'Endzustand erreicht');\n      }\n    });\n\n    for (const char of str) {\n      try {\n        service.send(char);\n      } catch (e) {\n        ausgabeString = 'Falsch';\n      }\n    }\n\n    service.stop();\n    return { ausgabeString, reberString: str };\n  }\n\n  evaluateString(str: any, initialAusgabeString: string = ''): { ausgabeString: any; reberString: any } {\n    let ausgabeString;\n    let reberString;\n\n    try {\n      const { reberString: r, ausgabeString: a } = this._validateReberString(str);\n      ausgabeString = a || initialAusgabeString;\n      reberString = r || str;\n    } catch (e: any) {\n      reberString = e.reberString;\n      ausgabeString = e.ausgabeString;\n    }\n    return { ausgabeString, reberString };\n  }\n\n  generateReberConstruct(reberStringParam: string): { id: string; s: string; trans: string; error?: string }[] {\n    const xState = this.createReberMachine();\n    let reberString = reberStringParam.substring(1);\n    let newString: { id: string; s: string; trans: string; error?: string }[];\n\n    if (reberStringParam[0] === 'B') {\n      newString = [{ id: '2', s: 'B', trans: '1B2' }];\n      let isCorrect = true;\n\n      const service = this.genFSM(xState, (state) => {\n        if (state.value === '9') {\n          isCorrect = false;\n          // throw new Error('Transition nicht erlaubt');\n        }\n\n        if (state.value === '8' && !state.changed) {\n          isCorrect = false;\n          // throw new Error('Ist bereits zuende');\n        }\n      });\n\n      let ah = service.send('B');\n\n      for (let char of reberString) {\n        const prevEvent = ah.value;\n        ah = service.send(char);\n\n        if (isCorrect) {\n          newString.push({\n            id: ah.value.toString(),\n            s: char,\n            trans: prevEvent + char + ah.value.toString(),\n          });\n        } else {\n          newString.push({ id: 'error', s: char, trans: 'error', error: 'error' });\n        }\n      }\n      let filterOne = true;\n      return newString.filter((a) => {\n        if (a.id === 'error' && filterOne) {\n          filterOne = false;\n          return true;\n        }\n\n        if (a.id !== 'error') {\n          return true;\n        }\n\n        return false;\n      });\n    }\n    return [{ error: 'B', id: '', s: '', trans: 'error' }];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DemoForceDirectedLayout.html":{"url":"classes/DemoForceDirectedLayout.html","title":"class - DemoForceDirectedLayout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DemoForceDirectedLayout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/puzzle-game.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                makeNetwork\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        makeNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeNetwork(coll)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    coll\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, Component, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport * as go from 'gojs';\nimport { initRing } from \"./shapes/shape\";\nimport { DataSyncService, DiagramComponent } from \"gojs-angular\";\nimport produce from \"immer\";\nimport { game } from \"./level\";\nimport { DeaArray, WordGenerator } from './word-generator';\nimport { WordChecker } from './word-checker';\nimport { Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n\nclass DemoForceDirectedLayout extends go.ForceDirectedLayout {\n  // Override the makeNetwork method to also initialize\n  // ForceDirectedVertex.isFixed from the corresponding Node.isSelected.\n  override makeNetwork(coll) {\n    // call base method for standard behavior\n    const net = super.makeNetwork(coll);\n    net.vertexes.each(vertex => {\n      const node = vertex.node;\n      if (node !== null) (vertex as any).isFixed = node.isSelected;\n    });\n    return net;\n  }\n}\n\n\n@Component({\n  selector: 'app-puzzle-game',\n  templateUrl: './puzzle-game.component.html',\n  styleUrls: ['./puzzle-game.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PuzzleGameComponent implements OnChanges {\n  public diagramDivClassName: string = 'gojs-wrapper';\n  public paletteDivClassName = 'gojs-palette';\n  public game = game;\n  public activeLevel = parseInt(localStorage.getItem('activeLevel')!)  || 0; \n  public highestLevel = parseInt(localStorage.getItem('highestLevel')!) || 0;\n  public score = parseInt(localStorage.getItem('score')!) || 0;\n\n  public task = game[this.activeLevel].task;\n  public observedDiagram: any = null;\n\n\n  public state: any = {\n    diagramNodeData: game[0].nodes,\n    diagramLinkData: game[0].links,\n    diagramModelData: { prop: 'value' },\n    skipsDiagramUpdate: false,\n    paletteNodeData: []\n  };\n\n  @ViewChild('myDiagram', { static: true }) public myDiagramComponent: DiagramComponent | undefined;\n\n  constructor(private cdr: ChangeDetectorRef, public dialog: MatDialog) { }\n\n  \n  openDialog(check, word) {\n    const dialogRef = this.dialog.open(DialogDataExampleDialog, {\n      width: '250px',\n      position:  {\n        bottom: \"200px\",\n        right: \"100\"\n       },\n      data: {\n        winState: check,\n        onNext : this.loadNextLevel.bind(this),\n        word,\n      },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      //this.animal = result;\n    });\n  }\n\n  public ngOnChanges() {\n    // whenever showGrid changes, update the diagram.grid.visible in the child DiagramComponent\n    if (this.myDiagramComponent && this.myDiagramComponent.diagram instanceof go.Diagram) {\n      //console.log(this.myDiagramComponent.diagram)\n    }\n  }\n\n  \n  public ngAfterViewInit() {\n    if (this.observedDiagram) return;\n    this.observedDiagram = this.myDiagramComponent?.diagram;\n    this.cdr.detectChanges(); // IMPORTANT: without this, Angular will throw ExpressionChangedAfterItHasBeenCheckedError (dev mode only)\n\n    const appComp: any = this;\n    // listener for inspector\n    this.myDiagramComponent?.diagram.addDiagramListener('ChangedSelection', function (e) {\n      if (e.diagram.selection.count === 0) {\n        appComp.selectedNodeData = null;\n      }\n      const node = e.diagram.selection.first();\n      appComp.state = produce(appComp.state, draft => {\n        if (node instanceof go.Node) {\n          var idx = draft.diagramNodeData.findIndex(nd => nd.id == node.data.id);\n          var nd = draft.diagramNodeData[idx];\n          draft.selectedNodeData = nd;\n        } else {\n          draft.selectedNodeData = null;\n        }\n      });\n    });\n  } // end ngAfterViewInit\n\n  public initDiagram(): go.Diagram {\n    const $ = go.GraphObject.make;\n    const diagram = $(go.Diagram, {\n      'undoManager.isEnabled': true,\n      \"linkingTool.isUnconnectedLinkValid\": true,\n      \"draggingTool.dragsLink\": true,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"relinkingTool.isUnconnectedLinkValid\": true,\n      \"relinkingTool.portGravity\": 20,\n      layout: new DemoForceDirectedLayout(),\n      model: new go.GraphLinksModel({\n        linkFromPortIdProperty: \"fromPort\",\n        linkToPortIdProperty: \"toPort\",\n        nodeKeyProperty: 'id',\n        linkKeyProperty: 'key'\n      })\n    });\n\n\n\n    // define the Node template\n    diagram.nodeTemplate = $(go.Node, \"Auto\", { zOrder: -5 }, new go.Binding(\"layerName\", \"Background\"), $(go.Shape, \"Circle\", { fill: \"lightgray\" }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.Panel, \"Table\", $(go.RowColumnDefinition, {\n      column: 0, alignment: go.Spot.Left\n    }), $(go.TextBlock, {\n      column: 0,\n      row: 0,\n      columnSpan: 3,\n      editable: true,\n      alignment: go.Spot.Center,\n      font: \"bold 10pt sans-serif\",\n      margin: new go.Margin(4, 2)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()), $(go.Panel, \"Horizontal\", { column: 1, row: 1 }, $(go.Shape, {\n      width: 6,\n      height: 6,\n      portId: \"A\",\n      toLinkable: true,\n      fromLinkable: true,\n      cursor: 'pointer',\n      fromLinkableDuplicates: true,\n      toLinkableDuplicates: true,\n      fromLinkableSelfNode: true,\n      toLinkableSelfNode: true\n    }))));\n\n    diagram.linkTemplate = $(go.Link, { zOrder: 50 }, new go.Binding(\"layerName\", \"Foreground\"), new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 10,\n          background: 'white',\n          editable: true,\n          width: 30,\n          height: 30,\n          alignment: go.Spot.Center,\n          verticalAlignment: go.Spot.Center,\n          textAlign: 'center'\n        }, new go.Binding(\"text\", \"text\").makeTwoWay()));\n\n    return diagram;\n  }\n\n  public diagramModelChange = (changes: go.IncrementalData) => {\n    if (!changes) return;\n    const appComp = this;\n    this.state = produce(this.state, draft => {\n      // set skipsDiagramUpdate: true since GoJS already has this update\n      // this way, we don't log an unneeded transaction in the Diagram's undoManager history\n      draft.skipsDiagramUpdate = true;\n      draft.diagramNodeData = DataSyncService.syncNodeData(changes, draft.diagramNodeData, appComp.observedDiagram.model);\n      draft.diagramLinkData = DataSyncService.syncLinkData(changes, draft.diagramLinkData, appComp.observedDiagram.model);\n      draft.diagramModelData = DataSyncService.syncModelData(changes, draft.diagramModelData);\n      // If one of the modified nodes was the selected node used by the inspector, update the inspector selectedNodeData object\n      const modifiedNodeDatas = changes.modifiedNodeData;\n      if (modifiedNodeDatas && draft.selectedNodeData) {\n        for (let i = 0; i  {\n           draft.skipsDiagramUpdate = true;\n           draft.diagramNodeData = nodes;\n           draft.diagramLinkData = links;\n         }); */\n  };\n\n  public initPalette(): go.Palette {\n    const $ = go.GraphObject.make;\n    const palette = $(go.Palette);\n    initRing();\n\n    palette.padding = new go.Margin(100, 0, 0, 0);\n\n    // define the Node template\n    palette.nodeTemplate = $(go.Node, \"Horizontal\", {\n      height: 120, width: 80, selectionAdorned: false, cursor: 'grab'\n    }, $(go.Shape, \"Circle\", {\n      width: 30, height: 30\n    }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.TextBlock, {\n      margin: 2, font: \"bold 16px sans-serif\"\n    }, new go.Binding(\"text\", \"internal\")), $(go.TextBlock, { margin: 2, font: \" 11px sans-serif\" }, new go.Binding(\"text\", \"key\")),);\n\n    palette.linkTemplate = $(go.Link, \n      {\n      height: 120, selectionAdornmentTemplate: $(go.Adornment, \"Link\", $(go.Shape, {\n        isPanelMain: true, fill: null, stroke: \"deepskyblue\", strokeWidth: 0\n      }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }))\n    },\n     {\n      routing: go.Link.AvoidsNodes, curve: go.Link.JumpOver, corner: 5, toShortLength: 4\n    }, new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 4, background: 'white'\n        }, new go.Binding(\"text\", \"key\"))),\n\n      palette.model = new go.GraphLinksModel([  // specify the contents of the Palette\n        { key: \"Ende\", color: \"white\", internal: \"\", stroke: \"black\", figure: 'Ring' }, \n        {key: \"Knoten\", color: \"white\", internal: \"\", stroke: \"black\"},\n      ], [// the Palette also has a disconnected Link, which the user can drag-and-drop\n        { key: 'Start', points: new go.List().addAll([new go.Point(10, 0), new go.Point(70, 0)]) },\n\n      ]);\n\n    return palette;\n  }\n\n  public reinitModel() {\n\n    let text = \"Bist du dir sicher?!\\nOK or Cancel.\";\n    if (confirm(text) == true) {\n      text = \"You pressed OK!\";\n      if (this.myDiagramComponent) {\n        this.loadDiagram(this.activeLevel);\n      }\n    } else {\n      text = \"You canceled!\";\n    }\n  }\n\n\n  nextDiagram(value: number) {\n    if (this.myDiagramComponent) {\n      localStorage.setItem('activeLevel', value.toString());\n      this.activeLevel = value;\n      this.task = game[value].task\n      this.myDiagramComponent.clear();\n      this.state = produce(this.state, draft => {\n        draft.skipsDiagramUpdate = false;\n        draft.diagramNodeData = game[value].nodes;\n        draft.diagramLinkData = game[value].links as any;\n      });\n    }\n  }\n\n  loadDiagram(value: number) {\n    if(value  {\n          draft.skipsDiagramUpdate = false;\n          draft.diagramNodeData = game[value].nodes;\n          draft.diagramLinkData = game[value].links as any;\n        });\n      }\n    }\n\n  }\n\n  validateDiagram() {\n    const wordGenerator = new WordGenerator();\n    /*const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }*/\n    //console.log(wordGenerator.generateWords(deaObject));\n\n    //console.log(wordGenerator.generateRandomWords([\"1\", \"0\"]));\n\n    //console.log(\"validate data\", this.state);\n  }\n  checkDea() {\n  \n\n    if (this.activeLevel === 0) {\n      this.openDialog(true, \"\");\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n     if(!deaObject.links.find(link => link.key === \"Start\")){\n            alert(\"Bitte füge ein StartLink hinzu\");\n            return;\n       } \n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n    const referenzautomat = game[this.activeLevel].solution;\n\n\n    let isCorrect = true;\n    let word;\n    \n    for (let i = 0; i  this.highestLevel){\n        localStorage.setItem('highestLevel', this.activeLevel.toString());\n        this.highestLevel = this.activeLevel;\n        this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n      }\n      this.nextDiagram(this.activeLevel);\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n\n    const referenzautomat = game[this.activeLevel].solution;\n    for (let i = 0; i  this.highestLevel){\n      localStorage.setItem('highestLevel', this.activeLevel.toString());\n      this.highestLevel = this.activeLevel;\n      this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n    }\n    this.nextDiagram(this.activeLevel, );\n\n  }\n\n  resetGame() {\n\n    if (confirm('Bist du dir sicher das du alle Leveln und deine Stand zurücksetzen möchtest?')) {\n      localStorage.setItem('activeLevel', \"0\");\n      this.activeLevel = 0;\n  \n      localStorage.setItem('highestLevel',\"0\");\n      this.highestLevel = 0;\n  \n     localStorage.setItem('score', \"0\");\n     this.score = 0;\n    } else {\n      \n    }\n\n\n  }\n}\n\nexport interface DialogData {\n  winState: boolean;\n  onNext: () => void;\n  word: {\n    word: string;\n    vergleich:{\n      yourGraph: boolean;\n      referenzGraph: boolean;\n    }  ,index?: number;\n\n\n  };\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n})\nexport class DialogDataExampleDialog {\n  constructor(  public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onNwxtLevelChanged(): void {\n    this.data.onNext();\n    this.dialogRef.close();\n\n  }\n\n\n\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogComponent.html":{"url":"components/DialogComponent.html","title":"component - DialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/dialog/dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog\n            \n\n            \n                styleUrls\n                ./dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/dialog/dialog.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/dialog/dialog.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog/dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog/dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, Optional } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class DialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Tech-Stack\n\n  Diese App ist mit folgenden Tools erstellt worden:\n  \n    Angular\n    Angular Material\n    Bulma\n    Canvas\n    xState\n    Intro.JS\n  \n\n\n  OK\n\n\n    \n\n    \n                \n                    ./dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Tech-Stack  Diese App ist mit folgenden Tools erstellt worden:      Angular    Angular Material    Bulma    Canvas    xState    Intro.JS    OK'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/puzzle-game.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            onNext\n                                        \n                                \n                                \n                                        \n                                            winState\n                                        \n                                \n                                \n                                        \n                                            word\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        onNext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onNext:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        winState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        winState:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        word\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        word:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport * as go from 'gojs';\nimport { initRing } from \"./shapes/shape\";\nimport { DataSyncService, DiagramComponent } from \"gojs-angular\";\nimport produce from \"immer\";\nimport { game } from \"./level\";\nimport { DeaArray, WordGenerator } from './word-generator';\nimport { WordChecker } from './word-checker';\nimport { Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n\nclass DemoForceDirectedLayout extends go.ForceDirectedLayout {\n  // Override the makeNetwork method to also initialize\n  // ForceDirectedVertex.isFixed from the corresponding Node.isSelected.\n  override makeNetwork(coll) {\n    // call base method for standard behavior\n    const net = super.makeNetwork(coll);\n    net.vertexes.each(vertex => {\n      const node = vertex.node;\n      if (node !== null) (vertex as any).isFixed = node.isSelected;\n    });\n    return net;\n  }\n}\n\n\n@Component({\n  selector: 'app-puzzle-game',\n  templateUrl: './puzzle-game.component.html',\n  styleUrls: ['./puzzle-game.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PuzzleGameComponent implements OnChanges {\n  public diagramDivClassName: string = 'gojs-wrapper';\n  public paletteDivClassName = 'gojs-palette';\n  public game = game;\n  public activeLevel = parseInt(localStorage.getItem('activeLevel')!)  || 0; \n  public highestLevel = parseInt(localStorage.getItem('highestLevel')!) || 0;\n  public score = parseInt(localStorage.getItem('score')!) || 0;\n\n  public task = game[this.activeLevel].task;\n  public observedDiagram: any = null;\n\n\n  public state: any = {\n    diagramNodeData: game[0].nodes,\n    diagramLinkData: game[0].links,\n    diagramModelData: { prop: 'value' },\n    skipsDiagramUpdate: false,\n    paletteNodeData: []\n  };\n\n  @ViewChild('myDiagram', { static: true }) public myDiagramComponent: DiagramComponent | undefined;\n\n  constructor(private cdr: ChangeDetectorRef, public dialog: MatDialog) { }\n\n  \n  openDialog(check, word) {\n    const dialogRef = this.dialog.open(DialogDataExampleDialog, {\n      width: '250px',\n      position:  {\n        bottom: \"200px\",\n        right: \"100\"\n       },\n      data: {\n        winState: check,\n        onNext : this.loadNextLevel.bind(this),\n        word,\n      },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      //this.animal = result;\n    });\n  }\n\n  public ngOnChanges() {\n    // whenever showGrid changes, update the diagram.grid.visible in the child DiagramComponent\n    if (this.myDiagramComponent && this.myDiagramComponent.diagram instanceof go.Diagram) {\n      //console.log(this.myDiagramComponent.diagram)\n    }\n  }\n\n  \n  public ngAfterViewInit() {\n    if (this.observedDiagram) return;\n    this.observedDiagram = this.myDiagramComponent?.diagram;\n    this.cdr.detectChanges(); // IMPORTANT: without this, Angular will throw ExpressionChangedAfterItHasBeenCheckedError (dev mode only)\n\n    const appComp: any = this;\n    // listener for inspector\n    this.myDiagramComponent?.diagram.addDiagramListener('ChangedSelection', function (e) {\n      if (e.diagram.selection.count === 0) {\n        appComp.selectedNodeData = null;\n      }\n      const node = e.diagram.selection.first();\n      appComp.state = produce(appComp.state, draft => {\n        if (node instanceof go.Node) {\n          var idx = draft.diagramNodeData.findIndex(nd => nd.id == node.data.id);\n          var nd = draft.diagramNodeData[idx];\n          draft.selectedNodeData = nd;\n        } else {\n          draft.selectedNodeData = null;\n        }\n      });\n    });\n  } // end ngAfterViewInit\n\n  public initDiagram(): go.Diagram {\n    const $ = go.GraphObject.make;\n    const diagram = $(go.Diagram, {\n      'undoManager.isEnabled': true,\n      \"linkingTool.isUnconnectedLinkValid\": true,\n      \"draggingTool.dragsLink\": true,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"relinkingTool.isUnconnectedLinkValid\": true,\n      \"relinkingTool.portGravity\": 20,\n      layout: new DemoForceDirectedLayout(),\n      model: new go.GraphLinksModel({\n        linkFromPortIdProperty: \"fromPort\",\n        linkToPortIdProperty: \"toPort\",\n        nodeKeyProperty: 'id',\n        linkKeyProperty: 'key'\n      })\n    });\n\n\n\n    // define the Node template\n    diagram.nodeTemplate = $(go.Node, \"Auto\", { zOrder: -5 }, new go.Binding(\"layerName\", \"Background\"), $(go.Shape, \"Circle\", { fill: \"lightgray\" }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.Panel, \"Table\", $(go.RowColumnDefinition, {\n      column: 0, alignment: go.Spot.Left\n    }), $(go.TextBlock, {\n      column: 0,\n      row: 0,\n      columnSpan: 3,\n      editable: true,\n      alignment: go.Spot.Center,\n      font: \"bold 10pt sans-serif\",\n      margin: new go.Margin(4, 2)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()), $(go.Panel, \"Horizontal\", { column: 1, row: 1 }, $(go.Shape, {\n      width: 6,\n      height: 6,\n      portId: \"A\",\n      toLinkable: true,\n      fromLinkable: true,\n      cursor: 'pointer',\n      fromLinkableDuplicates: true,\n      toLinkableDuplicates: true,\n      fromLinkableSelfNode: true,\n      toLinkableSelfNode: true\n    }))));\n\n    diagram.linkTemplate = $(go.Link, { zOrder: 50 }, new go.Binding(\"layerName\", \"Foreground\"), new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 10,\n          background: 'white',\n          editable: true,\n          width: 30,\n          height: 30,\n          alignment: go.Spot.Center,\n          verticalAlignment: go.Spot.Center,\n          textAlign: 'center'\n        }, new go.Binding(\"text\", \"text\").makeTwoWay()));\n\n    return diagram;\n  }\n\n  public diagramModelChange = (changes: go.IncrementalData) => {\n    if (!changes) return;\n    const appComp = this;\n    this.state = produce(this.state, draft => {\n      // set skipsDiagramUpdate: true since GoJS already has this update\n      // this way, we don't log an unneeded transaction in the Diagram's undoManager history\n      draft.skipsDiagramUpdate = true;\n      draft.diagramNodeData = DataSyncService.syncNodeData(changes, draft.diagramNodeData, appComp.observedDiagram.model);\n      draft.diagramLinkData = DataSyncService.syncLinkData(changes, draft.diagramLinkData, appComp.observedDiagram.model);\n      draft.diagramModelData = DataSyncService.syncModelData(changes, draft.diagramModelData);\n      // If one of the modified nodes was the selected node used by the inspector, update the inspector selectedNodeData object\n      const modifiedNodeDatas = changes.modifiedNodeData;\n      if (modifiedNodeDatas && draft.selectedNodeData) {\n        for (let i = 0; i  {\n           draft.skipsDiagramUpdate = true;\n           draft.diagramNodeData = nodes;\n           draft.diagramLinkData = links;\n         }); */\n  };\n\n  public initPalette(): go.Palette {\n    const $ = go.GraphObject.make;\n    const palette = $(go.Palette);\n    initRing();\n\n    palette.padding = new go.Margin(100, 0, 0, 0);\n\n    // define the Node template\n    palette.nodeTemplate = $(go.Node, \"Horizontal\", {\n      height: 120, width: 80, selectionAdorned: false, cursor: 'grab'\n    }, $(go.Shape, \"Circle\", {\n      width: 30, height: 30\n    }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.TextBlock, {\n      margin: 2, font: \"bold 16px sans-serif\"\n    }, new go.Binding(\"text\", \"internal\")), $(go.TextBlock, { margin: 2, font: \" 11px sans-serif\" }, new go.Binding(\"text\", \"key\")),);\n\n    palette.linkTemplate = $(go.Link, \n      {\n      height: 120, selectionAdornmentTemplate: $(go.Adornment, \"Link\", $(go.Shape, {\n        isPanelMain: true, fill: null, stroke: \"deepskyblue\", strokeWidth: 0\n      }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }))\n    },\n     {\n      routing: go.Link.AvoidsNodes, curve: go.Link.JumpOver, corner: 5, toShortLength: 4\n    }, new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 4, background: 'white'\n        }, new go.Binding(\"text\", \"key\"))),\n\n      palette.model = new go.GraphLinksModel([  // specify the contents of the Palette\n        { key: \"Ende\", color: \"white\", internal: \"\", stroke: \"black\", figure: 'Ring' }, \n        {key: \"Knoten\", color: \"white\", internal: \"\", stroke: \"black\"},\n      ], [// the Palette also has a disconnected Link, which the user can drag-and-drop\n        { key: 'Start', points: new go.List().addAll([new go.Point(10, 0), new go.Point(70, 0)]) },\n\n      ]);\n\n    return palette;\n  }\n\n  public reinitModel() {\n\n    let text = \"Bist du dir sicher?!\\nOK or Cancel.\";\n    if (confirm(text) == true) {\n      text = \"You pressed OK!\";\n      if (this.myDiagramComponent) {\n        this.loadDiagram(this.activeLevel);\n      }\n    } else {\n      text = \"You canceled!\";\n    }\n  }\n\n\n  nextDiagram(value: number) {\n    if (this.myDiagramComponent) {\n      localStorage.setItem('activeLevel', value.toString());\n      this.activeLevel = value;\n      this.task = game[value].task\n      this.myDiagramComponent.clear();\n      this.state = produce(this.state, draft => {\n        draft.skipsDiagramUpdate = false;\n        draft.diagramNodeData = game[value].nodes;\n        draft.diagramLinkData = game[value].links as any;\n      });\n    }\n  }\n\n  loadDiagram(value: number) {\n    if(value  {\n          draft.skipsDiagramUpdate = false;\n          draft.diagramNodeData = game[value].nodes;\n          draft.diagramLinkData = game[value].links as any;\n        });\n      }\n    }\n\n  }\n\n  validateDiagram() {\n    const wordGenerator = new WordGenerator();\n    /*const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }*/\n    //console.log(wordGenerator.generateWords(deaObject));\n\n    //console.log(wordGenerator.generateRandomWords([\"1\", \"0\"]));\n\n    //console.log(\"validate data\", this.state);\n  }\n  checkDea() {\n  \n\n    if (this.activeLevel === 0) {\n      this.openDialog(true, \"\");\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n     if(!deaObject.links.find(link => link.key === \"Start\")){\n            alert(\"Bitte füge ein StartLink hinzu\");\n            return;\n       } \n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n    const referenzautomat = game[this.activeLevel].solution;\n\n\n    let isCorrect = true;\n    let word;\n    \n    for (let i = 0; i  this.highestLevel){\n        localStorage.setItem('highestLevel', this.activeLevel.toString());\n        this.highestLevel = this.activeLevel;\n        this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n      }\n      this.nextDiagram(this.activeLevel);\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n\n    const referenzautomat = game[this.activeLevel].solution;\n    for (let i = 0; i  this.highestLevel){\n      localStorage.setItem('highestLevel', this.activeLevel.toString());\n      this.highestLevel = this.activeLevel;\n      this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n    }\n    this.nextDiagram(this.activeLevel, );\n\n  }\n\n  resetGame() {\n\n    if (confirm('Bist du dir sicher das du alle Leveln und deine Stand zurücksetzen möchtest?')) {\n      localStorage.setItem('activeLevel', \"0\");\n      this.activeLevel = 0;\n  \n      localStorage.setItem('highestLevel',\"0\");\n      this.highestLevel = 0;\n  \n     localStorage.setItem('score', \"0\");\n     this.score = 0;\n    } else {\n      \n    }\n\n\n  }\n}\n\nexport interface DialogData {\n  winState: boolean;\n  onNext: () => void;\n  word: {\n    word: string;\n    vergleich:{\n      yourGraph: boolean;\n      referenzGraph: boolean;\n    }  ,index?: number;\n\n\n  };\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n})\nexport class DialogDataExampleDialog {\n  constructor(  public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onNwxtLevelChanged(): void {\n    this.data.onNext();\n    this.dialogRef.close();\n\n  }\n\n\n\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogDataExampleDialog.html":{"url":"components/DialogDataExampleDialog.html","title":"component - DialogDataExampleDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogDataExampleDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/puzzle-game/puzzle-game.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dialog-data-example-dialog\n            \n\n\n\n\n            \n                templateUrl\n                dialog-data-example-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                            \n                                onNwxtLevelChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:449\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:453\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNwxtLevelChanged\n                        \n                    \n                \n            \n            \n                \nonNwxtLevelChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:457\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:451\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:450\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport * as go from 'gojs';\nimport { initRing } from \"./shapes/shape\";\nimport { DataSyncService, DiagramComponent } from \"gojs-angular\";\nimport produce from \"immer\";\nimport { game } from \"./level\";\nimport { DeaArray, WordGenerator } from './word-generator';\nimport { WordChecker } from './word-checker';\nimport { Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n\nclass DemoForceDirectedLayout extends go.ForceDirectedLayout {\n  // Override the makeNetwork method to also initialize\n  // ForceDirectedVertex.isFixed from the corresponding Node.isSelected.\n  override makeNetwork(coll) {\n    // call base method for standard behavior\n    const net = super.makeNetwork(coll);\n    net.vertexes.each(vertex => {\n      const node = vertex.node;\n      if (node !== null) (vertex as any).isFixed = node.isSelected;\n    });\n    return net;\n  }\n}\n\n\n@Component({\n  selector: 'app-puzzle-game',\n  templateUrl: './puzzle-game.component.html',\n  styleUrls: ['./puzzle-game.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PuzzleGameComponent implements OnChanges {\n  public diagramDivClassName: string = 'gojs-wrapper';\n  public paletteDivClassName = 'gojs-palette';\n  public game = game;\n  public activeLevel = parseInt(localStorage.getItem('activeLevel')!)  || 0; \n  public highestLevel = parseInt(localStorage.getItem('highestLevel')!) || 0;\n  public score = parseInt(localStorage.getItem('score')!) || 0;\n\n  public task = game[this.activeLevel].task;\n  public observedDiagram: any = null;\n\n\n  public state: any = {\n    diagramNodeData: game[0].nodes,\n    diagramLinkData: game[0].links,\n    diagramModelData: { prop: 'value' },\n    skipsDiagramUpdate: false,\n    paletteNodeData: []\n  };\n\n  @ViewChild('myDiagram', { static: true }) public myDiagramComponent: DiagramComponent | undefined;\n\n  constructor(private cdr: ChangeDetectorRef, public dialog: MatDialog) { }\n\n  \n  openDialog(check, word) {\n    const dialogRef = this.dialog.open(DialogDataExampleDialog, {\n      width: '250px',\n      position:  {\n        bottom: \"200px\",\n        right: \"100\"\n       },\n      data: {\n        winState: check,\n        onNext : this.loadNextLevel.bind(this),\n        word,\n      },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      //this.animal = result;\n    });\n  }\n\n  public ngOnChanges() {\n    // whenever showGrid changes, update the diagram.grid.visible in the child DiagramComponent\n    if (this.myDiagramComponent && this.myDiagramComponent.diagram instanceof go.Diagram) {\n      //console.log(this.myDiagramComponent.diagram)\n    }\n  }\n\n  \n  public ngAfterViewInit() {\n    if (this.observedDiagram) return;\n    this.observedDiagram = this.myDiagramComponent?.diagram;\n    this.cdr.detectChanges(); // IMPORTANT: without this, Angular will throw ExpressionChangedAfterItHasBeenCheckedError (dev mode only)\n\n    const appComp: any = this;\n    // listener for inspector\n    this.myDiagramComponent?.diagram.addDiagramListener('ChangedSelection', function (e) {\n      if (e.diagram.selection.count === 0) {\n        appComp.selectedNodeData = null;\n      }\n      const node = e.diagram.selection.first();\n      appComp.state = produce(appComp.state, draft => {\n        if (node instanceof go.Node) {\n          var idx = draft.diagramNodeData.findIndex(nd => nd.id == node.data.id);\n          var nd = draft.diagramNodeData[idx];\n          draft.selectedNodeData = nd;\n        } else {\n          draft.selectedNodeData = null;\n        }\n      });\n    });\n  } // end ngAfterViewInit\n\n  public initDiagram(): go.Diagram {\n    const $ = go.GraphObject.make;\n    const diagram = $(go.Diagram, {\n      'undoManager.isEnabled': true,\n      \"linkingTool.isUnconnectedLinkValid\": true,\n      \"draggingTool.dragsLink\": true,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"relinkingTool.isUnconnectedLinkValid\": true,\n      \"relinkingTool.portGravity\": 20,\n      layout: new DemoForceDirectedLayout(),\n      model: new go.GraphLinksModel({\n        linkFromPortIdProperty: \"fromPort\",\n        linkToPortIdProperty: \"toPort\",\n        nodeKeyProperty: 'id',\n        linkKeyProperty: 'key'\n      })\n    });\n\n\n\n    // define the Node template\n    diagram.nodeTemplate = $(go.Node, \"Auto\", { zOrder: -5 }, new go.Binding(\"layerName\", \"Background\"), $(go.Shape, \"Circle\", { fill: \"lightgray\" }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.Panel, \"Table\", $(go.RowColumnDefinition, {\n      column: 0, alignment: go.Spot.Left\n    }), $(go.TextBlock, {\n      column: 0,\n      row: 0,\n      columnSpan: 3,\n      editable: true,\n      alignment: go.Spot.Center,\n      font: \"bold 10pt sans-serif\",\n      margin: new go.Margin(4, 2)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()), $(go.Panel, \"Horizontal\", { column: 1, row: 1 }, $(go.Shape, {\n      width: 6,\n      height: 6,\n      portId: \"A\",\n      toLinkable: true,\n      fromLinkable: true,\n      cursor: 'pointer',\n      fromLinkableDuplicates: true,\n      toLinkableDuplicates: true,\n      fromLinkableSelfNode: true,\n      toLinkableSelfNode: true\n    }))));\n\n    diagram.linkTemplate = $(go.Link, { zOrder: 50 }, new go.Binding(\"layerName\", \"Foreground\"), new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 10,\n          background: 'white',\n          editable: true,\n          width: 30,\n          height: 30,\n          alignment: go.Spot.Center,\n          verticalAlignment: go.Spot.Center,\n          textAlign: 'center'\n        }, new go.Binding(\"text\", \"text\").makeTwoWay()));\n\n    return diagram;\n  }\n\n  public diagramModelChange = (changes: go.IncrementalData) => {\n    if (!changes) return;\n    const appComp = this;\n    this.state = produce(this.state, draft => {\n      // set skipsDiagramUpdate: true since GoJS already has this update\n      // this way, we don't log an unneeded transaction in the Diagram's undoManager history\n      draft.skipsDiagramUpdate = true;\n      draft.diagramNodeData = DataSyncService.syncNodeData(changes, draft.diagramNodeData, appComp.observedDiagram.model);\n      draft.diagramLinkData = DataSyncService.syncLinkData(changes, draft.diagramLinkData, appComp.observedDiagram.model);\n      draft.diagramModelData = DataSyncService.syncModelData(changes, draft.diagramModelData);\n      // If one of the modified nodes was the selected node used by the inspector, update the inspector selectedNodeData object\n      const modifiedNodeDatas = changes.modifiedNodeData;\n      if (modifiedNodeDatas && draft.selectedNodeData) {\n        for (let i = 0; i  {\n           draft.skipsDiagramUpdate = true;\n           draft.diagramNodeData = nodes;\n           draft.diagramLinkData = links;\n         }); */\n  };\n\n  public initPalette(): go.Palette {\n    const $ = go.GraphObject.make;\n    const palette = $(go.Palette);\n    initRing();\n\n    palette.padding = new go.Margin(100, 0, 0, 0);\n\n    // define the Node template\n    palette.nodeTemplate = $(go.Node, \"Horizontal\", {\n      height: 120, width: 80, selectionAdorned: false, cursor: 'grab'\n    }, $(go.Shape, \"Circle\", {\n      width: 30, height: 30\n    }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.TextBlock, {\n      margin: 2, font: \"bold 16px sans-serif\"\n    }, new go.Binding(\"text\", \"internal\")), $(go.TextBlock, { margin: 2, font: \" 11px sans-serif\" }, new go.Binding(\"text\", \"key\")),);\n\n    palette.linkTemplate = $(go.Link, \n      {\n      height: 120, selectionAdornmentTemplate: $(go.Adornment, \"Link\", $(go.Shape, {\n        isPanelMain: true, fill: null, stroke: \"deepskyblue\", strokeWidth: 0\n      }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }))\n    },\n     {\n      routing: go.Link.AvoidsNodes, curve: go.Link.JumpOver, corner: 5, toShortLength: 4\n    }, new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 4, background: 'white'\n        }, new go.Binding(\"text\", \"key\"))),\n\n      palette.model = new go.GraphLinksModel([  // specify the contents of the Palette\n        { key: \"Ende\", color: \"white\", internal: \"\", stroke: \"black\", figure: 'Ring' }, \n        {key: \"Knoten\", color: \"white\", internal: \"\", stroke: \"black\"},\n      ], [// the Palette also has a disconnected Link, which the user can drag-and-drop\n        { key: 'Start', points: new go.List().addAll([new go.Point(10, 0), new go.Point(70, 0)]) },\n\n      ]);\n\n    return palette;\n  }\n\n  public reinitModel() {\n\n    let text = \"Bist du dir sicher?!\\nOK or Cancel.\";\n    if (confirm(text) == true) {\n      text = \"You pressed OK!\";\n      if (this.myDiagramComponent) {\n        this.loadDiagram(this.activeLevel);\n      }\n    } else {\n      text = \"You canceled!\";\n    }\n  }\n\n\n  nextDiagram(value: number) {\n    if (this.myDiagramComponent) {\n      localStorage.setItem('activeLevel', value.toString());\n      this.activeLevel = value;\n      this.task = game[value].task\n      this.myDiagramComponent.clear();\n      this.state = produce(this.state, draft => {\n        draft.skipsDiagramUpdate = false;\n        draft.diagramNodeData = game[value].nodes;\n        draft.diagramLinkData = game[value].links as any;\n      });\n    }\n  }\n\n  loadDiagram(value: number) {\n    if(value  {\n          draft.skipsDiagramUpdate = false;\n          draft.diagramNodeData = game[value].nodes;\n          draft.diagramLinkData = game[value].links as any;\n        });\n      }\n    }\n\n  }\n\n  validateDiagram() {\n    const wordGenerator = new WordGenerator();\n    /*const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }*/\n    //console.log(wordGenerator.generateWords(deaObject));\n\n    //console.log(wordGenerator.generateRandomWords([\"1\", \"0\"]));\n\n    //console.log(\"validate data\", this.state);\n  }\n  checkDea() {\n  \n\n    if (this.activeLevel === 0) {\n      this.openDialog(true, \"\");\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n     if(!deaObject.links.find(link => link.key === \"Start\")){\n            alert(\"Bitte füge ein StartLink hinzu\");\n            return;\n       } \n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n    const referenzautomat = game[this.activeLevel].solution;\n\n\n    let isCorrect = true;\n    let word;\n    \n    for (let i = 0; i  this.highestLevel){\n        localStorage.setItem('highestLevel', this.activeLevel.toString());\n        this.highestLevel = this.activeLevel;\n        this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n      }\n      this.nextDiagram(this.activeLevel);\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n\n    const referenzautomat = game[this.activeLevel].solution;\n    for (let i = 0; i  this.highestLevel){\n      localStorage.setItem('highestLevel', this.activeLevel.toString());\n      this.highestLevel = this.activeLevel;\n      this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n    }\n    this.nextDiagram(this.activeLevel, );\n\n  }\n\n  resetGame() {\n\n    if (confirm('Bist du dir sicher das du alle Leveln und deine Stand zurücksetzen möchtest?')) {\n      localStorage.setItem('activeLevel', \"0\");\n      this.activeLevel = 0;\n  \n      localStorage.setItem('highestLevel',\"0\");\n      this.highestLevel = 0;\n  \n     localStorage.setItem('score', \"0\");\n     this.score = 0;\n    } else {\n      \n    }\n\n\n  }\n}\n\nexport interface DialogData {\n  winState: boolean;\n  onNext: () => void;\n  word: {\n    word: string;\n    vergleich:{\n      yourGraph: boolean;\n      referenzGraph: boolean;\n    }  ,index?: number;\n\n\n  };\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n})\nexport class DialogDataExampleDialog {\n  constructor(  public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onNwxtLevelChanged(): void {\n    this.data.onNext();\n    this.dialogRef.close();\n\n  }\n\n\n\n}\n\n\n\n\n    \n\n    \n        Das Ergebnis ist {{data.winState ? 'richtig' : 'falsch'}}\n\n    \n         Das Wort: {{data.word.word}} wird nicht von der Sprache erkannt\n        Dein Graph liefert {{data.word.vergleich.yourGraph}} -->\n        der Referenzgraph liefert {{data.word.vergleich.referenzGraph}} -->\n        Der Fehler ist an der Stelle {{data.word.index! + 1}} im Wort \n    \n\n\n\n    Ok\n\n    nextLevel\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Das Ergebnis ist {{data.winState ? \\'richtig\\' : \\'falsch\\'}}             Das Wort: {{data.word.word}} wird nicht von der Sprache erkannt        Dein Graph liefert {{data.word.vergleich.yourGraph}} -->        der Referenzgraph liefert {{data.word.vergleich.referenzGraph}} -->        Der Fehler ist an der Stelle {{data.word.index! + 1}} im Wort         Ok    nextLevel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogDataExampleDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExampleComponent.html":{"url":"components/ExampleComponent.html","title":"component - ExampleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExampleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/example/example.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-example\n            \n\n            \n                styleUrls\n                ./example.component.css\n            \n\n\n\n            \n                templateUrl\n                ./example.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/example/example.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example/example.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './example.component.html',\n  styleUrls: ['./example.component.css']\n})\nexport class ExampleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        example works!\n\n    \n\n    \n                \n                    ./example.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'example works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExampleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpressionGrammarModel.html":{"url":"classes/ExpressionGrammarModel.html","title":"class - ExpressionGrammarModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpressionGrammarModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/grammar.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            GrammarModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _expression\n                            \n                            \n                                    Private\n                                    Readonly\n                                _rule\n                            \n                            \n                                    Private\n                                _ruleSet\n                            \n                            \n                                    Private\n                                _valid\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getCorrectExpression\n                            \n                            \n                                    Private\n                                _getWrongExpression\n                            \n                            \n                                    Private\n                                _hasElementOfKind\n                            \n                            \n                                    Private\n                                _hasNonTerminalChar\n                            \n                            \n                                    Private\n                                _hasTerminalChar\n                            \n                            \n                                    Private\n                                    Static\n                                _isNegNumber\n                            \n                            \n                                    Private\n                                _setRuleSet\n                            \n                            \n                                    Public\n                                generateCorrectExpression\n                            \n                            \n                                    Public\n                                generateWrongExpression\n                            \n                            \n                                    Public\n                                isExpressionValid\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Expression\n                                \n                                \n                                    Rule\n                                \n                                \n                                    Valid\n                                \n                                \n                                    ruleSet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(exp: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/grammar/grammar.model.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _expression\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _rule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FourTuple\n\n                    \n                \n                \n                    \n                        Default value : {\n    V: [],\n    SIG: [],\n    R: {\n      A: [],\n      O: [],\n      Z: [],\n    },\n    start: '',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _ruleSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuleSetInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _valid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null | string | number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:47\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _getCorrectExpression\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getCorrectExpression()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _getWrongExpression\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getWrongExpression()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _hasElementOfKind\n                        \n                    \n                \n            \n            \n                \n                    \n                    _hasElementOfKind(exp: string, kind: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    kind\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _hasNonTerminalChar\n                        \n                    \n                \n            \n            \n                \n                    \n                    _hasNonTerminalChar(exp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _hasTerminalChar\n                        \n                    \n                \n            \n            \n                \n                    \n                    _hasTerminalChar(exp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        _isNegNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    _isNegNumber(exp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _setRuleSet\n                        \n                    \n                \n            \n            \n                \n                    \n                    _setRuleSet(oldExp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    oldExp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateCorrectExpression\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCorrectExpression()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:276\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateWrongExpression\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateWrongExpression()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isExpressionValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    isExpressionValid(exp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.model.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Expression\n                    \n                \n\n                \n                    \n                        getExpression()\n                    \n                \n                            \n                                \n                                    Defined in src/app/grammar/grammar.model.ts:63\n                                \n                            \n\n                \n                    \n                        setExpression(exp: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/grammar/grammar.model.ts:168\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            exp\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        Rule\n                    \n                \n\n                \n                    \n                        getRule()\n                    \n                \n                            \n                                \n                                    Defined in src/app/grammar/grammar.model.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Valid\n                    \n                \n\n                \n                    \n                        getValid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/grammar/grammar.model.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ruleSet\n                    \n                \n\n                \n                    \n                        getruleSet()\n                    \n                \n                            \n                                \n                                    Defined in src/app/grammar/grammar.model.ts:164\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export interface FourTuple {\n  V: string[];\n  SIG: string[];\n  R: {\n    A: string[];\n    O: string[];\n    Z: string[];\n  };\n  start: string;\n}\n\nexport class RuleSetInterface {\n  expIndex: number | null;\n  rule: string;\n  prevExp: string;\n  afterExp: string;\n\n  constructor(props?: RuleSetInterface) {\n    this.expIndex = props?.expIndex || 0;\n    this.rule = props?.rule || '';\n    this.prevExp = props?.prevExp || '';\n    this.afterExp = props?.afterExp || '';\n  }\n}\n\nexport interface GrammarModel {\n  Expression: string;\n  Valid: boolean;\n  Rule: FourTuple;\n  ruleSet: RuleSetInterface[];\n}\n\nexport class ExpressionGrammarModel implements GrammarModel {\n  private _expression: string = '';\n  private _valid: boolean = false;\n  private readonly _rule: FourTuple = {\n    V: [],\n    SIG: [],\n    R: {\n      A: [],\n      O: [],\n      Z: [],\n    },\n    start: '',\n  };\n  private _ruleSet: RuleSetInterface[] = [];\n  public value: null | string | number = null;\n\n  constructor(exp: string) {\n    this.Expression = exp;\n    this._rule = {\n      V: ['A', 'O', 'Z'],\n      SIG: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '*', '-', '/', '(', ')'],\n      R: {\n        A: ['A O A', '( A )', 'Z'],\n        O: ['+', '*', '-', '/'],\n        Z: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n      },\n      start: 'A',\n    };\n  }\n\n  get Expression(): string {\n    return this._expression;\n  }\n\n  get Rule(): FourTuple {\n    return this._rule;\n  }\n\n  get Valid(): boolean {\n    return this._valid;\n  }\n\n  private _setRuleSet(oldExp: string) {\n    let exp1 = oldExp.slice();\n    let exp2 = exp1.replace(/ /g, '');\n    let exp = exp2.split('').join(' ');\n    let rules = [];\n    let hasChanged = true;\n    const { O, Z } = this._rule.R;\n\n    let j = 0;\n    while (exp.length > 0 && j  -1) {\n        const m = exp.indexOf('A O A');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('A O A');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → A O A`;\n\n        rules.push(rule1);\n      }\n\n      if (exp.indexOf('( A )') > -1) {\n        const m = exp.indexOf('( A )');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('( A )');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → ( A )`;\n\n        rules.push(rule1);\n      }\n      j++;\n\n      if (startExp === exp) {\n        hasChanged = false;\n      }\n    }\n\n    if (this.isExpressionValid(oldExp) && this.isExpressionValid(oldExp) !== 0) {\n      this._ruleSet = rules.reverse();\n    } else {\n      this._ruleSet = rules.map((rule: RuleSetInterface) => ({\n        prevExp: rule.afterExp,\n        afterExp: rule.prevExp,\n        expIndex: rule.expIndex,\n        rule: rule.rule.split('').reverse().join('').replace(') A (', '( A )'),\n      }));\n    }\n  }\n\n  get ruleSet() {\n    return this._ruleSet;\n  }\n\n  set Expression(exp: string) {\n    this._expression = exp;\n\n    try {\n      this.value = this.isExpressionValid(exp);\n      this._setRuleSet(exp);\n    } catch {\n      this._setRuleSet(exp);\n      this.value = null;\n      this._expression = exp;\n    }\n  }\n\n  private static _isNegNumber(exp: string): boolean {\n    if (exp.indexOf('-') === 0) {\n      return true;\n    }\n    return !!exp.match(/\\(\\s*-\\s*/gm);\n  }\n\n  public isExpressionValid(exp: string): number {\n    let result;\n\n    const matchDoubleD = exp.match(/[0-9]\\s*[0-9]/gm);\n\n    if (matchDoubleD || ExpressionGrammarModel._isNegNumber(exp)) {\n      this._valid = false;\n    } else {\n      try {\n        result = eval(exp);\n        this.value = Number.parseFloat(result);\n        this._valid = true;\n      } catch {\n        this._valid = false;\n      }\n    }\n\n    return result;\n  }\n\n  private _hasNonTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.V.indexOf(r) >= 0);\n  }\n\n  private _hasTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.SIG.indexOf(r) >= 0);\n  }\n\n  private _hasElementOfKind(exp: string, kind: string[]) {\n    return [...exp].some((r) => kind.indexOf(r) >= 0);\n  }\n\n  private _getCorrectExpression(): string {\n    let exp = this._rule.start;\n\n    while (this._hasNonTerminalChar(exp)) {\n      if (exp.includes('A')) {\n        let r =\n          Math.random() * (500 / exp.length) > 5\n            ? Math.round(Math.random() * (this._rule.R.A.length - 1))\n            : this._rule.R.A.length - 1;\n        let t = this._rule.R.A[r];\n        exp = exp.replace('A', t);\n      }\n\n      if (exp.includes('O')) {\n        let r = Math.round(Math.random() * (this._rule.R.O.length - 1));\n        let t = this._rule.R.O[r];\n        exp = exp.replace('O', t);\n      }\n\n      if (exp.includes('Z')) {\n        let r = Math.round(Math.random() * (this._rule.R.Z.length - 1));\n        let t = this._rule.R.Z[r];\n        exp = exp.replace('Z', t);\n      }\n    }\n\n    return exp;\n  }\n\n  private _getWrongExpression(): string {\n    let correctExp = Array.from(this._getCorrectExpression().replace(/ /g, ''));\n    let indexOfExp = Math.round(Math.random() * (correctExp.length - 1));\n\n    if (this._rule.R.Z.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    } else if (this._rule.R.O.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      }\n    } else if (['(', ')'].includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    }\n\n    return correctExp.join(' ');\n  }\n\n  public generateCorrectExpression(): void {\n    const exp = this._getCorrectExpression();\n    this.Expression = exp;\n  }\n\n  public generateWrongExpression(): void {\n    const exp = this._getWrongExpression();\n    this.Expression = exp;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  DEA by Najima Jaadari \n  \n    \n\n    \n                \n                    ./footer.component.css\n                \n                footer{\n    height: 100px;\n    text-align: center;\n    padding:12px  0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  DEA by Najima Jaadari   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FourTuple.html":{"url":"interfaces/FourTuple.html","title":"interface - FourTuple","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FourTuple\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/grammar.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            R\n                                        \n                                \n                                \n                                        \n                                            SIG\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            V\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        R\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        R:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SIG\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SIG:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        V\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        V:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FourTuple {\n  V: string[];\n  SIG: string[];\n  R: {\n    A: string[];\n    O: string[];\n    Z: string[];\n  };\n  start: string;\n}\n\nexport class RuleSetInterface {\n  expIndex: number | null;\n  rule: string;\n  prevExp: string;\n  afterExp: string;\n\n  constructor(props?: RuleSetInterface) {\n    this.expIndex = props?.expIndex || 0;\n    this.rule = props?.rule || '';\n    this.prevExp = props?.prevExp || '';\n    this.afterExp = props?.afterExp || '';\n  }\n}\n\nexport interface GrammarModel {\n  Expression: string;\n  Valid: boolean;\n  Rule: FourTuple;\n  ruleSet: RuleSetInterface[];\n}\n\nexport class ExpressionGrammarModel implements GrammarModel {\n  private _expression: string = '';\n  private _valid: boolean = false;\n  private readonly _rule: FourTuple = {\n    V: [],\n    SIG: [],\n    R: {\n      A: [],\n      O: [],\n      Z: [],\n    },\n    start: '',\n  };\n  private _ruleSet: RuleSetInterface[] = [];\n  public value: null | string | number = null;\n\n  constructor(exp: string) {\n    this.Expression = exp;\n    this._rule = {\n      V: ['A', 'O', 'Z'],\n      SIG: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '*', '-', '/', '(', ')'],\n      R: {\n        A: ['A O A', '( A )', 'Z'],\n        O: ['+', '*', '-', '/'],\n        Z: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n      },\n      start: 'A',\n    };\n  }\n\n  get Expression(): string {\n    return this._expression;\n  }\n\n  get Rule(): FourTuple {\n    return this._rule;\n  }\n\n  get Valid(): boolean {\n    return this._valid;\n  }\n\n  private _setRuleSet(oldExp: string) {\n    let exp1 = oldExp.slice();\n    let exp2 = exp1.replace(/ /g, '');\n    let exp = exp2.split('').join(' ');\n    let rules = [];\n    let hasChanged = true;\n    const { O, Z } = this._rule.R;\n\n    let j = 0;\n    while (exp.length > 0 && j  -1) {\n        const m = exp.indexOf('A O A');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('A O A');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → A O A`;\n\n        rules.push(rule1);\n      }\n\n      if (exp.indexOf('( A )') > -1) {\n        const m = exp.indexOf('( A )');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('( A )');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → ( A )`;\n\n        rules.push(rule1);\n      }\n      j++;\n\n      if (startExp === exp) {\n        hasChanged = false;\n      }\n    }\n\n    if (this.isExpressionValid(oldExp) && this.isExpressionValid(oldExp) !== 0) {\n      this._ruleSet = rules.reverse();\n    } else {\n      this._ruleSet = rules.map((rule: RuleSetInterface) => ({\n        prevExp: rule.afterExp,\n        afterExp: rule.prevExp,\n        expIndex: rule.expIndex,\n        rule: rule.rule.split('').reverse().join('').replace(') A (', '( A )'),\n      }));\n    }\n  }\n\n  get ruleSet() {\n    return this._ruleSet;\n  }\n\n  set Expression(exp: string) {\n    this._expression = exp;\n\n    try {\n      this.value = this.isExpressionValid(exp);\n      this._setRuleSet(exp);\n    } catch {\n      this._setRuleSet(exp);\n      this.value = null;\n      this._expression = exp;\n    }\n  }\n\n  private static _isNegNumber(exp: string): boolean {\n    if (exp.indexOf('-') === 0) {\n      return true;\n    }\n    return !!exp.match(/\\(\\s*-\\s*/gm);\n  }\n\n  public isExpressionValid(exp: string): number {\n    let result;\n\n    const matchDoubleD = exp.match(/[0-9]\\s*[0-9]/gm);\n\n    if (matchDoubleD || ExpressionGrammarModel._isNegNumber(exp)) {\n      this._valid = false;\n    } else {\n      try {\n        result = eval(exp);\n        this.value = Number.parseFloat(result);\n        this._valid = true;\n      } catch {\n        this._valid = false;\n      }\n    }\n\n    return result;\n  }\n\n  private _hasNonTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.V.indexOf(r) >= 0);\n  }\n\n  private _hasTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.SIG.indexOf(r) >= 0);\n  }\n\n  private _hasElementOfKind(exp: string, kind: string[]) {\n    return [...exp].some((r) => kind.indexOf(r) >= 0);\n  }\n\n  private _getCorrectExpression(): string {\n    let exp = this._rule.start;\n\n    while (this._hasNonTerminalChar(exp)) {\n      if (exp.includes('A')) {\n        let r =\n          Math.random() * (500 / exp.length) > 5\n            ? Math.round(Math.random() * (this._rule.R.A.length - 1))\n            : this._rule.R.A.length - 1;\n        let t = this._rule.R.A[r];\n        exp = exp.replace('A', t);\n      }\n\n      if (exp.includes('O')) {\n        let r = Math.round(Math.random() * (this._rule.R.O.length - 1));\n        let t = this._rule.R.O[r];\n        exp = exp.replace('O', t);\n      }\n\n      if (exp.includes('Z')) {\n        let r = Math.round(Math.random() * (this._rule.R.Z.length - 1));\n        let t = this._rule.R.Z[r];\n        exp = exp.replace('Z', t);\n      }\n    }\n\n    return exp;\n  }\n\n  private _getWrongExpression(): string {\n    let correctExp = Array.from(this._getCorrectExpression().replace(/ /g, ''));\n    let indexOfExp = Math.round(Math.random() * (correctExp.length - 1));\n\n    if (this._rule.R.Z.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    } else if (this._rule.R.O.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      }\n    } else if (['(', ')'].includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    }\n\n    return correctExp.join(' ');\n  }\n\n  public generateCorrectExpression(): void {\n    const exp = this._getCorrectExpression();\n    this.Expression = exp;\n  }\n\n  public generateWrongExpression(): void {\n    const exp = this._getWrongExpression();\n    this.Expression = exp;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GrammarComponent.html":{"url":"components/GrammarComponent.html","title":"component - GrammarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GrammarComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/grammar/grammar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-grammar\n            \n\n            \n                styleUrls\n                ./grammar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./grammar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                cyConfig\n                            \n                            \n                                expressionGrammar\n                            \n                            \n                                listElement\n                            \n                            \n                                mode\n                            \n                            \n                                modes\n                            \n                            \n                                rules\n                            \n                            \n                                speed\n                            \n                            \n                                SPEED\n                            \n                            \n                                state\n                            \n                            \n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateExpression\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                ngOnSpeedChange\n                            \n                            \n                                onBegin\n                            \n                            \n                                onEnd\n                            \n                            \n                                onManualExpressionChange\n                            \n                            \n                                onNext\n                            \n                            \n                                onPause\n                            \n                            \n                                onPlay\n                            \n                            \n                                onPrevious\n                            \n                            \n                                onReset\n                            \n                            \n                                onStop\n                            \n                            \n                                startTour\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(grammarGraphService: GrammarGraphService, grammerService: GrammarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/grammar/grammar.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        grammarGraphService\n                                                  \n                                                        \n                                                                        GrammarGraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grammerService\n                                                  \n                                                        \n                                                                        GrammarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateExpression\n                        \n                    \n                \n            \n            \n                \ngenerateExpression(isCorrect)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    isCorrect\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnSpeedChange\n                        \n                    \n                \n            \n            \n                \nngOnSpeedChange(v: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBegin\n                        \n                    \n                \n            \n            \n                \nonBegin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEnd\n                        \n                    \n                \n            \n            \n                \nonEnd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onManualExpressionChange\n                        \n                    \n                \n            \n            \n                \nonManualExpressionChange(exp: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNext\n                        \n                    \n                \n            \n            \n                \nonNext(shouldNotStop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    shouldNotStop\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPause\n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPlay\n                        \n                    \n                \n            \n            \n                \nonPlay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPrevious\n                        \n                    \n                \n            \n            \n                \nonPrevious()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStop\n                        \n                    \n                \n            \n            \n                \nonStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTour\n                        \n                    \n                \n            \n            \n                \nstartTour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Default value : codeSttring\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cyConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expressionGrammar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ExpressionGrammarModel('')\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('listElement')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 'Ableitung'\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ['Ableitung', 'Ableitungsbaum (falls Zeit bleibt)']\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuleSetInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPEED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SPEED\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'stop'\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n    \n        #Hello World\n\n    \n\n    \n        import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { codeSttring } from './utils/helpers';\nimport { ExpressionGrammarModel, RuleSetInterface } from './grammar.model';\nimport { grammarGraphConfig } from './cyto-graph/config';\nimport { SPEED } from '../app.config';\nimport { Observable } from 'rxjs';\nimport * as introJS from 'intro.js';\nimport { GrammarGraphService } from './cyto-graph/grammar-graph.service';\nimport { GrammarService } from './grammar.service';\nimport { grammarAnimation } from './grammar.animation';\nimport { GrammarIntroConfig } from './utils/introJS';\n\n@Component({\n  selector: 'app-grammar',\n  templateUrl: './grammar.component.html',\n  styleUrls: ['./grammar.component.scss'],\n  animations: grammarAnimation,\n})\nexport class GrammarComponent implements OnInit, AfterViewInit {\n  modes: any = ['Ableitung', 'Ableitungsbaum (falls Zeit bleibt)'];\n  mode: any = 'Ableitung';\n  code = codeSttring;\n  expressionGrammar = new ExpressionGrammarModel('');\n  cyConfig: any;\n  state: string = 'stop';\n  SPEED = SPEED;\n  speed = 2;\n  timer!: Observable;\n  rules: RuleSetInterface[] = [];\n\n  @ViewChild('listElement') listElement!: ElementRef;\n\n  constructor(private grammarGraphService: GrammarGraphService, private grammerService: GrammarService) {}\n\n  ngOnInit(): void {\n    this.grammerService.state.subscribe((v) => {\n      this.state = v;\n    });\n  }\n\n  ngAfterViewInit() {\n    this.grammerService.animatedRulesStream.subscribe((v) => {\n      this.rules = v;\n\n      if (this.listElement) {\n        const element = this.listElement.nativeElement;\n        const parent = element.parentNode;\n        const children = element.children;\n        parent.scrollTop = children[children.length - 1].offsetTop - 20;\n      }\n    });\n  }\n\n  ngOnSpeedChange(v: number) {\n    this.grammerService.speed.next(v);\n    this.speed = v;\n  }\n\n  generateExpression(isCorrect = true) {\n    if (isCorrect) {\n      this.expressionGrammar.generateCorrectExpression();\n      this.cyConfig = grammarGraphConfig;\n    } else {\n      this.expressionGrammar.generateWrongExpression();\n    }\n\n    this.grammerService.init(this.expressionGrammar.ruleSet);\n\n    this.onBegin();\n  }\n\n  startTour(): void {\n    const intro = introJS();\n    intro.setOptions(GrammarIntroConfig).start();\n  }\n\n  onNext(shouldNotStop = false): void {\n    this.grammerService.onNext();\n  }\n\n  onPrevious(): void {\n    this.grammerService.onPrevious();\n  }\n\n  onBegin(): void {\n    this.grammerService.onBegin();\n  }\n\n  onEnd(): void {\n    this.grammerService.onEnd();\n  }\n\n  onStop(): void {\n    this.grammerService.onReset();\n  }\n\n  onPlay(): void {\n    if (this.state === 'start') {\n      return;\n    }\n    this.grammerService.onPlay();\n  }\n\n  onReset(): void {\n    this.grammerService.onReset();\n  }\n\n  onPause(): void {\n    this.grammerService.onPause();\n  }\n\n  onManualExpressionChange(exp: string) {\n    this.grammerService.onReset();\n    this.expressionGrammar.Expression = exp;\n    this.grammerService.init(this.expressionGrammar.ruleSet);\n  }\n}\n\n    \n\n    \n        Grammatik (Mathematische Ausdrücke)\n\n  \n    Ausdruck erzeugen:\n    \n      repeat\n      Korrekt\n    \n    \n      repeat\n      Falsch\n    \n  \n  \n    Dokumentation\n    \n      Tour starten!\n    \n  \n\n\n  \n    \n      \n        \n          \n            Manuelle Eingabe des Ausdrucks\n            \n          \n        \n         0\" [ngClass]=\"{correct: expressionGrammar.value || expressionGrammar.value === 0 || expressionGrammar.value === 'infinity' }\" class=\"column is-5 auswertung\">\n          Auswertung:\n          {{(expressionGrammar.value || expressionGrammar.value === 0 || expressionGrammar.value === 'infinity') ? 'check' : 'warning'}} ( = {{(expressionGrammar.value || expressionGrammar.value ===0 || expressionGrammar.value === 'infinity') ? expressionGrammar.value : 'Falsch' }})\n        \n      \n      \n        \n          Animationsmodus:\n          \n            \n              {{sMode}}\n            \n          \n        \n      \n    \n    \n      \n        Grammatik:\n        \n      \n    \n  \n   0}\">\n     0)\" class=\"columns\">\n      \n        Reverser Modus:\n      \n    \n     0\" class=\"columns\">\n      R: {{ rules.length === 0 ? 'Start' : rules[rules.length -1].rule }} ({{ rules.length }}) \n      {{ rules.length === 0 ? expressionGrammar.Valid ? 'A' : expressionGrammar.Expression : rules[rules.length -1].prevExp}}\n    \n    \n      \n        info\n        Noch keine Ausdruck erzeugt. Bitte zuerst ein Ausdruck automatisch generieren (\n    \n      \n        add\n      Korrekt,\n      \n      \n        add\n      Falsch) oder eine manuelle Eingabe tätigen.\n      \n    \n     0 && mode === 'Ableitung'\" class=\"ableitungsliste\">\n      \n          Start\n          Regel\n          Resultat\n        \n           {{ expressionGrammar.value || expressionGrammar.value === 0 || expressionGrammar.value === 'infinity' ? 'A' : expressionGrammar.ruleSet.length === 0 ? 'Keine Regel anwendbar: \" ' +  expressionGrammar.Expression + ' \" kann nicht weiter reduziert werden' : 'Falscher Ausdruck! Reverse Herleitung animieren' }}\n          \n          \n        \n        \n          {{ exp.afterExp }}\n          : {{ exp.rule }}\n          ⇒ {{exp.prevExp }}\n        \n      \n    \n     0 && mode === 'Ableitungsbaum'\" class=\"ableitungsbaum\">\n      \n    \n  \n\n\n  \n    \n      \n        first_page\n        chevron_left\n        play_circle_filled\n        pause_circle_filled\n        chevron_right\n        last_page\n      \n      \n        speed\n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./grammar.component.scss\n                \n                .main-content {\n  height: 480px;\n}\n\n.left-bar {\n  background-color: blue;\n  height: 100%;\n  width: 20%;\n}\n\n.container {\n  border-left: 2px solid lightgray;\n}\n\n.example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.example-full-width {\n  width: 100%;\n}\n\ntable {\n  width: 100%;\n  text-align: center;\n}\n\ntd,\nth {\n  vertical-align: middle;\n}\n\ntr.mat-row {\n  height: 0px !important;\n}\n\ntr:nth-child(even) {\n  background-color: rgba(238, 240, 253, 0.84);\n}\n\n.headline {\n  margin-bottom: 5rem;\n}\n\n.slider-wrapper {\n  display: inline-flex;\n  align-items: center;\n  margin-left: 1rem;\n}\n\n.cy-wrapper {\n  display: none;\n  background: whitesmoke;\n  width: 700px;\n  height: 300px;\n  border: 1px solid black;\n}\n\n.overlay {\n  border: 1px solid #3f51b5;\n  position: absolute;\n  left: 2px;\n  top: 2px;\n  padding: 5px;\n}\n\n.action-button {\n  margin-left: 12px;\n}\n\n.green {\n  color: green;\n}\n\n.red {\n  color: red;\n}\n\ntr.active {\n  border: 2px dashed #ff4081;\n\n  &:last-child {\n    border: 3px dashed green;\n  }\n}\nth,\ntd {\n  padding: 0 !important;\n  width: 33%;\n}\n\nth:nth-child(2),\ntd:nth-child(2) {\n  border-right: 1px solid lightgray;\n}\n\ntr.active::after {\n  content: attr(data-after-content);\n  background-color: #ff4081;\n  margin-left: -16px;\n  margin-top: 0.3px;\n  width: 19px;\n  height: 19px;\n  position: absolute;\n  font-size: 12px;\n  color: white;\n}\n\ntr:last-child.active::after {\n  content: attr(data-after-content);\n  background-color: green;\n  margin-left: -16px;\n  margin-top: 0.3px;\n  width: 19px;\n  height: 19px;\n  position: absolute;\n  font-size: 12px;\n  color: white;\n}\n\n.error-box {\n  position: absolute;\n  bottom: -50px;\n  left: 0;\n  border: 1px solid red;\n  background-color: lightgoldenrodyellow;\n  padding: 7px;\n}\n\n.button-group {\n  display: flex;\n}\n\n.control-wrapper {\n  display: flex;\n  justify-content: center;\n}\n\n.button-icon {\n  transform: scale(0.8);\n}\n\n.success{\n  background-color: #00796B;\n  color: white;\n\n  &.basic {\n    background-color: white;\n    color: #00796B;\n  }\n}\n\n.auswertung {\n  display: inline-flex;\n  align-items: center;\n  color: red;\n}\n\n.ellipsis {\n  white-space: nowrap;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.mat-radio-button {\n  margin-left: 16px;\n}\n\ncode {\n  display: block;\n  white-space: pre-wrap;\n  font-size: 1rem;\n  color: #3f51b5;\n}\n\ncode.code-black {\n  color: black;\n}\n\n.e1 {\n  color: blue;\n}\n\n.no-exp-containter {\n  text-align: center;\n  color: rgba(128, 128, 128, 0.71);\n  display: flex;\n  align-items: center;\n  height: 100%;\n\n  .info-icon {\n    transform: scale(7);\n    margin-bottom: 100px;\n    color: rgba(251, 192, 45, 0.44);\n  }\n\n  h3 {\n    font-size: 26px;\n  }\n}\n\n.exp-int {\n  text-align: center;\n  background-color: rgba(211, 211, 211, 0.22);\n  display: flex;\n  justify-content: center;\n  font-size: 1.2rem;\n  padding: 5px;\n}\n.correct {\n  color: green;\n}\n\n.ableitungsliste {\n  overflow-y: scroll;\n  height: calc(100% - 100px);\n}\n\n.table-container {\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 0 3em 0;\n  padding: 0;\n}\n\n.table-container div:nth-last-child(-n+3) {\n  color: green;\n}\n\n.error .table-container div:nth-last-child(-n+3) {\n  color: red;\n}\n\n.table-container div:nth-child(-n+3) {\n  color: black;\n}\n\n.col {\n  box-sizing: border-box;\n  flex-grow: 1;\n  padding: 0.8em 1.2em;\n  overflow: hidden; // Or flex might break\n  width: 33.33%;\n}\n\n.col-w {\n  box-sizing: border-box;\n  flex-grow: 1;\n  padding: 0.8em 1.2em;\n  overflow: hidden; // Or flex might break\n  width: 106px;\n}\n\n.error-exp-help {\n  transform: translate(11px);\n  border: 2px solid red;\n  background-color: wheat;\n  padding: 8px;\n  max-width: 130px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Grammatik (Mathematische Ausdrücke)      Ausdruck erzeugen:          repeat      Korrekt              repeat      Falsch            Dokumentation          Tour starten!                                                Manuelle Eingabe des Ausdrucks                                       0\" [ngClass]=\"{correct: expressionGrammar.value || expressionGrammar.value === 0 || expressionGrammar.value === \\'infinity\\' }\" class=\"column is-5 auswertung\">          Auswertung:          {{(expressionGrammar.value || expressionGrammar.value === 0 || expressionGrammar.value === \\'infinity\\') ? \\'check\\' : \\'warning\\'}} ( = {{(expressionGrammar.value || expressionGrammar.value ===0 || expressionGrammar.value === \\'infinity\\') ? expressionGrammar.value : \\'Falsch\\' }})                                      Animationsmodus:                                    {{sMode}}                                                          Grammatik:                       0}\">     0)\" class=\"columns\">              Reverser Modus:               0\" class=\"columns\">      R: {{ rules.length === 0 ? \\'Start\\' : rules[rules.length -1].rule }} ({{ rules.length }})       {{ rules.length === 0 ? expressionGrammar.Valid ? \\'A\\' : expressionGrammar.Expression : rules[rules.length -1].prevExp}}                      info        Noch keine Ausdruck erzeugt. Bitte zuerst ein Ausdruck automatisch generieren (                  add      Korrekt,                    add      Falsch) oder eine manuelle Eingabe tätigen.               0 && mode === \\'Ableitung\\'\" class=\"ableitungsliste\">                Start          Regel          Resultat                   {{ expressionGrammar.value || expressionGrammar.value === 0 || expressionGrammar.value === \\'infinity\\' ? \\'A\\' : expressionGrammar.ruleSet.length === 0 ? \\'Keine Regel anwendbar: \" \\' +  expressionGrammar.Expression + \\' \" kann nicht weiter reduziert werden\\' : \\'Falscher Ausdruck! Reverse Herleitung animieren\\' }}                                              {{ exp.afterExp }}          : {{ exp.rule }}          ⇒ {{exp.prevExp }}                       0 && mode === \\'Ableitungsbaum\\'\" class=\"ableitungsbaum\">                                first_page        chevron_left        play_circle_filled        pause_circle_filled        chevron_right        last_page                    speed                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GrammarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GrammarGraphComponent.html":{"url":"components/GrammarGraphComponent.html","title":"component - GrammarGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GrammarGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/grammar/cyto-graph/grammar-graph.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cyto-graph\n            \n\n\n            \n                styles\n                 +  +  +  + \n            \n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseEnter\n                            \n                            \n                                mouseLeave\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                render\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cyConfig\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectNode\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, el: ElementRef, cytoService: GrammarGraphService)\n                    \n                \n                        \n                            \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cytoService\n                                                  \n                                                        \n                                                                        GrammarGraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cyConfig\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { min: 0.1, max: 1.5 }\n                    \n                \n                        \n                            \n                                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:32\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectNode\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:34\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        mouseenter\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseenter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:37\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseleave\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseleave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:42\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mouseEnter\n                        \n                    \n                \n            \n            \n                \nmouseEnter()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseenter', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseLeave\n                        \n                    \n                \n            \n            \n                \nmouseLeave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        render\n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport * as cytoscape from 'cytoscape';\nimport * as dagre from 'cytoscape-dagre';\nimport { disableScroll, enableScroll } from '../../../utils/helpers';\nimport { GrammarGraphService } from './grammar-graph.service';\n\n@Component({\n  selector: 'app-cyto-graph',\n  template: '',\n  styles: [\n    '#cy { height: calc(100% - 70px);\\n' +\n      '        width: 100%;\\n' +\n      '        position: absolute;\\n' +\n      '        left: 0;\\n' +\n      '        top: 0; }',\n  ],\n})\nexport class GrammarGraphComponent implements OnChanges {\n  cy!: any;\n  @Input() public cyConfig: any;\n  @Input() public zoom: { min: number; max: number } = { min: 0.1, max: 1.5 };\n\n  @Output() selectNode: EventEmitter = new EventEmitter();\n\n  @HostListener('mouseenter', ['$event'])\n  mouseEnter(): void {\n    disableScroll();\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  mouseLeave(): void {\n    enableScroll();\n  }\n\n  constructor(private renderer: Renderer2, private el: ElementRef, private cytoService: GrammarGraphService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.render();\n  }\n\n  public render(): void {\n    const cyContianer = this.renderer.selectRootElement('#cy');\n    cytoscape.use(dagre);\n\n    // @ts-ignore\n    this.cy = cytoscape({\n      container: cyContianer,\n      ...this.cyConfig,\n    });\n\n    this.cy.userZoomingEnabled(false);\n    this.cytoService.setInstance(this.cy);\n  }\n}\n\n    \n\n\n    \n             +  +  +  + \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GrammarGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GrammarGraphService.html":{"url":"injectables/GrammarGraphService.html","title":"injectable - GrammarGraphService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GrammarGraphService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/cyto-graph/grammar-graph.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cy\n                            \n                            \n                                errorSate\n                            \n                            \n                                lastNode\n                            \n                            \n                                previousElements\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animateStep\n                            \n                            \n                                    Public\n                                resetAnimation\n                            \n                            \n                                    Public\n                                setInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        animateStep\n                        \n                    \n                \n            \n            \n                \n                    \n                    animateStep(str: string, speed: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    speed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1000\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetAnimation\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAnimation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    setInstance(instance: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorSate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({ state: false, msg: '' })\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastNode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/cyto-graph/grammar-graph.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GrammarGraphService {\n  cy: any;\n  previousElements: any = [];\n  lastNode: any = null;\n  errorSate = new BehaviorSubject({ state: false, msg: '' });\n\n  constructor() {}\n\n  public setInstance(instance: any): void {\n    this.cy = instance;\n  }\n\n  public resetAnimation() {\n    for (const c of this.cy.edges().toArray()) {\n      const se = c.connectedNodes().toArray();\n      const node1 = se[0] && se[0];\n      const node2 = se[1] ? se[1] : se[0];\n\n      if (node1.id() !== 'start') {\n        node1.style({\n          lineColor: 'black',\n          color: 'black',\n          'border-width': '1px',\n          'border-color': 'black',\n        });\n      }\n      node2.style({\n        lineColor: 'black',\n        'border-width': '1px',\n        color: 'black',\n        'border-color': 'black',\n      });\n      c.style({\n        lineColor: '#ccc',\n        opacity: 1,\n        width: '3px',\n        color: 'black',\n        'border-color': 'black',\n      });\n    }\n\n    this.errorSate.next({ state: false, msg: '' });\n  }\n\n  public animateStep(str: string, speed = 1000): void {\n    speed = speed / 15;\n\n    if (str !== 'error') {\n      this.errorSate.next({ state: false, msg: '' });\n      for (const c of this.cy.edges().toArray()) {\n        const se = c.connectedNodes().toArray();\n        const node1 = se[0] && se[0];\n        const node2 = se[1] ? se[1] : se[0];\n\n        if (node1.id() + c.data('label') + node2.id() !== str) {\n          setTimeout(() => {\n            if (node1.id() !== 'start') {\n              node1.style({\n                lineColor: 'black',\n                color: 'black',\n                'border-width': '1px',\n                'border-color': 'black',\n              });\n            }\n            node2.style({\n              lineColor: 'black',\n              'border-width': '1px',\n              color: 'black',\n              'border-color': 'black',\n            });\n            c.style({\n              lineColor: '#ccc',\n              opacity: 1,\n              width: '3px',\n              color: 'black',\n              'border-color': 'black',\n            });\n          }, speed / 1.5);\n        }\n\n        setTimeout(() => {\n          if (node1.id() + c.data('label') + node2.id() === str) {\n            node1.animate({\n              style: {\n                lineColor: '#3f51b5',\n                color: '#3f51b5',\n                'border-color': '#3f51b5',\n              },\n            });\n            this.previousElements.push(node1);\n          }\n        }, speed / 3);\n\n        setTimeout(() => {\n          if (node1.id() + c.data('label') + node2.id() === str) {\n            c.animate({\n              style: {\n                lineColor: '#3f51b5',\n                width: '4px',\n                color: '#3f51b5',\n                'border-color': '#3f51b5',\n              },\n            });\n            this.previousElements.push(c);\n          }\n        }, (speed * 2) / 3);\n\n        setTimeout(() => {\n          if (node1.id() + c.data('label') + node2.id() === str) {\n            if (node2.id() === '8') {\n              node2.animate({\n                style: {\n                  lineColor: 'green',\n                  'border-width': '4px',\n                  color: 'green',\n                  'border-color': 'green',\n                },\n              });\n            } else {\n              this.lastNode = node2;\n              node2.animate({\n                style: {\n                  lineColor: '#ff4081',\n                  'border-width': '4px',\n                  color: '#ff4081',\n                  'border-color': '#ff4081',\n                },\n              });\n            }\n            this.previousElements.push(node2);\n          }\n        }, +speed);\n      }\n    } else {\n      const lastFEdges = this.lastNode.connectedEdges(`edge[source = \"${this.lastNode.id()}\"]`).toArray();\n      console.log(lastFEdges);\n\n      this.lastNode.animate({\n        style: {\n          lineColor: 'red',\n          'border-width': '5px',\n          color: 'red',\n          'border-color': 'red',\n        },\n      });\n\n      lastFEdges[0].style({\n        lineColor: 'green',\n        opacity: 0.2,\n        width: '3px',\n        color: 'black',\n        'border-color': 'black',\n      });\n\n      lastFEdges[1].style({\n        lineColor: 'green',\n        width: '3px',\n        opacity: 0.2,\n        color: 'black',\n        'border-color': 'black',\n      });\n\n      this.errorSate.next({\n        state: true,\n        msg: `Nur die Uebergaenge ${lastFEdges[0].data(\n          'label'\n        )} und ${lastFEdges[1].data('label')} sind definiert.`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GrammarModel.html":{"url":"interfaces/GrammarModel.html","title":"interface - GrammarModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GrammarModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/grammar.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Expression\n                                        \n                                \n                                \n                                        \n                                            Rule\n                                        \n                                \n                                \n                                        \n                                            ruleSet\n                                        \n                                \n                                \n                                        \n                                            Valid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Expression\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Expression:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rule\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Rule:         FourTuple\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FourTuple\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleSet:         RuleSetInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RuleSetInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Valid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Valid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FourTuple {\n  V: string[];\n  SIG: string[];\n  R: {\n    A: string[];\n    O: string[];\n    Z: string[];\n  };\n  start: string;\n}\n\nexport class RuleSetInterface {\n  expIndex: number | null;\n  rule: string;\n  prevExp: string;\n  afterExp: string;\n\n  constructor(props?: RuleSetInterface) {\n    this.expIndex = props?.expIndex || 0;\n    this.rule = props?.rule || '';\n    this.prevExp = props?.prevExp || '';\n    this.afterExp = props?.afterExp || '';\n  }\n}\n\nexport interface GrammarModel {\n  Expression: string;\n  Valid: boolean;\n  Rule: FourTuple;\n  ruleSet: RuleSetInterface[];\n}\n\nexport class ExpressionGrammarModel implements GrammarModel {\n  private _expression: string = '';\n  private _valid: boolean = false;\n  private readonly _rule: FourTuple = {\n    V: [],\n    SIG: [],\n    R: {\n      A: [],\n      O: [],\n      Z: [],\n    },\n    start: '',\n  };\n  private _ruleSet: RuleSetInterface[] = [];\n  public value: null | string | number = null;\n\n  constructor(exp: string) {\n    this.Expression = exp;\n    this._rule = {\n      V: ['A', 'O', 'Z'],\n      SIG: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '*', '-', '/', '(', ')'],\n      R: {\n        A: ['A O A', '( A )', 'Z'],\n        O: ['+', '*', '-', '/'],\n        Z: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n      },\n      start: 'A',\n    };\n  }\n\n  get Expression(): string {\n    return this._expression;\n  }\n\n  get Rule(): FourTuple {\n    return this._rule;\n  }\n\n  get Valid(): boolean {\n    return this._valid;\n  }\n\n  private _setRuleSet(oldExp: string) {\n    let exp1 = oldExp.slice();\n    let exp2 = exp1.replace(/ /g, '');\n    let exp = exp2.split('').join(' ');\n    let rules = [];\n    let hasChanged = true;\n    const { O, Z } = this._rule.R;\n\n    let j = 0;\n    while (exp.length > 0 && j  -1) {\n        const m = exp.indexOf('A O A');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('A O A');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → A O A`;\n\n        rules.push(rule1);\n      }\n\n      if (exp.indexOf('( A )') > -1) {\n        const m = exp.indexOf('( A )');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('( A )');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → ( A )`;\n\n        rules.push(rule1);\n      }\n      j++;\n\n      if (startExp === exp) {\n        hasChanged = false;\n      }\n    }\n\n    if (this.isExpressionValid(oldExp) && this.isExpressionValid(oldExp) !== 0) {\n      this._ruleSet = rules.reverse();\n    } else {\n      this._ruleSet = rules.map((rule: RuleSetInterface) => ({\n        prevExp: rule.afterExp,\n        afterExp: rule.prevExp,\n        expIndex: rule.expIndex,\n        rule: rule.rule.split('').reverse().join('').replace(') A (', '( A )'),\n      }));\n    }\n  }\n\n  get ruleSet() {\n    return this._ruleSet;\n  }\n\n  set Expression(exp: string) {\n    this._expression = exp;\n\n    try {\n      this.value = this.isExpressionValid(exp);\n      this._setRuleSet(exp);\n    } catch {\n      this._setRuleSet(exp);\n      this.value = null;\n      this._expression = exp;\n    }\n  }\n\n  private static _isNegNumber(exp: string): boolean {\n    if (exp.indexOf('-') === 0) {\n      return true;\n    }\n    return !!exp.match(/\\(\\s*-\\s*/gm);\n  }\n\n  public isExpressionValid(exp: string): number {\n    let result;\n\n    const matchDoubleD = exp.match(/[0-9]\\s*[0-9]/gm);\n\n    if (matchDoubleD || ExpressionGrammarModel._isNegNumber(exp)) {\n      this._valid = false;\n    } else {\n      try {\n        result = eval(exp);\n        this.value = Number.parseFloat(result);\n        this._valid = true;\n      } catch {\n        this._valid = false;\n      }\n    }\n\n    return result;\n  }\n\n  private _hasNonTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.V.indexOf(r) >= 0);\n  }\n\n  private _hasTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.SIG.indexOf(r) >= 0);\n  }\n\n  private _hasElementOfKind(exp: string, kind: string[]) {\n    return [...exp].some((r) => kind.indexOf(r) >= 0);\n  }\n\n  private _getCorrectExpression(): string {\n    let exp = this._rule.start;\n\n    while (this._hasNonTerminalChar(exp)) {\n      if (exp.includes('A')) {\n        let r =\n          Math.random() * (500 / exp.length) > 5\n            ? Math.round(Math.random() * (this._rule.R.A.length - 1))\n            : this._rule.R.A.length - 1;\n        let t = this._rule.R.A[r];\n        exp = exp.replace('A', t);\n      }\n\n      if (exp.includes('O')) {\n        let r = Math.round(Math.random() * (this._rule.R.O.length - 1));\n        let t = this._rule.R.O[r];\n        exp = exp.replace('O', t);\n      }\n\n      if (exp.includes('Z')) {\n        let r = Math.round(Math.random() * (this._rule.R.Z.length - 1));\n        let t = this._rule.R.Z[r];\n        exp = exp.replace('Z', t);\n      }\n    }\n\n    return exp;\n  }\n\n  private _getWrongExpression(): string {\n    let correctExp = Array.from(this._getCorrectExpression().replace(/ /g, ''));\n    let indexOfExp = Math.round(Math.random() * (correctExp.length - 1));\n\n    if (this._rule.R.Z.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    } else if (this._rule.R.O.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      }\n    } else if (['(', ')'].includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    }\n\n    return correctExp.join(' ');\n  }\n\n  public generateCorrectExpression(): void {\n    const exp = this._getCorrectExpression();\n    this.Expression = exp;\n  }\n\n  public generateWrongExpression(): void {\n    const exp = this._getWrongExpression();\n    this.Expression = exp;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GrammarModule.html":{"url":"modules/GrammarModule.html","title":"module - GrammarModule","body":"\n                   \n\n\n\n\n    Modules\n    GrammarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GrammarModule\n\n\n\ncluster_GrammarModule_providers\n\n\n\ncluster_GrammarModule_declarations\n\n\n\n\nGrammarComponent\n\nGrammarComponent\n\n\n\nGrammarModule\n\nGrammarModule\n\nGrammarModule -->\n\nGrammarComponent->GrammarModule\n\n\n\n\n\nGrammarGraphComponent\n\nGrammarGraphComponent\n\nGrammarModule -->\n\nGrammarGraphComponent->GrammarModule\n\n\n\n\n\nGrammarGraphService\n\nGrammarGraphService\n\nGrammarModule -->\n\nGrammarGraphService->GrammarModule\n\n\n\n\n\nGrammarService\n\nGrammarService\n\nGrammarModule -->\n\nGrammarService->GrammarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/grammar/grammar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GrammarComponent\n                        \n                        \n                            GrammarGraphComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GrammarGraphService\n                        \n                        \n                            GrammarService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GrammarComponent } from './grammar.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FormsModule } from '@angular/forms';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { GrammarGraphComponent } from './cyto-graph/grammar-graph.component';\nimport { GrammarService } from './grammar.service';\nimport { GrammarGraphService } from './cyto-graph/grammar-graph.service';\n\n@NgModule({\n  declarations: [GrammarComponent, GrammarGraphComponent],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRadioModule,\n    FormsModule,\n  ],\n  providers: [GrammarService, GrammarGraphService],\n})\nexport class GrammarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GrammarService.html":{"url":"injectables/GrammarService.html","title":"injectable - GrammarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GrammarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/grammar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animatedRulesStream\n                            \n                            \n                                currentIndex\n                            \n                            \n                                rules\n                            \n                            \n                                speed\n                            \n                            \n                                state\n                            \n                            \n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                onBegin\n                            \n                            \n                                onEnd\n                            \n                            \n                                onNext\n                            \n                            \n                                onPause\n                            \n                            \n                                onPlay\n                            \n                            \n                                onPrevious\n                            \n                            \n                                onReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/grammar/grammar.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit(rules: RuleSetInterface[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rules\n                                    \n                                                RuleSetInterface[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBegin\n                        \n                    \n                \n            \n            \n                \nonBegin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEnd\n                        \n                    \n                \n            \n            \n                \nonEnd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNext\n                        \n                    \n                \n            \n            \n                \nonNext()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPause\n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPlay\n                        \n                    \n                \n            \n            \n                \nonPlay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPrevious\n                        \n                    \n                \n            \n            \n                \nonPrevious()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grammar/grammar.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animatedRulesStream\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuleSetInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speed\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(2)\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('stop')\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { startWith, switchMap, takeWhile, tap } from 'rxjs/operators';\nimport { BehaviorSubject, interval, Observable, Subject } from 'rxjs';\n\nimport { RuleSetInterface } from './grammar.model';\nimport { SPEED } from '../app.config';\n\ntype StateType = 'stop' | 'start';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GrammarService {\n  rules: RuleSetInterface[] = [];\n  animatedRulesStream: Subject = new Subject();\n  timer!: Observable;\n  speed: BehaviorSubject = new BehaviorSubject(2);\n  state: BehaviorSubject = new BehaviorSubject('stop');\n  currentIndex: number = -1;\n\n  constructor() {\n    this.speed.subscribe((v) => {\n      this.timer = interval(SPEED[v]);\n    });\n  }\n\n  init(rules: RuleSetInterface[]) {\n    this.rules = rules;\n  }\n\n  onPlay() {\n    this.speed\n      .pipe(\n        switchMap((val) => interval(SPEED[val])),\n        takeWhile(() => this.state.value === 'start'),\n        tap((n) => {})\n      )\n      .subscribe(() => {\n        setTimeout(() => {\n          if (this.currentIndex === this.rules.length - 1) {\n            this.onEnd();\n          } else {\n            this.onNext();\n          }\n        });\n      });\n    this.state.next('start');\n  }\n\n  onPause() {\n    this.state.next('stop');\n  }\n\n  onReset() {\n    this.currentIndex = -1;\n    this.state.next('stop');\n    this.animatedRulesStream.next([]);\n  }\n\n  onNext() {\n    if (this.currentIndex  -1) {\n      this.currentIndex--;\n    }\n\n    this.animatedRulesStream.next(this.rules.slice(0, this.currentIndex + 1));\n  }\n\n  onBegin() {\n    this.onReset();\n  }\n\n  onEnd() {\n    this.state.next('stop');\n    this.animatedRulesStream.next(this.rules);\n    this.currentIndex = this.rules.length - 1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GrammarState.html":{"url":"interfaces/GrammarState.html","title":"interface - GrammarState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GrammarState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/slice/grammar.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            grammar\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        grammar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grammar:         GrammarModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GrammarModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport * as grammarActions from './grammar.action';\nimport { ExpressionGrammarModel, GrammarModel } from '../grammar.model';\nimport { AppState } from '../../store/rootReducer';\n\nexport interface GrammarState {\n  grammar: GrammarModel;\n}\n\nexport const initialState: GrammarState = {\n  grammar: new ExpressionGrammarModel(''),\n};\n\nconst grammarReducer = createReducer(\n  initialState,\n  on(grammarActions.getGrammar, (state) => ({ ...state, grammar: state.grammar }))\n);\n\nexport const grammarSelector = (state: AppState) => state.grammar;\n\n// export const selectFetaureGrammar = createFeatureSelector('grammar');\n\nexport const selectGrammarSelector = createSelector(grammarSelector, (state: GrammarState) => state.grammar);\n\nexport default function reducer(state: GrammarState | undefined, action: Action) {\n  return grammarReducer(state, action);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/login/login.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/login/login.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              \n                Email\n                \n                  \n                  \n                    \n                  \n                \n              \n              \n                Password\n                \n                  \n                  \n                    \n                  \n                \n              \n              \n                \n                  \n                 Remember me\n                \n              \n              \n                \n                  Login\n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      Email                                                                                                                                                      Password                                                                                                                                                                                         Remember me                                                                              Login                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainPageComponent.html":{"url":"components/MainPageComponent.html","title":"component - MainPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/main-page/main-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-page\n            \n\n            \n                styleUrls\n                ./main-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./main-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/main-page/main-page.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/main-page/main-page.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        main-page works!\n\n    \n\n    \n                \n                    ./main-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'main-page works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyCounterComponent.html":{"url":"components/MyCounterComponent.html","title":"component - MyCounterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyCounterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/my-counter/my-counter.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-counter\n            \n\n\n\n\n            \n                templateUrl\n                ./my-counter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decrement\n                            \n                            \n                                increment\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/my-counter/my-counter.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decrement\n                        \n                    \n                \n            \n            \n                \ndecrement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/my-counter/my-counter.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increment\n                        \n                    \n                \n            \n            \n                \nincrement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/my-counter/my-counter.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/my-counter/my-counter.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        count$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/my-counter/my-counter.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n \n@Component({\n  selector: 'app-my-counter',\n  templateUrl: './my-counter.component.html',\n})\nexport class MyCounterComponent {\n  count$: Observable\n \n  constructor() {\n    // TODO: Connect `this.count$` stream to the current store `count` state\n  }\n \n  increment() {\n    // TODO: Dispatch an increment action\n  }\n \n  decrement() {\n    // TODO: Dispatch a decrement action\n  }\n \n  reset() {\n    // TODO: Dispatch a reset action\n  }\n}\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyCounterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/navigation/navigation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/navigation/navigation.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/navigation/navigation.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        count$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/navigation/navigation.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\ninterface User{\n  id:string;\n  username:string;\n  firstName:string;\n  lastName:string;\n  email: string\n}\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n  count$: Observable;\n\n  constructor(private store: Store) {\n    this.count$ = this.store.select('count');\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n      \n      \n    \n  \n\n  \n    \n       Home \n\n       Documentation \n    \n\n    \n      \n        \n           {{ (count$ | async)!.username }}\n\n          \n             View Profile \n             Edit-Profile \n            \n            Logout\n            \n          \n        \n\n\n      \n    \n    \n      \n        Log in\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navigation.component.css\n                \n                #navbarSupportedContent {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n}\n\n.navbar {\n    padding: 0 1.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         Home        Documentation                                  {{ (count$ | async)!.username }}                       View Profile              Edit-Profile                         Logout                                                          Log in            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        count$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\ninterface User{\n  id:string;\n  username:string;\n  firstName:string;\n  lastName:string;\n  email: string\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  count$: Observable;\n\n  constructor(private store: Store) {\n    this.count$ = this.store.select('count');\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Username\n    \n      \n    \n  \n\n  \n    Vorname\n    \n      \n    \n  \n\n  \n    Name\n    \n      \n    \n  \n\n  \n    Email\n    \n      \n    \n  \n\n  \n    Edit-Profile\n\n\n    \n\n    \n                \n                    ./profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Username                      Vorname                      Name                      Email                      Edit-Profile'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PuzzleComponent.html":{"url":"components/PuzzleComponent.html","title":"component - PuzzleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PuzzleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/puzzle/puzzle.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-puzzle\n            \n\n            \n                styleUrls\n                ./puzzle.component.css\n            \n\n\n\n            \n                templateUrl\n                ./puzzle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle/puzzle.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport * as cytoscape from 'cytoscape';\nimport * as dagre from 'cytoscape-dagre';\nimport compoundDragAndDrop from 'cytoscape-compound-drag-and-drop';\n\n@Component({\n  selector: 'app-puzzle',\n  templateUrl: './puzzle.component.html',\n  styleUrls: ['./puzzle.component.css']\n})\nexport class PuzzleComponent implements OnInit {\n  ngOnInit(): void {\n    cytoscape.use( compoundDragAndDrop );\n    \n    const options = {\n      grabbedNode: node => true, // filter function to specify which nodes are valid to grab and drop into other nodes\n      dropTarget: (dropTarget, grabbedNode) => dropTarget.id === \"a\", // filter function to specify which parent nodes are valid drop targets\n      dropSibling: (dropSibling, grabbedNode) => true, // filter function to specify which orphan nodes are valid drop siblings\n      newParentNode: (grabbedNode, dropSibling) => ({}), // specifies element json for parent nodes added by dropping an orphan node on another orphan (a drop sibling). You can chose to return the dropSibling in which case it becomes the parent node and will be preserved after all its children are removed.\n      boundingBoxOptions: { // same as https://js.cytoscape.org/#eles.boundingBox, used when calculating if one node is dragged over another\n        includeOverlays: false,\n        includeLabels: true\n      },\n      overThreshold: 10, // make dragging over a drop target easier by expanding the hit area by this amount on all sides\n      outThreshold: 10 // make dragging out of a drop target a bit harder by expanding the hit area by this amount on all sides\n    };\n\n    const cy = cytoscape({\n      container: document.getElementById('cy'), // container to render in\n    \n      elements: [ // list of graph elements to start with\n        { // node a\n          data: { id: 'a' }\n        },\n        { // node b\n          data: { id: 'b' }\n        },\n        { // edge ab\n          data: { id: 'ab', source: 'a', target: 'b' }\n        }\n      ],\n    \n      style: [ // the stylesheet for the graph\n        {\n          selector: 'node',\n          style: {\n            'background-color': '#666',\n            'label': 'data(id)'\n          }\n        },\n    \n        {\n          selector: 'edge',\n          style: {\n            'width': 3,\n            'line-color': '#ccc',\n            'target-arrow-color': '#ccc',\n            'target-arrow-shape': 'triangle',\n            'curve-style': 'bezier'\n          }\n        }\n      ],\n    \n      layout: {\n        name: 'grid',\n        rows: 1\n      }\n    \n    });\n    const cdnd = (cy as any).compoundDragAndDrop(options);\n\n  }\n\n\n \n\n}\n\n    \n\n    \n        \n  \n    grammatik is-centered\n    \n  \n  \n    1\n    \n      Hint\n      Weiter\n    \n  \n\n\n    \n\n    \n                \n                    ./puzzle.component.css\n                \n                .eins{\n    background-color: lightpink;\n        display: flex;\n        justify-content: space-between;\n        flex-direction: column;\n\n}\n.zwei{\n    background-color: lightslategrey;\n}\n\n.columns {\n    height: 700px;\n    margin-bottom: 80px;\n  }\n\n  .zwei{\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n  }\n\n  .center{\n    margin: auto;\n  }\n\n#cy{\n    height: 1200px;\n    width: 1200px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      grammatik is-centered            1          Hint      Weiter      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PuzzleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PuzzleGameComponent.html":{"url":"components/PuzzleGameComponent.html","title":"component - PuzzleGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PuzzleGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/puzzle-game/puzzle-game.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-puzzle-game\n            \n\n            \n                styleUrls\n                ./puzzle-game.component.css\n            \n\n\n\n            \n                templateUrl\n                ./puzzle-game.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeLevel\n                            \n                            \n                                    Public\n                                diagramDivClassName\n                            \n                            \n                                    Public\n                                diagramModelChange\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                game\n                            \n                            \n                                    Public\n                                highestLevel\n                            \n                            \n                                    Public\n                                myDiagramComponent\n                            \n                            \n                                    Public\n                                observedDiagram\n                            \n                            \n                                    Public\n                                paletteDivClassName\n                            \n                            \n                                    Public\n                                score\n                            \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkDea\n                            \n                            \n                                    Public\n                                initDiagram\n                            \n                            \n                                    Public\n                                initPalette\n                            \n                            \n                                loadDiagram\n                            \n                            \n                                loadNextLevel\n                            \n                            \n                                nextDiagram\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                openDialog\n                            \n                            \n                                    Public\n                                reinitModel\n                            \n                            \n                                resetGame\n                            \n                            \n                                validateDiagram\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkDea\n                        \n                    \n                \n            \n            \n                \ncheckDea()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:317\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initDiagram\n                        \n                    \n                \n            \n            \n                \n                    \n                    initDiagram()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     go.Diagram\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initPalette\n                        \n                    \n                \n            \n            \n                \n                    \n                    initPalette()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     go.Palette\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDiagram\n                        \n                    \n                \n            \n            \n                \nloadDiagram(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:288\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadNextLevel\n                        \n                    \n                \n            \n            \n                \nloadNextLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:365\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextDiagram\n                        \n                    \n                \n            \n            \n                \nnextDiagram(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog(check, word)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    check\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    word\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reinitModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    reinitModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:260\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetGame\n                        \n                    \n                \n            \n            \n                \nresetGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:412\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateDiagram\n                        \n                    \n                \n            \n            \n                \nvalidateDiagram()\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/puzzle-game.component.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : parseInt(localStorage.getItem('activeLevel')!)  || 0\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        diagramDivClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'gojs-wrapper'\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        diagramModelChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:171\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Default value : game\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        highestLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : parseInt(localStorage.getItem('highestLevel')!) || 0\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        myDiagramComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DiagramComponent | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('myDiagram', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        observedDiagram\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        paletteDivClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'gojs-palette'\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Default value : parseInt(localStorage.getItem('score')!) || 0\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    diagramNodeData: game[0].nodes,\n    diagramLinkData: game[0].links,\n    diagramModelData: { prop: 'value' },\n    skipsDiagramUpdate: false,\n    paletteNodeData: []\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Default value : game[this.activeLevel].task\n                    \n                \n                    \n                        \n                                Defined in src/app/puzzle-game/puzzle-game.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport * as go from 'gojs';\nimport { initRing } from \"./shapes/shape\";\nimport { DataSyncService, DiagramComponent } from \"gojs-angular\";\nimport produce from \"immer\";\nimport { game } from \"./level\";\nimport { DeaArray, WordGenerator } from './word-generator';\nimport { WordChecker } from './word-checker';\nimport { Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n\nclass DemoForceDirectedLayout extends go.ForceDirectedLayout {\n  // Override the makeNetwork method to also initialize\n  // ForceDirectedVertex.isFixed from the corresponding Node.isSelected.\n  override makeNetwork(coll) {\n    // call base method for standard behavior\n    const net = super.makeNetwork(coll);\n    net.vertexes.each(vertex => {\n      const node = vertex.node;\n      if (node !== null) (vertex as any).isFixed = node.isSelected;\n    });\n    return net;\n  }\n}\n\n\n@Component({\n  selector: 'app-puzzle-game',\n  templateUrl: './puzzle-game.component.html',\n  styleUrls: ['./puzzle-game.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PuzzleGameComponent implements OnChanges {\n  public diagramDivClassName: string = 'gojs-wrapper';\n  public paletteDivClassName = 'gojs-palette';\n  public game = game;\n  public activeLevel = parseInt(localStorage.getItem('activeLevel')!)  || 0; \n  public highestLevel = parseInt(localStorage.getItem('highestLevel')!) || 0;\n  public score = parseInt(localStorage.getItem('score')!) || 0;\n\n  public task = game[this.activeLevel].task;\n  public observedDiagram: any = null;\n\n\n  public state: any = {\n    diagramNodeData: game[0].nodes,\n    diagramLinkData: game[0].links,\n    diagramModelData: { prop: 'value' },\n    skipsDiagramUpdate: false,\n    paletteNodeData: []\n  };\n\n  @ViewChild('myDiagram', { static: true }) public myDiagramComponent: DiagramComponent | undefined;\n\n  constructor(private cdr: ChangeDetectorRef, public dialog: MatDialog) { }\n\n  \n  openDialog(check, word) {\n    const dialogRef = this.dialog.open(DialogDataExampleDialog, {\n      width: '250px',\n      position:  {\n        bottom: \"200px\",\n        right: \"100\"\n       },\n      data: {\n        winState: check,\n        onNext : this.loadNextLevel.bind(this),\n        word,\n      },\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      //this.animal = result;\n    });\n  }\n\n  public ngOnChanges() {\n    // whenever showGrid changes, update the diagram.grid.visible in the child DiagramComponent\n    if (this.myDiagramComponent && this.myDiagramComponent.diagram instanceof go.Diagram) {\n      //console.log(this.myDiagramComponent.diagram)\n    }\n  }\n\n  \n  public ngAfterViewInit() {\n    if (this.observedDiagram) return;\n    this.observedDiagram = this.myDiagramComponent?.diagram;\n    this.cdr.detectChanges(); // IMPORTANT: without this, Angular will throw ExpressionChangedAfterItHasBeenCheckedError (dev mode only)\n\n    const appComp: any = this;\n    // listener for inspector\n    this.myDiagramComponent?.diagram.addDiagramListener('ChangedSelection', function (e) {\n      if (e.diagram.selection.count === 0) {\n        appComp.selectedNodeData = null;\n      }\n      const node = e.diagram.selection.first();\n      appComp.state = produce(appComp.state, draft => {\n        if (node instanceof go.Node) {\n          var idx = draft.diagramNodeData.findIndex(nd => nd.id == node.data.id);\n          var nd = draft.diagramNodeData[idx];\n          draft.selectedNodeData = nd;\n        } else {\n          draft.selectedNodeData = null;\n        }\n      });\n    });\n  } // end ngAfterViewInit\n\n  public initDiagram(): go.Diagram {\n    const $ = go.GraphObject.make;\n    const diagram = $(go.Diagram, {\n      'undoManager.isEnabled': true,\n      \"linkingTool.isUnconnectedLinkValid\": true,\n      \"draggingTool.dragsLink\": true,\n      \"draggingTool.isGridSnapEnabled\": true,\n      \"relinkingTool.isUnconnectedLinkValid\": true,\n      \"relinkingTool.portGravity\": 20,\n      layout: new DemoForceDirectedLayout(),\n      model: new go.GraphLinksModel({\n        linkFromPortIdProperty: \"fromPort\",\n        linkToPortIdProperty: \"toPort\",\n        nodeKeyProperty: 'id',\n        linkKeyProperty: 'key'\n      })\n    });\n\n\n\n    // define the Node template\n    diagram.nodeTemplate = $(go.Node, \"Auto\", { zOrder: -5 }, new go.Binding(\"layerName\", \"Background\"), $(go.Shape, \"Circle\", { fill: \"lightgray\" }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.Panel, \"Table\", $(go.RowColumnDefinition, {\n      column: 0, alignment: go.Spot.Left\n    }), $(go.TextBlock, {\n      column: 0,\n      row: 0,\n      columnSpan: 3,\n      editable: true,\n      alignment: go.Spot.Center,\n      font: \"bold 10pt sans-serif\",\n      margin: new go.Margin(4, 2)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()), $(go.Panel, \"Horizontal\", { column: 1, row: 1 }, $(go.Shape, {\n      width: 6,\n      height: 6,\n      portId: \"A\",\n      toLinkable: true,\n      fromLinkable: true,\n      cursor: 'pointer',\n      fromLinkableDuplicates: true,\n      toLinkableDuplicates: true,\n      fromLinkableSelfNode: true,\n      toLinkableSelfNode: true\n    }))));\n\n    diagram.linkTemplate = $(go.Link, { zOrder: 50 }, new go.Binding(\"layerName\", \"Foreground\"), new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 10,\n          background: 'white',\n          editable: true,\n          width: 30,\n          height: 30,\n          alignment: go.Spot.Center,\n          verticalAlignment: go.Spot.Center,\n          textAlign: 'center'\n        }, new go.Binding(\"text\", \"text\").makeTwoWay()));\n\n    return diagram;\n  }\n\n  public diagramModelChange = (changes: go.IncrementalData) => {\n    if (!changes) return;\n    const appComp = this;\n    this.state = produce(this.state, draft => {\n      // set skipsDiagramUpdate: true since GoJS already has this update\n      // this way, we don't log an unneeded transaction in the Diagram's undoManager history\n      draft.skipsDiagramUpdate = true;\n      draft.diagramNodeData = DataSyncService.syncNodeData(changes, draft.diagramNodeData, appComp.observedDiagram.model);\n      draft.diagramLinkData = DataSyncService.syncLinkData(changes, draft.diagramLinkData, appComp.observedDiagram.model);\n      draft.diagramModelData = DataSyncService.syncModelData(changes, draft.diagramModelData);\n      // If one of the modified nodes was the selected node used by the inspector, update the inspector selectedNodeData object\n      const modifiedNodeDatas = changes.modifiedNodeData;\n      if (modifiedNodeDatas && draft.selectedNodeData) {\n        for (let i = 0; i  {\n           draft.skipsDiagramUpdate = true;\n           draft.diagramNodeData = nodes;\n           draft.diagramLinkData = links;\n         }); */\n  };\n\n  public initPalette(): go.Palette {\n    const $ = go.GraphObject.make;\n    const palette = $(go.Palette);\n    initRing();\n\n    palette.padding = new go.Margin(100, 0, 0, 0);\n\n    // define the Node template\n    palette.nodeTemplate = $(go.Node, \"Horizontal\", {\n      height: 120, width: 80, selectionAdorned: false, cursor: 'grab'\n    }, $(go.Shape, \"Circle\", {\n      width: 30, height: 30\n    }, new go.Binding(\"stroke\", \"stroke\"), new go.Binding(\"fill\", \"color\"), new go.Binding(\"figure\")), $(go.TextBlock, {\n      margin: 2, font: \"bold 16px sans-serif\"\n    }, new go.Binding(\"text\", \"internal\")), $(go.TextBlock, { margin: 2, font: \" 11px sans-serif\" }, new go.Binding(\"text\", \"key\")),);\n\n    palette.linkTemplate = $(go.Link, \n      {\n      height: 120, selectionAdornmentTemplate: $(go.Adornment, \"Link\", $(go.Shape, {\n        isPanelMain: true, fill: null, stroke: \"deepskyblue\", strokeWidth: 0\n      }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }))\n    },\n     {\n      routing: go.Link.AvoidsNodes, curve: go.Link.JumpOver, corner: 5, toShortLength: 4\n    }, new go.Binding(\"points\"), $(go.Shape,  // the link path shape\n      { isPanelMain: true, strokeWidth: 2 }), $(go.Shape,  // the arrowhead\n        { toArrow: \"Standard\", stroke: null }), $(go.TextBlock, {\n          margin: 4, background: 'white'\n        }, new go.Binding(\"text\", \"key\"))),\n\n      palette.model = new go.GraphLinksModel([  // specify the contents of the Palette\n        { key: \"Ende\", color: \"white\", internal: \"\", stroke: \"black\", figure: 'Ring' }, \n        {key: \"Knoten\", color: \"white\", internal: \"\", stroke: \"black\"},\n      ], [// the Palette also has a disconnected Link, which the user can drag-and-drop\n        { key: 'Start', points: new go.List().addAll([new go.Point(10, 0), new go.Point(70, 0)]) },\n\n      ]);\n\n    return palette;\n  }\n\n  public reinitModel() {\n\n    let text = \"Bist du dir sicher?!\\nOK or Cancel.\";\n    if (confirm(text) == true) {\n      text = \"You pressed OK!\";\n      if (this.myDiagramComponent) {\n        this.loadDiagram(this.activeLevel);\n      }\n    } else {\n      text = \"You canceled!\";\n    }\n  }\n\n\n  nextDiagram(value: number) {\n    if (this.myDiagramComponent) {\n      localStorage.setItem('activeLevel', value.toString());\n      this.activeLevel = value;\n      this.task = game[value].task\n      this.myDiagramComponent.clear();\n      this.state = produce(this.state, draft => {\n        draft.skipsDiagramUpdate = false;\n        draft.diagramNodeData = game[value].nodes;\n        draft.diagramLinkData = game[value].links as any;\n      });\n    }\n  }\n\n  loadDiagram(value: number) {\n    if(value  {\n          draft.skipsDiagramUpdate = false;\n          draft.diagramNodeData = game[value].nodes;\n          draft.diagramLinkData = game[value].links as any;\n        });\n      }\n    }\n\n  }\n\n  validateDiagram() {\n    const wordGenerator = new WordGenerator();\n    /*const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }*/\n    //console.log(wordGenerator.generateWords(deaObject));\n\n    //console.log(wordGenerator.generateRandomWords([\"1\", \"0\"]));\n\n    //console.log(\"validate data\", this.state);\n  }\n  checkDea() {\n  \n\n    if (this.activeLevel === 0) {\n      this.openDialog(true, \"\");\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n     if(!deaObject.links.find(link => link.key === \"Start\")){\n            alert(\"Bitte füge ein StartLink hinzu\");\n            return;\n       } \n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n    const referenzautomat = game[this.activeLevel].solution;\n\n\n    let isCorrect = true;\n    let word;\n    \n    for (let i = 0; i  this.highestLevel){\n        localStorage.setItem('highestLevel', this.activeLevel.toString());\n        this.highestLevel = this.activeLevel;\n        this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n      }\n      this.nextDiagram(this.activeLevel);\n      return;\n    }\n\n    const wordChecker = new WordChecker();\n    const deaObject: DeaArray = {\n      nodes: this.state.diagramNodeData,\n      links: this.state.diagramLinkData\n    }\n\n    const randomGeneratedArray = game[this.activeLevel].randomWords();\n\n    const referenzautomat = game[this.activeLevel].solution;\n    for (let i = 0; i  this.highestLevel){\n      localStorage.setItem('highestLevel', this.activeLevel.toString());\n      this.highestLevel = this.activeLevel;\n      this.score = game.levels.filter(a => a  acc + game[next].points ,0)\n    }\n    this.nextDiagram(this.activeLevel, );\n\n  }\n\n  resetGame() {\n\n    if (confirm('Bist du dir sicher das du alle Leveln und deine Stand zurücksetzen möchtest?')) {\n      localStorage.setItem('activeLevel', \"0\");\n      this.activeLevel = 0;\n  \n      localStorage.setItem('highestLevel',\"0\");\n      this.highestLevel = 0;\n  \n     localStorage.setItem('score', \"0\");\n     this.score = 0;\n    } else {\n      \n    }\n\n\n  }\n}\n\nexport interface DialogData {\n  winState: boolean;\n  onNext: () => void;\n  word: {\n    word: string;\n    vergleich:{\n      yourGraph: boolean;\n      referenzGraph: boolean;\n    }  ,index?: number;\n\n\n  };\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n})\nexport class DialogDataExampleDialog {\n  constructor(  public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onNwxtLevelChanged(): void {\n    this.data.onNext();\n    this.dialogRef.close();\n\n  }\n\n\n\n}\n\n\n\n\n    \n\n    \n        \n  \n  \n    Level {{level}}\n  \n  \n    \n    \n  \n\n  \n    \n    \n  \n\n\n \n  \n     RESET\n  \n\n  Aufgabe: {{task}}\n\n  ↺\n   Punkte: {{score}} \n  ▶\n\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./puzzle-game.component.css\n                \n                .gojs-wrapper {\n  background: whitesmoke;\n  position: relative;\n  width: 100%;\n  height: calc(100vh - 250px);\n}\n\n.gojs-palette {\n  background: whitesmoke;\n  width: 150px;\n  height: calc(100vh - 250px);\n  border: 1px solid black;\n  border-left: 0.5px solid black;\n}\n\n.capp {\n  display: flex;\n  position: relative;\n}\n\n.hideator {\n  width: calc(100% - 1px);\n  position: absolute;\n  top: 0;\n  right: 1;\n  background-color: whitesmoke;\n  height: 70px;\n  z-index: 3;\n}\n\n.fake-wrapper {\n  border: 1px solid black;\n  border-bottom: none;\n  border-right: none;\n  width: 149px;\n  height: 90px;\n  float: right;\n  clear: both;\n}\n\n* {\n  outline: none;\n}\n\n.haupt {\n  bottom: 20px;\n  margin: 12px auto;\n  right: calc(50% - 300px);\n  height: 40px;\n  z-index: 3;\n  display: flex;\n\n}\n\n.innen {\n  border: 3px solid lightblue;\n  padding: 1rem;\n  margin: 0 1rem;\n  line-height: 0;\n\n  \n}\n\n.task {\n  top: 2rem;\n  margin: 0 auto;\n  z-index:3;\n  background-color: white;\n  width: 500px;\n  min-height:40px;\n  right: calc(50% - 220px);\n  border: 1px solid lightseagreen;\n\n}\n\n.task-list {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  z-index:3;\n  background-color: white;\n  width: 80px;\n  border: 1px solid lightseagreen;\n}\n\n.task-list li {\n  cursor: pointer;\n}\n\n.unten{\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center; \n\n}\n\n.unten-zwei{\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center; \n}\n.zurück{\n  position: absolute;\n    top: 6px;\n    left: 234px;\n    z-index: 1000;\n}\n\nli.active{\n  background-color: darkcyan;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Level {{level}}                                  RESET    Aufgabe: {{task}}  ↺   Punkte: {{score}}   ▶  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PuzzleGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PuzzleModule.html":{"url":"modules/PuzzleModule.html","title":"module - PuzzleModule","body":"\n                   \n\n\n\n\n    Modules\n    PuzzleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PuzzleModule\n\n\n\ncluster_PuzzleModule_declarations\n\n\n\n\nPuzzleComponent\n\nPuzzleComponent\n\n\n\nPuzzleModule\n\nPuzzleModule\n\nPuzzleModule -->\n\nPuzzleComponent->PuzzleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/puzzle/puzzle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PuzzleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PuzzleComponent } from './puzzle.component';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\n\n@NgModule({\n  declarations: [PuzzleComponent],\n  imports: [\n    BrowserModule,\n    CommonModule\n  ]\n})\nexport class PuzzleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/register/register.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/register/register.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              Name\n              \n                \n              \n            \n\n            \n              Username\n              \n                \n                \n                  \n                \n                \n                  \n                \n              \n              This username is available\n            \n\n            \n                Email\n                \n                  \n                \n              \n              \n              \n                Email wiederholen\n                \n                  \n                \n              \n\n            \n              \n                \n                  \n                  I agree to the terms and conditions\n                \n              \n            \n\n\n            \n              \n                Register\n              \n              \n                Cancel\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Name                                                                                  Username                                                                                                                                                              This username is available                                        Email                                                                                                            Email wiederholen                                                                                                                                              I agree to the terms and conditions                                                                                    Register                                            Cancel                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RuleSetInterface.html":{"url":"classes/RuleSetInterface.html","title":"class - RuleSetInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RuleSetInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grammar/grammar.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                afterExp\n                            \n                            \n                                expIndex\n                            \n                            \n                                prevExp\n                            \n                            \n                                rule\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props?: RuleSetInterface)\n                    \n                \n                        \n                            \n                                Defined in src/app/grammar/grammar.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        RuleSetInterface\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        afterExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grammar/grammar.model.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface FourTuple {\n  V: string[];\n  SIG: string[];\n  R: {\n    A: string[];\n    O: string[];\n    Z: string[];\n  };\n  start: string;\n}\n\nexport class RuleSetInterface {\n  expIndex: number | null;\n  rule: string;\n  prevExp: string;\n  afterExp: string;\n\n  constructor(props?: RuleSetInterface) {\n    this.expIndex = props?.expIndex || 0;\n    this.rule = props?.rule || '';\n    this.prevExp = props?.prevExp || '';\n    this.afterExp = props?.afterExp || '';\n  }\n}\n\nexport interface GrammarModel {\n  Expression: string;\n  Valid: boolean;\n  Rule: FourTuple;\n  ruleSet: RuleSetInterface[];\n}\n\nexport class ExpressionGrammarModel implements GrammarModel {\n  private _expression: string = '';\n  private _valid: boolean = false;\n  private readonly _rule: FourTuple = {\n    V: [],\n    SIG: [],\n    R: {\n      A: [],\n      O: [],\n      Z: [],\n    },\n    start: '',\n  };\n  private _ruleSet: RuleSetInterface[] = [];\n  public value: null | string | number = null;\n\n  constructor(exp: string) {\n    this.Expression = exp;\n    this._rule = {\n      V: ['A', 'O', 'Z'],\n      SIG: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '*', '-', '/', '(', ')'],\n      R: {\n        A: ['A O A', '( A )', 'Z'],\n        O: ['+', '*', '-', '/'],\n        Z: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n      },\n      start: 'A',\n    };\n  }\n\n  get Expression(): string {\n    return this._expression;\n  }\n\n  get Rule(): FourTuple {\n    return this._rule;\n  }\n\n  get Valid(): boolean {\n    return this._valid;\n  }\n\n  private _setRuleSet(oldExp: string) {\n    let exp1 = oldExp.slice();\n    let exp2 = exp1.replace(/ /g, '');\n    let exp = exp2.split('').join(' ');\n    let rules = [];\n    let hasChanged = true;\n    const { O, Z } = this._rule.R;\n\n    let j = 0;\n    while (exp.length > 0 && j  -1) {\n        const m = exp.indexOf('A O A');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('A O A');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → A O A`;\n\n        rules.push(rule1);\n      }\n\n      if (exp.indexOf('( A )') > -1) {\n        const m = exp.indexOf('( A )');\n        const rule1 = new RuleSetInterface();\n\n        rule1.expIndex = exp.indexOf('( A )');\n        rule1.prevExp = exp;\n        exp = exp.substring(0, m) + 'A' + exp.substring(m + 5, exp.length);\n        rule1.afterExp = exp;\n        rule1.rule = `A → ( A )`;\n\n        rules.push(rule1);\n      }\n      j++;\n\n      if (startExp === exp) {\n        hasChanged = false;\n      }\n    }\n\n    if (this.isExpressionValid(oldExp) && this.isExpressionValid(oldExp) !== 0) {\n      this._ruleSet = rules.reverse();\n    } else {\n      this._ruleSet = rules.map((rule: RuleSetInterface) => ({\n        prevExp: rule.afterExp,\n        afterExp: rule.prevExp,\n        expIndex: rule.expIndex,\n        rule: rule.rule.split('').reverse().join('').replace(') A (', '( A )'),\n      }));\n    }\n  }\n\n  get ruleSet() {\n    return this._ruleSet;\n  }\n\n  set Expression(exp: string) {\n    this._expression = exp;\n\n    try {\n      this.value = this.isExpressionValid(exp);\n      this._setRuleSet(exp);\n    } catch {\n      this._setRuleSet(exp);\n      this.value = null;\n      this._expression = exp;\n    }\n  }\n\n  private static _isNegNumber(exp: string): boolean {\n    if (exp.indexOf('-') === 0) {\n      return true;\n    }\n    return !!exp.match(/\\(\\s*-\\s*/gm);\n  }\n\n  public isExpressionValid(exp: string): number {\n    let result;\n\n    const matchDoubleD = exp.match(/[0-9]\\s*[0-9]/gm);\n\n    if (matchDoubleD || ExpressionGrammarModel._isNegNumber(exp)) {\n      this._valid = false;\n    } else {\n      try {\n        result = eval(exp);\n        this.value = Number.parseFloat(result);\n        this._valid = true;\n      } catch {\n        this._valid = false;\n      }\n    }\n\n    return result;\n  }\n\n  private _hasNonTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.V.indexOf(r) >= 0);\n  }\n\n  private _hasTerminalChar(exp: string) {\n    return [...exp].some((r) => this._rule.SIG.indexOf(r) >= 0);\n  }\n\n  private _hasElementOfKind(exp: string, kind: string[]) {\n    return [...exp].some((r) => kind.indexOf(r) >= 0);\n  }\n\n  private _getCorrectExpression(): string {\n    let exp = this._rule.start;\n\n    while (this._hasNonTerminalChar(exp)) {\n      if (exp.includes('A')) {\n        let r =\n          Math.random() * (500 / exp.length) > 5\n            ? Math.round(Math.random() * (this._rule.R.A.length - 1))\n            : this._rule.R.A.length - 1;\n        let t = this._rule.R.A[r];\n        exp = exp.replace('A', t);\n      }\n\n      if (exp.includes('O')) {\n        let r = Math.round(Math.random() * (this._rule.R.O.length - 1));\n        let t = this._rule.R.O[r];\n        exp = exp.replace('O', t);\n      }\n\n      if (exp.includes('Z')) {\n        let r = Math.round(Math.random() * (this._rule.R.Z.length - 1));\n        let t = this._rule.R.Z[r];\n        exp = exp.replace('Z', t);\n      }\n    }\n\n    return exp;\n  }\n\n  private _getWrongExpression(): string {\n    let correctExp = Array.from(this._getCorrectExpression().replace(/ /g, ''));\n    let indexOfExp = Math.round(Math.random() * (correctExp.length - 1));\n\n    if (this._rule.R.Z.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    } else if (this._rule.R.O.includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = ['(', ')'][Math.round(Math.random())];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      }\n    } else if (['(', ')'].includes(correctExp[indexOfExp])) {\n      if (Math.random() * 10 > 5) {\n        correctExp[indexOfExp] = this._rule.R.Z[Math.round(Math.random() * (this._rule.R.Z.length - 1))];\n      } else {\n        correctExp[indexOfExp] = this._rule.R.O[Math.round(Math.random() * (this._rule.R.O.length - 1))];\n      }\n    }\n\n    return correctExp.join(' ');\n  }\n\n  public generateCorrectExpression(): void {\n    const exp = this._getCorrectExpression();\n    this.Expression = exp;\n  }\n\n  public generateWrongExpression(): void {\n    const exp = this._getWrongExpression();\n    this.Expression = exp;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartGameComponent.html":{"url":"components/StartGameComponent.html","title":"component - StartGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/start-game/start-game.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-start-game\n            \n\n            \n                styleUrls\n                ./start-game.component.css\n            \n\n\n\n            \n                templateUrl\n                ./start-game.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showOneUser\n                            \n                            \n                                showUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/start-game/start-game.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/start-game/start-game.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOneUser\n                        \n                    \n                \n            \n            \n                \nshowOneUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/start-game/start-game.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUser\n                        \n                    \n                \n            \n            \n                \nshowUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/start-game/start-game.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/start-game/start-game.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/start-game/start-game.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UsersService } from '../users.service';\n\ninterface User{\n  id:string;\n  username:string;\n  firstName:string;\n  lastName:string;\n  email: string\n}\n\n@Component({\n  selector: 'app-start-game',\n  templateUrl: './start-game.component.html',\n  styleUrls: ['./start-game.component.css']\n})\nexport class StartGameComponent implements OnInit {\n  currentUser: Observable;\n  level: Observable;\n\n  constructor(\n    private usersService: UsersService,\n    private store: Store ){\n    this.currentUser = this.store.select('count') as Observable;\n    this.level = this.store.select('level') as Observable;\n\n  }\n\n  showUser() {\n    this.usersService.getUser()\n      .subscribe((data: any) => {\n        console.log(data)\n      });      \n  }\n\n  showOneUser() {\n    this.usersService.getOneUser()\n      .subscribe((data: any) => {\n        //this.currentUser = data\n      });      \n  }\n\n  ngOnInit(): void {\n    this.showOneUser()\n  }\n\n}\n\n    \n\n    \n        \n    Hallo  {{ (currentUser | async)!.username }} !\n     dein aktuelles LEVEL ist: {{ (level | async)! }} \n  \n  \n    DEA PUZZLE\n    \n    \n      Start Game\n      Tutorial\n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./start-game.component.css\n                \n                \n\n.columns {\n  height: 700px;\n  margin-bottom: 80px;\n}\n\n.testy {\n    flex-direction: column-reverse;\njustify-content: space-between;\n}\n\n.nasty {\n}\n\n.first{\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n}\n\n.bottonsgroup {\n  height: 200px;\n  margin-bottom: 80px;\n}\n\n.img-start{\n    border: 1px solid lightgrey\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Hallo  {{ (currentUser | async)!.username }} !     dein aktuelles LEVEL ist: {{ (level | async)! }}         DEA PUZZLE              Start Game      Tutorial                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StartGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StartGameModule.html":{"url":"modules/StartGameModule.html","title":"module - StartGameModule","body":"\n                   \n\n\n\n\n    Modules\n    StartGameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StartGameModule\n\n\n\ncluster_StartGameModule_providers\n\n\n\ncluster_StartGameModule_declarations\n\n\n\n\nStartGameComponent\n\nStartGameComponent\n\n\n\nStartGameModule\n\nStartGameModule\n\nStartGameModule -->\n\nStartGameComponent->StartGameModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nStartGameModule -->\n\nTableComponent->StartGameModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nStartGameModule -->\n\nUsersService->StartGameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/start-game/start-game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StartGameComponent\n                        \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StartGameComponent } from './start-game.component';\nimport { TableComponent } from '../component/table/table.component';\nimport { UsersService } from '../users.service';\n\n\n\n@NgModule({\n  declarations: [\n    StartGameComponent,\n    TableComponent\n  ],\n  imports: [\n    CommonModule,\n  ],\n  providers: [UsersService],\n})\nexport class StartGameModule { \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/table/table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/table/table.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/component/table/table.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Highscore\n\n\n  \n    Rang\n    Name\n    Punkte\n  \n  \n    1\n    Najima Jaadari\n    5110\n  \n  \n    2\n    Daniel\n    1999\n  \n  \n    3\n     Maryam\n    100\n  \n\n\n    \n\n    \n                \n                    ./table.component.css\n                \n                #highscore {\n    font-family: Arial, Helvetica, sans-serif;\n    border-collapse: collapse;\n    width: 100%;\n  }\n  \n  #highscore td, #highscore th {\n    border: 1px solid #ddd;\n    padding: 8px;\n  }\n  \n  #highscore tr:nth-child(even){background-color: #f2f2f2;}\n  \n  #highscore tr:hover {background-color: #ddd;}\n  \n  #highscore th {\n    padding-top: 12px;\n    padding-bottom: 12px;\n    text-align: left;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Highscore      Rang    Name    Punkte        1    Najima Jaadari    5110        2    Daniel    1999        3     Maryam    100  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'DeaComponent', 'selector': 'app-dea'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogDataExampleDialog', 'selector': 'dialog-data-example-dialog'},{'name': 'ExampleComponent', 'selector': 'app-example'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GrammarComponent', 'selector': 'app-grammar'},{'name': 'GrammarGraphComponent', 'selector': 'app-cyto-graph'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MyCounterComponent', 'selector': 'app-my-counter'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'PuzzleComponent', 'selector': 'app-puzzle'},{'name': 'PuzzleGameComponent', 'selector': 'app-puzzle-game'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StartGameComponent', 'selector': 'app-start-game'},{'name': 'TableComponent', 'selector': 'app-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/profile.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\ninterface User{\n  id:string;\n  username:string;\n  firstName:string;\n  lastName:string;\n  email: string\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  count$: Observable;\n\n  constructor(private store: Store) {\n    this.count$ = this.store.select('count');\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User-1.html":{"url":"interfaces/User-1.html","title":"interface - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/start-game/start-game.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UsersService } from '../users.service';\n\ninterface User{\n  id:string;\n  username:string;\n  firstName:string;\n  lastName:string;\n  email: string\n}\n\n@Component({\n  selector: 'app-start-game',\n  templateUrl: './start-game.component.html',\n  styleUrls: ['./start-game.component.css']\n})\nexport class StartGameComponent implements OnInit {\n  currentUser: Observable;\n  level: Observable;\n\n  constructor(\n    private usersService: UsersService,\n    private store: Store ){\n    this.currentUser = this.store.select('count') as Observable;\n    this.level = this.store.select('level') as Observable;\n\n  }\n\n  showUser() {\n    this.usersService.getUser()\n      .subscribe((data: any) => {\n        console.log(data)\n      });      \n  }\n\n  showOneUser() {\n    this.usersService.getOneUser()\n      .subscribe((data: any) => {\n        //this.currentUser = data\n      });      \n  }\n\n  ngOnInit(): void {\n    this.showOneUser()\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User-2.html":{"url":"interfaces/User-2.html","title":"interface - User-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/component/navigation/navigation.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\ninterface User{\n  id:string;\n  username:string;\n  firstName:string;\n  lastName:string;\n  email: string\n}\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n  count$: Observable;\n\n  constructor(private store: Store) {\n    this.count$ = this.store.select('count');\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOneUser\n                            \n                            \n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOneUser\n                        \n                    \n                \n            \n            \n                \ngetOneUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private http: HttpClient) { }\n\n  getUser() {\n    return this.http.get(\"http://localhost:3000/user\");\n  }\n\n  getOneUser() {\n    return this.http.get(\"http://localhost:3000/user/current\");\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WordChecker.html":{"url":"classes/WordChecker.html","title":"class - WordChecker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WordChecker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/word-checker.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkBeginning\n                            \n                            \n                                checkWordRekursive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkBeginning\n                        \n                    \n                \n            \n            \n                \ncheckBeginning(dea: DeaArray, word: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-checker.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dea\n                                    \n                                                DeaArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkWordRekursive\n                        \n                    \n                \n            \n            \n                \ncheckWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-checker.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dea\n                                    \n                                                DeaArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentNode\n                                    \n                                                DeaNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeaArray, DeaNode } from \"./word-generator\";\n\nexport class WordChecker {\n\n    checkBeginning(dea: DeaArray, word: string): {value: boolean, index: number} {\n        \n               \n       /* if(dea.links.filter(link => link.to === undefined)){\n            alert(\"Bitte füge ein StartLink hinzu\");\n       } */\n\n        const currentStartLink = dea.links.find(link => link.key === \"Start\");\n        const currentNode = dea.nodes.find(node => node.id === currentStartLink!.to);\n        //console.log(\"Beginn:\",word)\n        return this.checkWordRekursive(dea, word, currentNode!, 0);\n    }\n\n    checkWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number): {value: boolean, index: number} {\n        //console.log(word, index)\n        if (word === \"\") {\n            //console.log(currentNode);\n            if (currentNode!.figure === \"Ring\") {\n                return {value: true, index};\n            } else {\n                return {value: false, index};\n            }\n        }\n\n        const outgoingLinks = dea.links.filter(link => link.from === currentNode!.id);\n        const foundLinks = outgoingLinks.filter(link => link?.text?.includes(word[0]));\n        //console.log(\"foundLinkSLänge\",foundLinks.length);\n        \n        if(foundLinks.length > 1){\n            throw new Error(\"ausgehende Kanten müssen eindeutig definiert sein!\");\n        }\n\n        const foundLink = foundLinks[0];\n\n        //console.log(\"Outlinks\",outgoingLinks);\n        //console.log(\"foundlink\",foundLink);\n\n        if (foundLink && foundLink!.text?.length > 0) {\n            word = word.substring(1);\n            const nextNodeElement = dea.nodes.find(node => node.id === foundLink!.to)\n            return this.checkWordRekursive(dea, word, nextNodeElement!, index + 1);\n        } else {\n            return {value: false, index};\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WordGenerator.html":{"url":"classes/WordGenerator.html","title":"class - WordGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WordGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/puzzle-game/word-generator.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateRandomWord\n                            \n                            \n                                generateRandomWords\n                            \n                            \n                                generateWord\n                            \n                            \n                                generateWordRekursive\n                            \n                            \n                                generateWords\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomWord\n                        \n                    \n                \n            \n            \n                \ngenerateRandomWord(arr)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-generator.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomWords\n                        \n                    \n                \n            \n            \n                \ngenerateRandomWords(arr)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-generator.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateWord\n                        \n                    \n                \n            \n            \n                \ngenerateWord(dea: DeaArray)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-generator.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dea\n                                    \n                                                DeaArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateWordRekursive\n                        \n                    \n                \n            \n            \n                \ngenerateWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-generator.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dea\n                                    \n                                                DeaArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    word\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentNode\n                                    \n                                                DeaNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateWords\n                        \n                    \n                \n            \n            \n                \ngenerateWords(dea: DeaArray)\n                \n            \n\n\n            \n                \n                    Defined in src/app/puzzle-game/word-generator.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dea\n                                    \n                                                DeaArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface DeaLink {\n    key: number | \"Start\", from: number, to: number, text: string\n}\n\nexport interface DeaNode {\n    id: number, text: string, figure?: string\n}\n\nexport interface DeaArray {\n    nodes: DeaNode[],\n    links: DeaLink[]\n}\n\nexport class WordGenerator {\n\n    generateWordRekursive(dea: DeaArray, word: string, currentNode: DeaNode, index: number): string | null {\n        if (index > 1000) {\n            return null;\n        }\n        // If (Teste ob Node Enpunkt ist)\n        if (currentNode.figure === \"Ring\" && Math.random() > 0.6) {\n            return word;\n        }\n        //Alle ausgehenden Links dieses Notes\n        const outgoingLinks = dea.links.filter(link => link.from === currentNode!.id);\n        //Anzahl der Links\n        //Random ein Link auswählen\n        const randomLinkNumber = Math.floor(Math.random() * outgoingLinks.length);\n        const nextlinkElement = outgoingLinks[randomLinkNumber];\n        const nextNodeElement = dea.nodes.find(node => node.id === nextlinkElement!.to);\n\n        const LinkText = outgoingLinks[randomLinkNumber].text.split(\",\");\n\n        //Prüfe ob mehre Zeichen vorhanden sind(,)\n        if (LinkText.length > 1) {\n            const randomLinkText = Math.floor(Math.random() * LinkText.length);\n            //Text des Links in das Wort anhängen\n            word += LinkText[randomLinkText];\n        } else {\n            //Text des Links in das Wort anhängen\n            word += LinkText[0];\n        }\n\n        //Schaue worauf der Link zeigt(to)\n        return this.generateWordRekursive(dea, word, nextNodeElement!, index + 1)\n    }\n\n\n    generateWord(dea: DeaArray): string | null {\n        //Suche den Link mit \"Start\"\n        const word = \"\";\n        const currentStartLink = dea.links.find(link => link.key === \"Start\");\n        //Gehe durch den Array und suche den Node auf den der Start Link zeigt \n        const currentNode = dea.nodes.find(node => node.id === currentStartLink!.to);\n        return this.generateWordRekursive(dea, word, currentNode!, 0)\n    };\n\n    generateWords(dea: DeaArray): string[] {\n        const result: string[] = [];\n        for (let i = 0; i  arr[Math.floor(Math.random() * arr.length)])\n         .join(\"\");\n}             \n    \n\n      generateRandomWords(arr): string[] {\n        const result: string[] = [];\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            CSPEED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            dialogConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            SPEED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            initializeKeycloak\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/component/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/component/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/component/main-page/main-page.component.ts\n            \n            component\n            MainPageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/component/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/component/navigation/navigation.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/component/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/component/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/counter.actions.ts\n            \n            variable\n            increment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter.actions.ts\n            \n            variable\n            level\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter.reducer.ts\n            \n            variable\n            counterReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter.reducer.ts\n            \n            variable\n            levelReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/dea/cyto-graph/cyto-graph.component.ts\n            \n            component\n            CytoGraphComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/dea/cyto-graph/cyto-graph.service.ts\n            \n            injectable\n            CytoGraphService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dea/dea.component.ts\n            \n            component\n            DeaComponent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/dea/dea.service.ts\n            \n            injectable\n            DeaService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dea/intro.config.ts\n            \n            variable\n            introJsConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/dea/table.config.ts\n            \n            variable\n            cytoscapeConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/dea/table.config.ts\n            \n            variable\n            ELEMENT_DATA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/example/example.component.ts\n            \n            component\n            ExampleComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/grammar/cyto-graph/config.ts\n            \n            variable\n            grammarGraphConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/cyto-graph/grammar-graph.component.ts\n            \n            component\n            GrammarGraphComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/grammar/cyto-graph/grammar-graph.service.ts\n            \n            injectable\n            GrammarGraphService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.animation.ts\n            \n            variable\n            grammarAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.component.ts\n            \n            component\n            GrammarComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.model.ts\n            \n            class\n            ExpressionGrammarModel\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.model.ts\n            \n            class\n            RuleSetInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.model.ts\n            \n            interface\n            FourTuple\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.model.ts\n            \n            interface\n            GrammarModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/grammar/grammar.service.ts\n            \n            injectable\n            GrammarService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.action.ts\n            \n            variable\n            getGrammar\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.reducer.ts\n            \n            interface\n            GrammarState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.reducer.ts\n            \n            variable\n            grammarReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.reducer.ts\n            \n            variable\n            grammarSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/slice/grammar.reducer.ts\n            \n            variable\n            selectGrammarSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/utils/helpers.ts\n            \n            variable\n            codeSttring\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/grammar/utils/introJS.ts\n            \n            variable\n            GrammarIntroConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/my-counter/my-counter.component.ts\n            \n            component\n            MyCounterComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/level.ts\n            \n            variable\n            game\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/puzzle-game.component.ts\n            \n            component\n            DialogDataExampleDialog\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/puzzle-game.component.ts\n            \n            component\n            PuzzleGameComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/puzzle-game.component.ts\n            \n            class\n            DemoForceDirectedLayout\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/puzzle-game.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/shapes/shape.ts\n            \n            variable\n            initRing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/word-checker.ts\n            \n            class\n            WordChecker\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/word-generator.ts\n            \n            class\n            WordGenerator\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/word-generator.ts\n            \n            interface\n            DeaArray\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/word-generator.ts\n            \n            interface\n            DeaLink\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/puzzle-game/word-generator.ts\n            \n            interface\n            DeaNode\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/puzzle/puzzle.component.ts\n            \n            component\n            PuzzleComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/Exceptions/DEAException.ts\n            \n            class\n            DEAException\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/dialog/dialog.component.ts\n            \n            component\n            DialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/helpers/helpers.ts\n            \n            variable\n            getLastItemOfArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/helpers/helpers.ts\n            \n            variable\n            randomGenChar\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/start-game/start-game.component.ts\n            \n            component\n            StartGameComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/start-game/start-game.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            disableScroll\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            enableScroll\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            keys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            preventDefault\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            preventDefaultForScrollKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            supportsPassive\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            wheelEvent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/helpers.ts\n            \n            variable\n            wheelOpt\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.1.0\n        \n            @angular/cdk : ^13.3.9\n        \n            @angular/common : ^14.1.0\n        \n            @angular/compiler : ^14.1.0\n        \n            @angular/core : ^14.1.0\n        \n            @angular/forms : ^14.1.0\n        \n            @angular/material : ^13.3.9\n        \n            @angular/platform-browser : ^14.1.0\n        \n            @angular/platform-browser-dynamic : ^14.1.0\n        \n            @angular/router : ^14.1.0\n        \n            @nestjs/cli : ^9.0.0\n        \n            @ngrx/store : ^14.0.2\n        \n            @ngrx/store-devtools : ^14.0.2\n        \n            angular-cli-node-js-mongo-db-customers-service : ^1.0.0\n        \n            bootstrap : ^5.2.0-beta1\n        \n            bulma : ^0.9.4\n        \n            cytoscape : ^3.22.1\n        \n            cytoscape-compound-drag-and-drop : ^1.1.0\n        \n            cytoscape-dagre : ^2.4.0\n        \n            gojs : ^2.2.14\n        \n            gojs-angular : ^2.0.5\n        \n            intro.js : ^6.0.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            keycloak-angular : ^12.0.0\n        \n            keycloak-js : ^18.0.1\n        \n            prettier : ^2.7.1\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            xstate : ^4.32.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            initializeKeycloak   (src/.../app.module.ts)\n                        \n                        \n                            reducer   (src/.../grammar.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initializeKeycloak\n                        \n                    \n                \n            \n            \n                \ninitializeKeycloak(keycloak: KeycloakService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keycloak\n                                    \n                                            KeycloakService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/grammar/slice/grammar.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                            Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDEA\nThis project was generated with Angular CLI version 13.2.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GrammarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PuzzleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StartGameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DeaModule\n\n\n\ncluster_DeaModule_declarations\n\n\n\ncluster_DeaModule_providers\n\n\n\ncluster_GrammarModule\n\n\n\ncluster_GrammarModule_declarations\n\n\n\ncluster_GrammarModule_providers\n\n\n\ncluster_PuzzleModule\n\n\n\ncluster_PuzzleModule_declarations\n\n\n\ncluster_StartGameModule\n\n\n\ncluster_StartGameModule_declarations\n\n\n\ncluster_StartGameModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nAppModule -->\n\nDialogComponent->AppModule\n\n\n\n\n\nDialogDataExampleDialog\n\nDialogDataExampleDialog\n\nAppModule -->\n\nDialogDataExampleDialog->AppModule\n\n\n\n\n\nExampleComponent\n\nExampleComponent\n\nAppModule -->\n\nExampleComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainPageComponent\n\nMainPageComponent\n\nAppModule -->\n\nMainPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nPuzzleGameComponent\n\nPuzzleGameComponent\n\nAppModule -->\n\nPuzzleGameComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nPuzzleModule\n\nPuzzleModule\n\nAppModule -->\n\nPuzzleModule->AppModule\n\n\n\n\n\nCytoGraphComponent\n\nCytoGraphComponent\n\n\n\nDeaModule\n\nDeaModule\n\nDeaModule -->\n\nCytoGraphComponent->DeaModule\n\n\n\n\n\nDeaComponent\n\nDeaComponent\n\nDeaModule -->\n\nDeaComponent->DeaModule\n\n\n\n\n\nDeaService\n\nDeaService\n\nDeaModule -->\n\nDeaService->DeaModule\n\n\n\n\n\nGrammarComponent\n\nGrammarComponent\n\n\n\nGrammarModule\n\nGrammarModule\n\nGrammarModule -->\n\nGrammarComponent->GrammarModule\n\n\n\n\n\nGrammarGraphComponent\n\nGrammarGraphComponent\n\nGrammarModule -->\n\nGrammarGraphComponent->GrammarModule\n\n\n\n\n\nGrammarGraphService\n\nGrammarGraphService\n\nGrammarModule -->\n\nGrammarGraphService->GrammarModule\n\n\n\n\n\nGrammarService\n\nGrammarService\n\nGrammarModule -->\n\nGrammarService->GrammarModule\n\n\n\n\n\nPuzzleComponent\n\nPuzzleComponent\n\nPuzzleModule -->\n\nPuzzleComponent->PuzzleModule\n\n\n\n\n\nStartGameComponent\n\nStartGameComponent\n\n\n\nStartGameModule\n\nStartGameModule\n\nStartGameModule -->\n\nStartGameComponent->StartGameModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nStartGameModule -->\n\nTableComponent->StartGameModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nStartGameModule -->\n\nUsersService->StartGameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StateType   (src/.../grammar.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/grammar/grammar.service.ts\n    \n    \n        \n            \n                \n                    \n                    StateType\n                \n            \n            \n                \n                        \"stop\" | \"start\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            codeSttring   (src/.../helpers.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            counterReducer   (src/.../counter.reducer.ts)\n                        \n                        \n                            CSPEED   (src/.../app.config.ts)\n                        \n                        \n                            cytoscapeConfig   (src/.../table.config.ts)\n                        \n                        \n                            dialogConfig   (src/.../app.config.ts)\n                        \n                        \n                            disableScroll   (src/.../helpers.ts)\n                        \n                        \n                            ELEMENT_DATA   (src/.../table.config.ts)\n                        \n                        \n                            enableScroll   (src/.../helpers.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            game   (src/.../level.ts)\n                        \n                        \n                            getGrammar   (src/.../grammar.action.ts)\n                        \n                        \n                            getLastItemOfArray   (src/.../helpers.ts)\n                        \n                        \n                            grammarAnimation   (src/.../grammar.animation.ts)\n                        \n                        \n                            grammarGraphConfig   (src/.../config.ts)\n                        \n                        \n                            GrammarIntroConfig   (src/.../introJS.ts)\n                        \n                        \n                            grammarReducer   (src/.../grammar.reducer.ts)\n                        \n                        \n                            grammarSelector   (src/.../grammar.reducer.ts)\n                        \n                        \n                            increment   (src/.../counter.actions.ts)\n                        \n                        \n                            initialState   (src/.../counter.reducer.ts)\n                        \n                        \n                            initialState   (src/.../grammar.reducer.ts)\n                        \n                        \n                            initRing   (src/.../shape.ts)\n                        \n                        \n                            introJsConfig   (src/.../intro.config.ts)\n                        \n                        \n                            keys   (src/.../helpers.ts)\n                        \n                        \n                            level   (src/.../counter.actions.ts)\n                        \n                        \n                            levelReducer   (src/.../counter.reducer.ts)\n                        \n                        \n                            preventDefault   (src/.../helpers.ts)\n                        \n                        \n                            preventDefaultForScrollKeys   (src/.../helpers.ts)\n                        \n                        \n                            randomGenChar   (src/.../helpers.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            selectGrammarSelector   (src/.../grammar.reducer.ts)\n                        \n                        \n                            SPEED   (src/.../app.config.ts)\n                        \n                        \n                            supportsPassive   (src/.../helpers.ts)\n                        \n                        \n                            wheelEvent   (src/.../helpers.ts)\n                        \n                        \n                            wheelOpt   (src/.../helpers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/grammar/utils/helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        codeSttring\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  G = ( V, Σ, R, A ):\n\n  V = { A, O, Z },\n  Σ = { 0 ... 9, +, -, ∗, /, (, ) },\n  R = {\n\n      A → A O A | ( A ) | Z ,\n\n      O → * | + | - | / ,\n\n      Z → 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9\n\n  }.\n`\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/counter.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        counterReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(increment, (_state, action) => { return action.user }),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        levelReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  localStorage.getItem(\"highestLevel\"),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CSPEED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  width: '450px',\n  data: {},\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPEED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  5: 1000,\n  4: 2000,\n  3: 3000,\n  2: 4000,\n  1: 5000,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/dea/table.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cytoscapeConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  elements: {\n    nodes: [\n      { data: { id: 'start' }, position: { x: -700, y: 50 }, classes: 'inv' },\n      { data: { id: '1' }, position: { x: -600, y: 50 } },\n      { data: { id: '2' }, position: { x: -470, y: 50 } },\n      { data: { id: '3' }, position: { x: -300, y: -100 } },\n      { data: { id: '4' }, position: { x: -300, y: 200 } },\n      { data: { id: '5' }, position: { x: -100, y: 200 } },\n      { data: { id: '6' }, position: { x: -100, y: -100 } },\n      { data: { id: '7' }, position: { x: 70, y: 50 } },\n      { data: { id: '8' }, position: { x: 200, y: 50 }, classes: 'double' },\n    ],\n    edges: [\n      {\n        data: { id: '2_3', source: '2', target: '3', label: 'T' },\n        classes: 'font',\n      },\n      { data: { id: '2_4', source: '2', target: '4', label: 'P' } },\n      { data: { id: '4_5', source: '4', target: '5', label: 'V' } },\n      { data: { id: '3_6', source: '3', target: '6', label: 'X' } },\n      { data: { id: '6_7', source: '6', target: '7', label: 'S' } },\n      { data: { id: '5_7', source: '5', target: '7', label: 'V' } },\n      { data: { id: '5_6', source: '5', target: '6', label: 'P' } },\n      { data: { id: '6_4', source: '6', target: '4', label: 'X' } },\n      { data: { id: '7_8', source: '7', target: '8', label: 'E' } },\n      { data: { id: 'start_1', source: 'start', target: '1', label: '' } },\n      { data: { id: '1_2', source: '1', target: '2', label: 'B' } },\n      {\n        data: { id: 'BB', source: '3', target: '3', type: 'loop', label: 'S' },\n      },\n      {\n        data: {\n          id: 'CC',\n          source: '4',\n          target: '4',\n          type: 'loop',\n          flipLabel: true,\n          label: 'T',\n        },\n        classes: 'loop',\n      },\n    ],\n  },\n  style: [\n    {\n      selector: 'node',\n      style: {\n        'background-color': '#fff',\n        color: '#000',\n        label: 'data(id)',\n        'text-valign': 'center',\n        width: '38px',\n        height: '38px',\n        'text-halign': 'center',\n        'border-color': 'black',\n        // @ts-ignore\n        'border-opacity': '1',\n        'border-width': '1',\n      },\n    },\n    {\n      selector: 'edge',\n      style: {\n        width: 3,\n        'line-color': '#ccc',\n        color: '#000',\n        'target-arrow-color': '#ccc',\n        'target-arrow-shape': 'triangle',\n        'curve-style': 'bezier',\n        label: 'data(label)',\n        'text-background-color': 'white',\n        // @ts-ignore\n        'text-background-opacity': '1',\n        'text-background-shape': 'rectangle',\n        'text-background-padding': '3px',\n      },\n    },\n    {\n      selector: '.double',\n      style: {\n        'border-color': '#000',\n        // @ts-ignore\n        'border-opacity': '1',\n        'border-style': 'double',\n        'border-width': '3',\n      },\n    },\n    {\n      selector: '.inv',\n      style: {\n        'background-color': '#fff',\n        'line-color': '#ccc',\n        color: '#fff',\n        'border-color': 'white',\n        // @ts-ignore\n        'border-opacity': '0',\n      },\n    },\n    {\n      selector: '.loop',\n      style: {\n        // @ts-ignore\n        'loop-direction': '-130deg',\n        'loop-sweep': '90deg',\n        'target-endpoint': 'outside-to-line',\n        'source-endpoint': 'outside-to-line',\n      },\n    },\n  ],\n  layout: {\n    name: 'preset',\n    padding: 5,\n  },\n  autoungrabify: true,\n  autolock: true,\n  userPanningEnabled: false,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ELEMENT_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { q0: '1', e: 'B', q1: '2' },\n  { q0: '2', e: 'T', q1: '3' },\n  { q0: '2', e: 'P', q1: '4' },\n  { q0: '3', e: 'S', q1: '3' },\n  { q0: '3', e: 'X', q1: '6' },\n  { q0: '4', e: 'T', q1: '4' },\n  { q0: '4', e: 'V', q1: '5' },\n  { q0: '5', e: 'P', q1: '6' },\n  { q0: '5', e: 'V', q1: '7' },\n  { q0: '6', e: 'X', q1: '4' },\n  { q0: '6', e: 'S', q1: '7' },\n  { q0: '7', e: 'E', q1: '8' },\n]\n                    \n                \n\n\n        \n    \n\n    src/utils/helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        disableScroll\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  window.addEventListener('DOMMouseScroll', preventDefault, false); // older FF\n  window.addEventListener(wheelEvent, preventDefault, wheelOpt); // modern desktop\n  window.addEventListener('touchmove', preventDefault, wheelOpt); // mobile\n  window.addEventListener('keydown', preventDefaultForScrollKeys, false);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableScroll\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  window.removeEventListener('DOMMouseScroll', preventDefault, false);\n  // @ts-ignore\n  window.removeEventListener(wheelEvent, preventDefault, wheelOpt);\n  // @ts-ignore\n  window.removeEventListener('touchmove', preventDefault, wheelOpt);\n  window.removeEventListener('keydown', preventDefaultForScrollKeys, false);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { 37: 1, 38: 1, 39: 1, 40: 1 }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preventDefault\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (e: Event) => {\n  e.preventDefault();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preventDefaultForScrollKeys\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (e: Event) => {\n  // @ts-ignore\n  if (keys[e.keyCode]) {\n    preventDefault(e);\n    return false;\n  }\n  return null;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        supportsPassive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wheelEvent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 'onwheel' in document.createElement('div') ? 'wheel' : 'mousewheel'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wheelOpt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : supportsPassive ? { passive: true } : false\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/puzzle-game/level.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  0: {\n    task: 'Erzeuge einen beliebegen gueltigen Graphen',\n    nodes: [],\n    links: [],\n    points: 20\n  },\n  1: {\n    task: 'Stellen Sie die nachfolgenden Sprache als deterministische endliche Automaten dar \\n L = {w | w ∈ {0,1}∗ der nur Wörter akzeptiert, die mit 0 anfangen}',\n    nodes: [\n      { id: 0, text: \"A\" },\n      { id: 1, text: \"B\", figure: 'Ring' },\n      { id: 2, text: \"C\" }\n\n    ],\n    links: [\n      { key: 0, from: 0, to: 1, text: '0' },\n      { key: 1, from: 0, to: 2, text: '1' },\n      { key: 2, from: 2, to: 2, text: '0,1' },\n      { key: 4, from: 1, to: 1, text: '0,1' },\n    ],\n    rightWords: function () {\n      const wordGenerator = new WordGenerator();\n      const words = wordGenerator.generateWords({\n        nodes: [\n          { id: 0, text: \"A\" },\n          { id: 1, text: \"B\", figure: 'Ring' },\n          { id: 2, text: \"C\" }\n        ],\n        links: [\n          { key: \"Start\", from: -1, to: 0, text: 'Start' },\n          { key: 0, from: 0, to: 1, text: '0' },\n          { key: 1, from: 0, to: 2, text: '1' },\n          { key: 2, from: 2, to: 2, text: '0,1' },\n          { key: 4, from: 1, to: 1, text: '0,1' },\n        ],\n      });\n      return words;\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"1\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\" },\n        { id: 1, text: \"B\", figure: 'Ring' },\n        { id: 2, text: \"C\" }\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '0' },\n        { key: 1, from: 0, to: 2, text: '1' },\n        { key: 2, from: 2, to: 2, text: '0,1' },\n        { key: 4, from: 1, to: 1, text: '0,1' },\n      ],\n    },\n    points: 20\n  },\n  2: {\n    task: 'Stellen Sie die nachfolgenden Sprache als deterministische endliche Automaten dar \\n L = {w | w ∈ {0,1}∗ und an jeder ungerade Position von w eine 1 steht}',\n    nodes: [\n      { id: 0, text: \"A\", figure: 'Ring' },\n      { id: 1, text: \"B\", figure: 'Ring' },\n      { id: 2, text: \"C\" }\n    ],\n    links: [\n      { key: 0, from: 0, to: 1, text: '1' },\n      { key: 1, from: 1, to: 0, text: '0,1' },\n      { key: 2, from: 0, to: 2, text: '0' },\n      { key: 3, from: 2, to: 2, text: '0,1' }\n\n    ],\n    rightWords: function () {\n      const wordGenerator = new WordGenerator();\n      const words = wordGenerator.generateWords({\n        nodes: [\n          { id: 0, text: \"A\", figure: 'Ring' },\n          { id: 1, text: \"B\", figure: 'Ring' },\n          { id: 2, text: \"C\" }\n        ],\n        links: [\n          { key: \"Start\", from: -1, to: 0, text: 'Start' },\n          { key: 0, from: 0, to: 1, text: '1' },\n          { key: 1, from: 1, to: 0, text: '0,1' },\n          { key: 2, from: 0, to: 2, text: '0' },\n          { key: 3, from: 2, to: 2, text: '0,1' }\n        ],\n      });\n      return words;\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"1\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\", figure: 'Ring' },\n        { id: 1, text: \"B\", figure: 'Ring' },\n        { id: 2, text: \"C\" }\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '1' },\n        { key: 1, from: 1, to: 0, text: '0,1' },\n        { key: 2, from: 0, to: 2, text: '0' },\n        { key: 3, from: 2, to: 2, text: '0,1' }\n      ],\n    },\n    points: 20\n  },\n  3: {\n    task: 'Stellen Sie die nachfolgenden Sprache als deterministische endliche Automaten dar \\n L = {w | w ∈ {0,1}∗ und w entha ̈lt das Teilwort 110}',\n    nodes: [\n      { id: 0, text: \"A\" },\n      { id: 1, text: \"B\" },\n      { id: 2, text: \"C\" },\n      { id: 3, text: \"D\", figure: 'Ring' }\n    ],\n    links: [\n      { key: 0, from: 0, to: 1, text: '1' },\n      { key: 1, from: 0, to: 0, text: '0' },\n      { key: 2, from: 1, to: 0, text: '0' },\n      { key: 3, from: 1, to: 2, text: '1' },\n      { key: 4, from: 2, to: 2, text: '1' },\n      { key: 5, from: 2, to: 3, text: '0' },\n      { key: 6, from: 3, to: 3, text: '0,1' }\n    ],\n    rightWords: function () {\n      const wordGenerator = new WordGenerator();\n      const words = wordGenerator.generateWords({\n        nodes: [\n          { id: 0, text: \"A\" },\n          { id: 1, text: \"B\" },\n          { id: 2, text: \"C\" },\n          { id: 3, text: \"D\", figure: 'Ring' }\n        ],\n        links: [\n          { key: \"Start\", from: -1, to: 0, text: 'Start' },\n          { key: 0, from: 0, to: 1, text: '1' },\n          { key: 1, from: 0, to: 0, text: '0' },\n          { key: 2, from: 1, to: 0, text: '0' },\n          { key: 3, from: 1, to: 2, text: '1' },\n          { key: 4, from: 2, to: 2, text: '1' },\n          { key: 5, from: 2, to: 3, text: '0' },\n          { key: 6, from: 3, to: 3, text: '0,1' }\n        ],\n      });\n      return words;\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"1\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\" },\n        { id: 1, text: \"B\" },\n        { id: 2, text: \"C\" },\n        { id: 3, text: \"D\", figure: 'Ring' }\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '1' },\n        { key: 1, from: 0, to: 0, text: '0' },\n        { key: 2, from: 1, to: 0, text: '0' },\n        { key: 3, from: 1, to: 2, text: '1' },\n        { key: 4, from: 2, to: 2, text: '1' },\n        { key: 5, from: 2, to: 3, text: '0' },\n        { key: 6, from: 3, to: 3, text: '0,1' }\n      ],\n    },\n    points: 20\n  },\n  4: {\n    task: 'Stellen Sie die nachfolgenden Sprache als deterministische endliche Automaten dar L = {w | w ∈ {0,1}}∗ und w hat eine Länge von maximal 2',\n    nodes: [\n      { id: 0, text: \"A\", },\n      { id: 1, text: \"B\", },\n      { id: 2, text: \"C\", figure: 'Ring' },\n      { id: 3, text: \"D\" }\n    ],\n    links: [\n      { key: \"Start\", from: -1, to: 0, text: 'Start' },\n      { key: 0, from: 0, to: 1, text: '0,1' },\n      { key: 1, from: 1, to: 2, text: '0,1' },\n      { key: 2, from: 2, to: 3, text: '0,1' },\n      { key: 3, from: 3, to: 3, text: '0,1' },\n    ],\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\", },\n        { id: 1, text: \"B\", },\n        { id: 2, text: \"C\", figure: 'Ring' },\n        { id: 3, text: \"D\" }\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '0,1' },\n        { key: 1, from: 1, to: 2, text: '0,1' },\n        { key: 2, from: 2, to: 3, text: '0,1' },\n        { key: 3, from: 3, to: 3, text: '0,1' },\n      ],//Referenzautomat\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"1\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    points: 20\n  },\n  5: {\n    task: '̈Gegeben sei die Sprache L1 = {w ∈ {0} *| |w| ist durch 3 teilbar}. Geben Sie einen deterministischen endlichen Automaten in Graphdarstellung an, der L1 erkennt',\n    nodes: [\n      { id: 0, text: \"A\", color: \"white\", figure: 'Ring' },\n      { id: 1, text: \"B\" },\n      { id: 2, text: \"C\" },\n    ],\n    links: [\n      { key: 0, from: 0, to: 1, text: '0' },\n      { key: 1, from: 1, to: 2, text: '0' },\n      { key: 2, from: 2, to: 0, text: '0' },\n    ],\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\", color: \"white\", figure: 'Ring' },\n        { id: 1, text: \"B\" },\n        { id: 2, text: \"C\" },\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '0' },\n        { key: 1, from: 1, to: 2, text: '0' },\n        { key: 2, from: 2, to: 0, text: '0' },\n      ],\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"0\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    points: 20\n  },\n  6: {\n    task: '̈Gegeben sei die Sprache L1 = {w ∈ {0} * : |w| ≥ 2 }. Geben Sie einen deterministischen endlichen Automaten in Graphdarstellung an, der L1 erkennt',\n    nodes: [\n      { id: 0, text: \"A\"},\n      { id: 1, text: \"B\" },\n      { id: 2, text: \"C\", figure: 'Ring'},\n    ],\n    links: [\n      { key: 0, from: 0, to: 1, text: '0,1' },\n      { key: 1, from: 1, to: 2, text: '0,1' },\n      { key: 2, from: 2, to: 2, text: '0,1' },\n    ],\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\"},\n        { id: 1, text: \"B\" },\n        { id: 2, text: \"C\", figure: 'Ring'},\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '0,1' },\n        { key: 1, from: 1, to: 2, text: '0,1' },\n        { key: 2, from: 2, to: 2, text: '0,1' },\n      ],\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"0\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    points: 20\n  },\n  7: {\n    task: '̈Gegeben sei die Sprache L1 = {w ∈ {0} * : |w| ≤ 2 }. Geben Sie einen deterministischen endlichen Automaten in Graphdarstellung an, der L1 erkennt',\n    nodes: [\n      { id: 0, text: \"A\", figure: 'Ring'},\n      { id: 1, text: \"B\", figure: 'Ring'},\n      { id: 2, text: \"C\", figure: 'Ring'},\n      { id: 3, text: \"D\"}\n    ],\n    links: [\n      { key: 0, from: 0, to: 1, text: '0,1' },\n      { key: 1, from: 1, to: 2, text: '0,1' },\n      { key: 2, from: 2, to: 3, text: '0,1' },\n      { key: 3, from: 3, to: 3, text: '0,1' }\n    ],\n    solution: {\n      nodes: [\n        { id: 0, text: \"A\", figure: 'Ring'},\n        { id: 1, text: \"B\", figure: 'Ring'},\n        { id: 2, text: \"C\", figure: 'Ring'},\n        { id: 3, text: \"D\"}\n      ],\n      links: [\n        { key: \"Start\", from: -1, to: 0, text: 'Start' },\n        { key: 0, from: 0, to: 1, text: '0,1' },\n        { key: 1, from: 1, to: 2, text: '0,1' },\n        { key: 2, from: 2, to: 3, text: '0,1' },\n        { key: 3, from: 3, to: 3, text: '0,1' }\n      ],\n    },\n    randomWords: function () {\n      const wordGenerator = new WordGenerator();\n      const randomGeneratedArray = wordGenerator.generateRandomWords([\"0\", \"0\"])\n\n      return randomGeneratedArray;\n    },\n    points: 20\n  },\n  levels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/grammar/slice/grammar.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getGrammar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Grammar] test')\n                    \n                \n\n\n        \n    \n\n    src/app/shared/helpers/helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLastItemOfArray\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (arr: any[]): any[] => {\n  return arr[arr.length - 1];\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomGenChar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...args: any): string => {\n  if (args.length === 1) {\n    return args[0];\n  }\n\n  return Math.random() \n                    \n                \n\n\n        \n    \n\n    src/app/grammar/grammar.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        grammarAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['', '2', '3'].map((v) =>\n  trigger(`onVisible${v}`, [\n    transition(':enter', [\n      animate(\n        '{{speed1}}s 0s ease-in-out',\n        keyframes([\n          style({ transform: 'translateY(-30%)', color: 'black', opacity: 0 }),\n          style({ transform: 'translateY(0%)', color: 'black', opacity: 1 }),\n        ])\n      ),\n      animate(\n        '{{speed2}}s 0s ease-in-out',\n        keyframes([style({ color: 'blue', 'font-weight': 'bold' }), style({ color: 'black', 'font-weight': 'normal' })])\n      ),\n    ]),\n    transition(':leave', [\n      animate(\n        '0.2s 0s ease-out',\n        keyframes([\n          style({ transform: 'translateY(0%)', opacity: 1 }),\n          style({ transform: 'translateY(-30%)', opacity: 0 }),\n        ])\n      ),\n    ]),\n  ])\n)\n                    \n                \n\n\n        \n    \n\n    src/app/grammar/cyto-graph/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        grammarGraphConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  boxSelectionEnabled: false,\n  autounselectify: true,\n  layout: {\n    name: 'dagre',\n    nodeDimensionsIncludeLabels: true,\n  },\n  style: [\n    {\n      selector: 'node',\n      style: {\n        label: 'data(label)',\n        'background-color': 'white',\n        'text-valign': 'center',\n        width: '30px',\n        height: '30px',\n        'text-halign': 'center',\n        'border-color': 'black',\n        'border-opacity': '1',\n        'border-width': '1',\n      },\n    },\n    {\n      selector: 'edge',\n      style: {\n        width: 4,\n        'target-arrow-shape': 'triangle',\n        padding: '50px',\n        'line-color': '#9dbaea',\n        'target-arrow-color': '#9dbaea',\n        'curve-style': 'bezier',\n      },\n    },\n  ],\n  elements: {\n    nodes: [\n      { data: { id: 'nx', label: 'A' } },\n      { data: { id: 'n0', label: 'A' } },\n      { data: { id: 'n1', label: 'A' } },\n      { data: { id: 'n2', label: 'A' } },\n      { data: { id: 'n3', label: 'A' } },\n      { data: { id: 'n4', label: 'A' } },\n      { data: { id: 'n5', label: 'A' } },\n    ],\n    edges: [\n      { data: { source: 'nx', target: 'n0' } },\n      { data: { source: 'n0', target: 'n1' } },\n      { data: { source: 'n0', target: 'n2' } },\n      { data: { source: 'n2', target: 'n3' } },\n      { data: { source: 'n2', target: 'n4' } },\n      { data: { source: 'n2', target: 'n5' } },\n    ],\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/grammar/utils/introJS.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GrammarIntroConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Options\n\n                    \n                \n                \n                    \n                        Default value : {\n  steps: [\n    {\n      element: '#tool0',\n      intro: `\n        Starte Tour!: Startet eine Tour\n        Dokumentation: Externer Link zur Dokumentation\n          `,\n      position: 'left',\n    },\n    {\n      element: '#tool1',\n      intro: `\n        Generiere korrekten Ausdruck: Erzeugt ein zuf&auml;lligen richtigen Ausdruck\n        Generiere falschen Ausdruck: Erzeugt ein zuf&auml;lligen falschen Ausdruck\n          `,\n      position: 'left',\n    },\n    {\n      element: '#tool2',\n      intro:\n        'Eingabe: Manuelle Eingabe des StringsAuswertung: Auswertung des Ausdrucks (automatisch). Erscheint erst nach Eingabe!',\n      position: 'left',\n    },\n    {\n      element: '#tool3',\n      intro: 'Zeigt das 4-Tuple an mit: G = Grammatik, V = Nicht-Terminalzeichen, Σ = Terminalzeichen, R = Regeln',\n      position: 'right',\n    },\n    {\n      element: '#tool4',\n      intro:\n        'Animation der Ableitungen. Text kann markiert und kopiert werden. Zudem kann auch hier ein Ausdruck erzeugt werden. Bei falscher Eingabe wird der reverse Modus angezeigt',\n      position: 'right',\n    },\n    {\n      element: '#tool5',\n      intro:\n        'Steuerung der Animation (zum start, ein schritt zurueck, abspielen, pause, ein schritt nach vor, zum Ende)',\n      position: 'right',\n    },\n    {\n      element: '#tool6',\n      intro: 'Einstellung der Animationsgeschwindigkeit',\n      position: 'right',\n    },\n  ],\n  showBullets: true,\n  showButtons: true,\n  exitOnOverlayClick: false,\n  keyboardNavigation: true,\n  nextLabel: 'Weiter',\n  prevLabel: 'Zur&uuml;ck',\n  doneLabel: 'Fertig',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/grammar/slice/grammar.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        grammarReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(grammarActions.getGrammar, (state) => ({ ...state, grammar: state.grammar }))\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grammarSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: AppState) => state.grammar\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GrammarState\n\n                    \n                \n                \n                    \n                        Default value : {\n  grammar: new ExpressionGrammarModel(''),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectGrammarSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(grammarSelector, (state: GrammarState) => state.grammar)\n                    \n                \n\n\n        \n    \n\n    src/app/counter.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        increment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Counter Component] Increment', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[general] userLevel', props())\n                    \n                \n\n\n        \n    \n\n    src/app/puzzle-game/shapes/shape.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initRing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n\n  let GeneratorEllipseSpot1 = new go.Spot(0.156, 0.156);\n  let GeneratorEllipseSpot2 = new go.Spot(0.844, 0.844);\n\n  go.Shape.defineFigureGenerator(\"Ring\", function(shape, w, h) {\n    let rad = w / 2;\n    let geo = new go.Geometry();\n    let fig = new go.PathFigure(w, w / 2, true);  // clockwise\n\n    geo.add(fig);\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 0, 360, rad, rad, rad, rad).close());\n\n    let rad2 = Math.max(rad - 3, 0);\n\n    if (rad2 > 0) {\n      fig.add(new go.PathSegment(go.PathSegment.Move, w / 2 + rad2, w / 2))\n      fig.add(new go.PathSegment(go.PathSegment.Arc, 0, -360, rad, rad, rad2, rad2).close());\n    }\n\n    geo.spot1 = GeneratorEllipseSpot1;\n    geo.spot2 = GeneratorEllipseSpot2;\n    geo.defaultStretch = go.GraphObject.Uniform;\n\n    return geo;\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/app/dea/intro.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        introJsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Options\n\n                    \n                \n                \n                    \n                        Default value : {\n  steps: [\n    {\n      element: '#tool0',\n      intro: `\n        Generiere korrektes Reber-Wort: Erzeugt durch die DEA ein zufaelliges Wort, welches ein Reber Wort ist\n        Generiere falsches Reber-Wort: Erzeugt durch die DEA ein zufaelliges Wort, welches KEIN Reber Wort ist\n        Tech-Stack: Zeigt die Tools an, womit diese Seite implementiert wurde\n        Theorie: Wiki Artikel zu dem Thema DEA\n        Starte Tour!: Startet eine Tour\n          `,\n      position: 'left',\n    },\n    {\n      element: '#tool1',\n      intro:\n        'Eingabe: Manuelle Eingabe des StringsAusgabe: Auswertung des Wortes (automatisch)',\n      position: 'left',\n    },\n    {\n      element: '#tool2',\n      intro:\n        'Die Tabelle zeigt die Zustaende und das Eingabealphabet in Zusammenhang mit der Übergangsfunktion. Beim Ausfuehren des Codes, werden die Zeilen markiert',\n      position: 'right',\n    },\n    {\n      element: '#tool3',\n      intro:\n        'Canvas man kann intuitiv durch gedrueckt halten und bewegen, oder mit scroll sowohl zoomen, als auch den Graphen bewegen. Beim starten der Animation, werden die Zustaende animiert',\n      position: 'right',\n    },\n    {\n      element: '#tool4',\n      intro:\n        'Zeigt die Zustandsmenge (Q), das Eingabealphabet (E) und die Finalzustaende (F) an',\n      position: 'right',\n    },\n    {\n      element: '#tool5',\n      intro:\n        'Steuerung der Animation (zum start, ein schritt zurueck, abspielen, pause, ein schritt nach vor, zum Ende)',\n      position: 'right',\n    },\n    {\n      element: '#tool6',\n      intro: 'Einstellung der Animationsgeschwindigkeit',\n      position: 'right',\n    },\n  ],\n  showBullets: true,\n  showButtons: true,\n  exitOnOverlayClick: false,\n  keyboardNavigation: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
